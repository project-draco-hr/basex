{
  if (n < 2)   return n == 0 ? setTree(EmptyTree.<M,E>getInstance()) : setNodeLike(arr[0]);
  final int mid=n / 2;
  final Node<M,E>[] left=DeepTree.slice(arr,0,mid), right=DeepTree.slice(arr,mid,n);
  return setTree(DeepTree.get(left,right,size));
}
