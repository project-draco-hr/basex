{
  if (n == 0)   return setTree(EmptyTree.<M,E>getInstance());
  if (n == 1)   return setNodeLike(arr[0]);
  final int mid=n / 2;
  final Node<M,E>[] left=DeepTree.slice(arr,0,mid), right=DeepTree.slice(arr,mid,n);
  return setTree(DeepTree.get(left,right,size));
}
