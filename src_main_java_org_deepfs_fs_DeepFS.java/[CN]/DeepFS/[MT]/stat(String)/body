{
  final String method="[stat] ";
  final DeepStat sbuf=new DeepStat();
  if (path.equals("/"))   return rootStat;
  final int pre=path2pre(path);
  if (pre == -1) {
    Util.debug(method + path + " (-1)");
    return null;
  }
  final byte[] mtime=attr(pre,mtimeID);
  final byte[] ctime=attr(pre,ctimeID);
  final byte[] atime=attr(pre,atimeID);
  final byte[] mode=attr(pre,modeID);
  final byte[] size=attr(pre,sizeID);
  final byte[] uid=attr(pre,uidID);
  final byte[] gid=attr(pre,gidID);
  final byte[] nlink=attr(pre,nlinkID);
  Util.debug("pre/inode: " + pre + "\natime: "+ string(atime)+ "\nmtime: "+ string(mtime)+ "\nctime: "+ string(ctime)+ "\nmode: "+ string(mode)+ "\nsize: "+ string(size)+ "\nuid: "+ string(uid)+ "\ngid: "+ string(gid)+ "\nnlink: "+ string(nlink));
  sbuf.stino=pre;
  sbuf.statimespec=Long.parseLong(string(atime));
  sbuf.stmode=Long.parseLong(string(mode));
  sbuf.stsize=Long.parseLong(string(size));
  sbuf.stuid=Long.parseLong(string(uid));
  sbuf.stgid=Long.parseLong(string(gid));
  sbuf.stnlink=Long.parseLong(string(nlink));
  Util.debug(method + path + " ino: "+ sbuf.stino);
  return sbuf;
}
