{
  int p=pre;
  int k=data.kind(p);
  while (p > 0 && !isValidNode(p,fileID,dirID,deepfsID,fsmlID)) {
    p=data.parent(p,k);
    k=data.kind(p);
  }
  final IntList il=new IntList();
  while (p >= 0 && k != Data.DOC) {
    if (!isFSnode(p))     return EMPTY;
    il.add(p);
    p=data.parent(p,k);
    k=data.kind(p);
  }
  final TokenBuilder tb=new TokenBuilder();
  final int s=il.size();
  if (s > 1) {
    final byte[] b=mountpoint(il.get(s - 2));
    if (b.length != 0) {
      tb.add(b);
      if (!endsWith(b,'/'))       tb.add('/');
    }
  }
  for (int i=s - 3; i >= 0; i--) {
    final byte[] node=replace(name(il.get(i)),'\\','/');
    tb.add(node);
    if (!endsWith(node,'/'))     tb.add('/');
  }
  final byte[] node=tb.finish();
  return endsWith(node,'/') ? substring(node,0,node.length - 1) : node;
}
