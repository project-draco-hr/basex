{
  PrintOutput sub=new PrintOutput("INEX/submission.xml");
  XMLSerializer xml=new XMLSerializer(sub,false,true);
  xml.openElement(token("efficiency-submission"));
  xml.openElement(token("efficiency-submission"),token("participant-id"),token("1111111"),token("run-id"),token("1111111"),token("taks"),token(task[0]),token("type"),token(type[0]),token("query"),token(query[0]),token("sequential"),token("yes"));
  xml.emptyElement(token("topic-fields"),token("co_title"),token("no"),token("cas_title"),token("no"),token("xpath_title"),token("yes"),token("text_predicates"),token("no"),token("description"),token("no"),token("narrative"),token("no"));
  xml.emptyElement(token("general_description"));
  xml.emptyElement(token("ranking_description"));
  xml.emptyElement(token("indexing_description"));
  xml.emptyElement(token("caching_description"));
  for (int j=0; j < numq; j++) {
    xml.openElement(token("topic"),token("topic-id"),token(topicid[j]),token("total_time_ms"),token(times[j]));
    xml.openElement(token("result"));
    xml.openElement(token("file"));
    xml.text(token("wikpedia"));
    xml.closeElement();
    Item a;
    int r=1;
    while (results[j] != null && (a=results[j].next()) != null) {
      if (a instanceof Str) {
        xml.openElement(token("path"));
        xml.text(a.str());
        xml.closeElement();
        xml.openElement(token("rank"));
        xml.text(token(r++));
        xml.closeElement();
      }
 else       if (a instanceof Dbl) {
        xml.openElement(token("rsv"));
        xml.text(a.str());
        xml.closeElement();
      }
    }
    xml.closeElement();
    xml.closeElement();
  }
  xml.closeElement();
}
