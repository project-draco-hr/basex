{
  for (int l=0; l < stps.length; ++l) {
    final Step s=axisStep(l);
    if (s == null)     continue;
    final Axis sa=s.axis;
    if (l == 0) {
      if (root instanceof CAttr) {
        if (sa == CHILD || sa == DESC) {
          ctx.compInfo(WARNDESC,root);
          return;
        }
      }
 else       if (root instanceof Root || root instanceof Value && ((Value)root).type == NodeType.DOC || root instanceof CDoc) {
        if (sa != CHILD && sa != DESC && sa != DESCORSELF && (sa != SELF && sa != ANCORSELF || s.test != Test.NOD && s.test != Test.DOC)) {
          ctx.compInfo(WARNDOC,root,sa);
          return;
        }
      }
    }
 else {
      boolean warning=true;
      final Step ls=axisStep(l - 1);
      if (ls == null)       continue;
      final Axis lsa=ls.axis;
      if (sa == SELF || sa == DESCORSELF) {
        if (s.test == Test.NOD)         continue;
        warning=lsa == ATTR && s.test.type != NodeType.ATT || ls.test == Test.TXT && s.test != Test.TXT;
        if (!warning) {
          if (sa == DESCORSELF)           continue;
          final QNm n0=ls.test.name;
          final QNm n1=s.test.name;
          if (n0 == null || n1 == null || n0.local().length == 0 || n1.local().length == 0)           continue;
          warning=!n1.eq(n0);
        }
      }
 else       if (sa == FOLLSIBL || sa == PRECSIBL) {
        warning=lsa == ATTR;
      }
 else       if (sa == DESC || sa == CHILD || sa == ATTR) {
        warning=lsa == ATTR || ls.test == Test.TXT || ls.test == Test.COM || ls.test == Test.PI || (sa == ATTR && s.test == Test.NSP);
      }
 else       if (sa == PARENT || sa == ANC) {
        warning=ls.test == Test.DOC;
      }
      if (warning) {
        ctx.compInfo(WARNSELF,s);
        return;
      }
    }
  }
}
