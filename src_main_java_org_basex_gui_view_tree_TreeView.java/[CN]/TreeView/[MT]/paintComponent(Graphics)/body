{
  final Context c=gui.context;
  final Data data=c.data;
  if (data == null)   return;
  super.paintComponent(g);
  gui.painting=true;
  smooth(g);
  g.setFont(font);
  fontHeight=g.getFontMetrics().getHeight();
  roots=gui.context.current.nodes;
  if (paintType == PAINT_NEW_INIT) {
    sub=new TreeSubtree(data);
    tr=new TreeRects(gui.prop);
  }
  if (paintType == PAINT_NEW_INIT || paintType == PAINT_NEW_CONTEXT)   numRoots=sub.generateBorders(c);
  if (paintType == PAINT_NEW_INIT || paintType == PAINT_NEW_CONTEXT || paintType == PAINT_NEW_WINDOW_SIZE || paintType == -1 && windowSizeChanged()) {
    treedist=tr.generateRects(sub,g,c,getWidth());
    if (markedImage != null) {
      markedImage=null;
    }
    setLevelDistance();
    createNewMainImage();
    if (gui.context.marked.size() > 0)     markNodes();
  }
  g.drawImage(treeImage,0,0,getWidth(),getHeight(),this);
  if (selection) {
    if (selectRect != null) {
      final int x=selectRect.w < 0 ? selectRect.x + selectRect.w : selectRect.x;
      final int y=selectRect.h < 0 ? selectRect.y + selectRect.h : selectRect.y;
      final int w=Math.abs(selectRect.w);
      final int h=Math.abs(selectRect.h);
      g.setColor(colormark1);
      g.drawRect(x,y,w,h);
    }
    markNodes();
  }
  if (markedImage != null)   g.drawImage(markedImage,0,0,getWidth(),getHeight(),this);
  if (focus()) {
    int focused=gui.context.focused;
    if (tr.isBigRectangle(sub,frn,flv))     focused=getMostSizedNode(data,frn,flv,frect,focused);
    highlightNode(g,frn,flv,frect,focused,-1,DRAW_HIGHLIGHT);
    if (SHOW_EXTRA_INFO) {
      g.setColor(new Color(0xeeeeee));
      g.fillRect(0,getHeight() - fontHeight - 6,getWidth(),fontHeight + 6);
      final Data d=gui.context.data;
      final int k=d.kind(focused);
      final int s=d.size(focused,k);
      final int as=d.attSize(focused,k);
      g.setColor(Color.BLACK);
      g.drawString("pre: " + focused + " level: "+ flv+ "  level-size: "+ sub.getLevelSize(frn,flv)+ "  node-size: "+ (s - as)+ "  node: "+ Token.string(ViewData.tag(gui.prop,d,focused)),2,getHeight() - 6);
    }
  }
  paintType=-1;
  gui.painting=false;
}
