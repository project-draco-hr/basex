{
  final int pary=getYperLevel(lv - 1) + nodeHeight;
  final int prey=getYperLevel(lv) - 1;
  final int boRight=r.x + r.w + BORDER_PADDING - 2;
  final int boLeft=r.x + BORDER_PADDING;
  final int boTop=prey + 1;
  final Color c=getConnectionColor(t);
  if (SHOW_3D_CONN) {
    final int boBottom=prey + nodeHeight + 1;
    final int parmx=r.x + (int)((boRight - boLeft) / 2d);
    final int dis=0x111111;
    final int alpha=0x20000000;
    final int rgb=COLORS[4].getRGB();
    final Color ca=new Color(rgb + alpha - dis,false);
    final Color cb=new Color(rgb + alpha + dis,false);
    g.setColor(cb);
    g.drawPolygon(new int[]{parc,boRight,boRight},new int[]{pary,boBottom,boTop},3);
    g.drawPolygon(new int[]{parc,boLeft,boLeft},new int[]{pary,boBottom,boTop},3);
    g.setColor(c);
    g.drawPolygon(new int[]{parc,boLeft,boRight},new int[]{pary,boTop,boTop},3);
    g.setColor(Color.BLACK);
    if (parmx < parc)     g.drawLine(boRight,boBottom,parc,pary);
 else     if (parmx > parc)     g.drawLine(boLeft,boBottom,parc,pary);
  }
 else {
    g.setColor(c);
    if (boRight - boLeft > 2) {
      g.fillPolygon(new int[]{parc,boRight,boLeft},new int[]{pary,boTop,boTop},3);
    }
 else {
      g.drawLine((boRight + boLeft) / 2,boTop,parc,pary);
    }
  }
}
