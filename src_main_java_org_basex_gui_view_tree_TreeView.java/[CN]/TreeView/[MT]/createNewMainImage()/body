{
  treeImage=createImage();
  final Graphics tg=treeImage.getGraphics();
  final int rl=roots.length;
  tg.setFont(font);
  smooth(tg);
  for (int rn=0; rn < rl; ++rn) {
    final int h=sub.getSubtreeHeight(rn);
    for (int lv=0; lv < h; ++lv) {
      final boolean br=tr.bigRect(sub,rn,lv);
      final TreeRect[] lr=tr.getTreeRectsPerLevel(rn,lv);
      for (int i=0; i < lr.length; ++i) {
        final TreeRect r=lr[i];
        final int pre=sub.getPrePerIndex(rn,lv,i);
        drawRectangle(tg,rn,lv,r,pre,Draw.RECTANGLE);
      }
      if (br) {
        final TreeRect r=lr[0];
        final int ww=r.x + r.w - 1;
        final int x=r.x + 1;
        drawBigRectSquares(tg,lv,x,ww,4);
      }
    }
    if (SHOW_CONN_MI) {
      final TreeRect rr=tr.getTreeRectPerIndex(rn,0,0);
      highlightDescendants(tg,rn,0,rr,roots[rn],getRectCenter(rr),Draw.CONNECTION);
    }
  }
}
