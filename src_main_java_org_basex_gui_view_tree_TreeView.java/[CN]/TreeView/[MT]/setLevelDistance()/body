{
  final int h=getHeight() - BOTTOM_MARGIN;
  int lvs=0;
  for (int i=0; i < numRoots; ++i) {
    final int th=sub.getSubtreeHeight(i);
    if (th > lvs)     lvs=th;
  }
  nodeHeight=MAX_NODE_HEIGHT;
  int lD;
  while ((lD=(int)((h - lvs * nodeHeight) / (double)(lvs - 1))) < (nodeHeight <= BEST_NODE_HEIGHT ? MIN_LEVEL_DISTANCE : BEST_LEVEL_DISTANCE) && nodeHeight >= MIN_NODE_HEIGHT)   nodeHeight--;
  levelDistance=lD < MIN_LEVEL_DISTANCE ? MIN_LEVEL_DISTANCE : lD > MAX_LEVEL_DISTANCE ? MAX_LEVEL_DISTANCE : lD;
  final int ih=(int)((h - (levelDistance * (lvs - 1) + lvs * nodeHeight)) / 2d);
  topMargin=ih < TOP_MARGIN ? TOP_MARGIN : ih;
}
