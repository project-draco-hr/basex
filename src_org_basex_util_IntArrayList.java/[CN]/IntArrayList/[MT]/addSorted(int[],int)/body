{
  found=false;
  int l=0, r=size, m=size / 2;
  int res=-1;
  if (r > 1) {
    while (r > l) {
      m=(r + l) >>> 1;
      res=cmp(v,list[m],keylength);
      if (res == -1)       r=m - 1;
 else       if (res == 1)       l=m + 1;
 else {
        found=true;
        return m;
      }
    }
  }
  if (l < size) {
    res=cmp(v,list[l],keylength);
    if (res == 0) {
      found=true;
      return l;
    }
    if (res == 1)     l++;
  }
  if (size == list.length) {
    final int[][] tmp=new int[size << 1][];
    System.arraycopy(list,0,tmp,0,l);
    tmp[l]=new int[v.length + 1];
    System.arraycopy(v,0,tmp[l],0,v.length);
    tmp[l][v.length]=1;
    if (size - l > 0)     System.arraycopy(list,l,tmp,l + 1,size - l);
    list=tmp;
    size++;
  }
 else {
    System.arraycopy(list,l,list,l + 1,size - l);
    list[l]=new int[v.length + 1];
    System.arraycopy(v,0,list[l],0,v.length);
    list[l][v.length]=1;
    size++;
  }
  return l;
}
