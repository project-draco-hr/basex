{
  final boolean wc=wildcards;
  final byte[] txt=text;
  final int txtl=txt.length;
  int cp=epos;
  boolean bs=false, pa=false, sn=false;
  for (; cp < txtl; cp+=cl(txt,cp)) {
    final int ch=cp(txt,cp);
    if (wc && !bs) {
      bs=ch == '\\';
      if (bs)       continue;
      if (ch == '.')       break;
    }
    if (!sn && (ch == '.' || ch == '!' || ch == '?')) {
      sn=true;
      ++sentence;
      punct=ch;
    }
 else     if (!pa && ch == '\n') {
      pa=true;
      ++paragraph;
    }
 else     if (lod(ch)) {
      if (bs) {
        --cp;
        bs=false;
      }
      break;
    }
    bs=false;
  }
  final int lp=cp;
  spos=cp;
  for (; cp < txtl; cp+=cl(txt,cp)) {
    int ch=cp(txt,cp);
    if (wc && !bs) {
      bs=ch == '\\';
      if (bs)       continue;
      if (ch == '.') {
        ch=cp + 1 < txtl ? txt[cp + 1] : 0;
        if (ch == '?' || ch == '*' || ch == '+') {
          ++cp;
        }
 else         if (ch == '{') {
          while (++cp < txtl && txt[cp] != '}')           ;
          if (cp == txtl)           break;
        }
        continue;
      }
    }
    if (!lod(ch)) {
      if (bs)       --cp;
      break;
    }
    bs=false;
  }
  epos=cp;
  ++pos;
  return lp < cp;
}
