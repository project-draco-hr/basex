{
  final double[] tl=new double[size];
  int len=0;
  tl[0]=0;
  for (int i=1; i < size; ++i) {
    if (len < keys[i].length)     len=keys[i].length;
    if (stats[i] == null)     continue;
    tl[i]=stats[i].count;
  }
  len+=2;
  final int[] ids=Array.createOrder(tl,false);
  final TokenBuilder tb=new TokenBuilder();
  tb.add(Text.LI_STRUCTURE + Text.HASH + Text.NL);
  tb.add(Text.LI_ENTRIES + (size - 1) + Text.NL);
  for (int i=0; i < size - 1; ++i) {
    final int s=ids[i];
    if (stats[s] == null)     continue;
    final byte[] key=keys[s];
    tb.add("  ");
    tb.add(key);
    for (int j=0; j < len - key.length; ++j)     tb.add(' ');
    tb.add(stats[s] + Text.NL);
  }
  return tb.finish();
}
