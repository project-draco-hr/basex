{
  final int runs=prop.num(Prop.RUNS);
  try {
    for (int i=0; i < runs; i++) {
      qp=new QueryProcessor(query,context);
      progress(qp);
      qp.parse();
      pars+=per.getTime();
      if (i == 0)       plan(qp,false);
      qp.compile();
      if (i == 0)       plan(qp,true);
      comp+=per.getTime();
      result=qp.query();
      eval+=per.getTime();
      if (i + 1 < runs)       qp.close();
    }
    execInfo();
    return true;
  }
 catch (  final QueryException ex) {
    BaseX.debug(ex);
    return error(ex.getMessage());
  }
catch (  final ProgressException ex) {
    return error(Prop.server ? SERVERTIME : "");
  }
catch (  final Exception ex) {
    ex.printStackTrace();
    return error(BaseX.bug());
  }
}
