{
switch (func) {
case ERROR:
    final int al=expr.length;
  String code=FOER;
Object num=0;
String msg=FUNERR1;
if (al != 0) {
final Item it=expr[0].atomic(ctx);
if (it == null) {
if (al == 1) Err.or(input,XPEMPTY,desc());
}
 else {
code=Token.string(((QNm)checkType(it,Type.QNM)).ln());
num=null;
}
if (al > 1) {
msg=Token.string(checkEStr(expr[1],ctx));
}
}
try {
Err.or(input,new Object[]{code,num,msg});
return null;
}
 catch (final QueryException ex) {
if (al > 2) ex.iter=expr[2].iter(ctx);
throw ex;
}
case TRACE:
final Iter ir=SeqIter.get(expr[0].iter(ctx));
msg=Token.string(checkEStr(expr[1],ctx)) + " " + ir;
ctx.evalInfo(msg);
return ir;
case ENVS:
final SeqIter si=new SeqIter();
for (final Object k : System.getenv().keySet().toArray()) {
si.add(Str.get(k));
}
return si;
default :
return super.iter(ctx);
}
}
