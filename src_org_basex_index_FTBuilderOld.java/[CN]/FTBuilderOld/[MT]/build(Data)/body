{
  index=new CTArray();
  total=data.size;
  for (id=0; id < total; id++) {
    checkStop();
    if (data.kind(id) == Data.TEXT)     index(data.text(id),id);
  }
  if (Prop.debug) {
    System.out.println("Trie in Hauptspeicher gehalten:");
    Performance.gc(5);
    System.out.println(Performance.getMem());
  }
  final String db=data.meta.dbname;
  if (index != null && index.countNodes != 1) {
    final CTArrayX indexX=new CTArrayX(index);
    indexX.finish();
    if (Prop.debug) {
      System.out.println("Trie in komprimierte Form ??berf??hrt.");
      Performance.gc(5);
      System.out.println(Performance.getMem());
    }
    indexX.doTransport();
    index=null;
    if (Prop.debug) {
      System.out.println("Trie auf Platte geschrieben.");
      Performance.gc(5);
      System.out.println(Performance.getMem());
    }
    DataOutput out=new DataOutput(db,DATAFTX + 'x');
    out.writeStructureWithOffsets(indexX.sizeNodes);
    out.close();
    out=new DataOutput(db,DATAFTX + 'y');
    out.writeStructureWithOffsets(indexX.sizeData);
    out.close();
    out=new DataOutput(db,DATAFTX + 'v');
    out.writeBytesArrayFlat(indexX.nodes);
    out.close();
    out=new DataOutput(db,DATAFTX + 'd');
    out.writeIntArray(indexX.data);
    out.close();
  }
  return new WordsCTA(db,(DiskData)data);
}
