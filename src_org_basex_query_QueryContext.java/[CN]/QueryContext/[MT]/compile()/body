{
  if (nodes != null && nodes.ftpos != null)   ftdata=new FTPosData();
  try {
    if (nodes != null) {
      final Data data=nodes.data;
      for (int d=0; d < docs; d++) {
        final int p=nodes.nodes[d];
        if (data.kind(p) == Data.DOC) {
          addDoc(new DBNode(data,p));
          rootDocs++;
        }
      }
      if (rootDocs == 0) {
        addDoc(new DBNode(data,0));
        rootDocs++;
      }
      final SeqIter si=new SeqIter();
      if (root instanceof AxisPath && ((AxisPath)root).root instanceof Root) {
        for (int d=0; d < docs; d++)         si.add(doc[d]);
      }
 else {
        for (int n=0; n < nodes.size(); n++)         si.add(new DBNode(data,nodes.nodes[n]));
      }
      item=si.finish();
      final NodIter ni=new NodIter();
      for (int d=0; d < docs; d++)       ni.add(doc[d]);
      addColl(ni,token(data.meta.dbname));
    }
    if (Prop.allInfo)     compInfo(QUERYCOMP);
    fun.comp(this);
    vars.comp(this);
    root=root.comp(this);
    if (Prop.allInfo)     compInfo(QUERYRESULT + "%",root);
  }
 catch (  final StackOverflowError e) {
    if (Prop.debug)     e.printStackTrace();
    Err.or(XPSTACK);
  }
}
