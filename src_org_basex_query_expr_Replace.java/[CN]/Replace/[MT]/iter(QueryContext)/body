{
  if (value)   return Iter.EMPTY;
  final Iter t=expr[0].iter(ctx);
  Item i=t.next();
  if (i == null)   Err.or(UPSEQEMP,t);
  if (t.next() != null)   Err.or(UPTRGMULT,t);
  if (!(i instanceof Nod))   Err.or(UPTRGMULT,t);
  final Nod trgtN=(Nod)i;
  final Nod par=trgtN.parent();
  if (par == null || Nod.kind(par.type) == Data.DOC)   Err.or(UPNOPAR,t);
  final Iter r=SeqIter.get(expr[1].iter(ctx));
  i=r.next();
  if (value) {
    Err.or(UPIMPL,"foobanchu");
    if (r.next() != null)     Err.or(UPTRGMULT,i);
    if (!(i instanceof Str || i instanceof QNm))     Err.or(UPDATE,i);
    return Iter.EMPTY;
  }
  final boolean trgIsAttr=Nod.kind(trgtN.type) == Data.ATTR ? true : false;
  while (i != null) {
    if ((Nod.kind(i.type) == Data.ATTR) ^ trgIsAttr)     Err.or(UPDATE,t);
    i=r.next();
  }
  r.reset();
  ctx.updates.addPrimitive(new ReplacePrimitive(trgtN,r,trgIsAttr));
  return Iter.EMPTY;
}
