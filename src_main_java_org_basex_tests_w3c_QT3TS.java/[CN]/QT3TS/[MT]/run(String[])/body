{
  parseArguments(args);
  final Performance perf=new Performance();
  new Set(Prop.CHOP,false).execute(ctx);
  final XQuery qdoc=new XQuery("doc(' " + path + "/"+ CATALOG+ "')",ctx);
  final XQValue doc=qdoc.value();
  final String version=asString("*:catalog/@version",doc);
  Util.outln(NL + "QT3 Test Suite " + version);
  Util.out("Parsing queries");
  final XQuery qenv=new XQuery("*:catalog/*:environment",ctx).context(doc);
  for (  final XQItem ienv : qenv)   genvs.add(new QT3Env(ctx,ienv));
  qenv.close();
  final XQuery qset=new XQuery("for $f in //*:test-set/@file return string($f)",ctx).context(doc);
  for (  final XQItem it : qset)   testSet(it.getString());
  qset.close();
  qdoc.close();
  Util.outln(NL + "Writing log file...");
  final PrintOutput po=new PrintOutput(path + "qt3ts.log");
  po.println("TEST RESULTS ___________________________");
  po.println(NL + "Total #Queries: " + total);
  po.println("Correct Results: " + correct);
  po.println("Conformance: " + pc(correct,total));
  po.print(NL);
  po.println("WRONG __________________________________");
  po.print(NL);
  po.print(wrong.finish());
  if (verbose || !single.isEmpty()) {
    po.println("CORRECT ________________________________");
    po.print(NL);
    po.print(right.finish());
  }
  po.close();
  Util.outln(NL + "Total #Queries: " + total);
  Util.outln("Correct Results: " + correct);
  Util.outln("Conformance: " + pc(correct,total));
  Util.outln("Total time: " + perf);
}
