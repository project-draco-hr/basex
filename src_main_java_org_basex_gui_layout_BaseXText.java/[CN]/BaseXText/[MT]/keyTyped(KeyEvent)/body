{
  if (undo == null || control(e) || DELNEXT.is(e) || DELPREV.is(e) || ESCAPE.is(e))   return;
  text.pos(text.cursor());
  if (text.start() != -1)   text.delete();
  if (ENTER.is(e)) {
    final StringBuilder sb=new StringBuilder().append(e.getKeyChar());
    int s=0, t=0;
    for (int p=text.pos() - 1; p >= 0; p--) {
      final byte b=text.text[p];
      if (b == 0x0a) {
        break;
      }
 else       if (b == 0x09) {
        t++;
      }
 else       if (b == ' ') {
        s++;
      }
 else {
        t=0;
        s=0;
      }
    }
    for (int p=0; p < t; p++)     sb.append('\t');
    for (int p=0; p < s; p++)     sb.append(' ');
    text.add(sb.toString());
  }
 else {
    text.add(String.valueOf(e.getKeyChar()));
  }
  text.setCaret();
  rend.calc();
  showCursor(2);
  e.consume();
}
