{
  analyze(http);
  final ArrayList<RestXqFunction> list=new ArrayList<RestXqFunction>();
  for (  final RestXqModule mod : modules.values())   mod.add(http,list);
  if (list.isEmpty())   return null;
  RestXqFunction first=list.get(0);
  if (list.size() > 1) {
    Collections.sort(list);
    first=list.get(0);
    if (first.compareTo(list.get(1)) == 0) {
      final TokenBuilder tb=new TokenBuilder();
      for (      final RestXqFunction rxf : list) {
        if (first.compareTo(rxf) != 0)         break;
        tb.add(Prop.NL).add(rxf.function.info.toString());
      }
      first.error(PATH_CONFLICT,first.path,tb);
    }
  }
  return first;
}
