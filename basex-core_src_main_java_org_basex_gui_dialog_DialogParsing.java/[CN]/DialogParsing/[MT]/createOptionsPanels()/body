{
  xmlopts.add(intparse);
  xmlopts.add(new BaseXLabel(H_INT_PARSER,true,false));
  xmlopts.add(dtd);
  xmlopts.add(stripNS);
  xmlopts.add(chopWS);
  xmlopts.add(new BaseXLabel(H_CHOP_WS,false,false).border(0,0,8,0));
  xmlopts.add(new BaseXLabel());
  final boolean rsen=CatalogWrapper.available();
  final BaseXBack fl=new BaseXBack(new TableLayout(2,2,8,0));
  usecat.setEnabled(rsen);
  fl.add(usecat);
  fl.add(new BaseXLabel());
  cfile.setEnabled(rsen);
  fl.add(cfile);
  browsec.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    final ActionEvent e){
      catchoose();
    }
  }
);
  browsec.setEnabled(rsen);
  fl.add(browsec);
  xmlopts.add(fl);
  if (!rsen) {
    final BaseXBack rs=new BaseXBack(new TableLayout(2,1));
    rs.add(new BaseXLabel(HELP1_USE_CATALOG).color(GUIConstants.DGRAY));
    rs.add(new BaseXLabel(HELP2_USE_CATALOG).color(GUIConstants.DGRAY));
    xmlopts.add(rs);
  }
  final boolean avl=HTMLParser.available();
  htmlopts.add(new BaseXLabel(avl ? H_HTML_PARSER : H_NO_HTML_PARSER).border(0,0,12,0));
  if (avl) {
    final BaseXBack p=new BaseXBack(new TableLayout(1,2,8,0));
    p.add(new BaseXLabel(PARAMETERS + COL,true,true));
    p.add(params);
    htmlopts.add(p);
  }
  BaseXBack p=new BaseXBack(new TableLayout(1,2,8,4));
  p.add(new BaseXLabel(ENCODING + COL,true,true));
  p.add(jencoding);
  jsonopts.add(p);
  jsonopts.add(jsonml);
  p=new BaseXBack(new TableLayout(2,2,8,4));
  p.add(new BaseXLabel(ENCODING + COL,true,true));
  p.add(cencoding);
  p.add(new BaseXLabel(SEPARATOR,true,true));
  p.add(separator);
  csvopts.add(p);
  csvopts.add(header);
  p=new BaseXBack(new TableLayout(1,2,8,4));
  p.add(new BaseXLabel(ENCODING + COL,true,true));
  p.add(tencoding);
  textopts.add(p);
  textopts.add(lines);
  final boolean ip=intparse.isSelected();
  final boolean uc=usecat.isSelected();
  intparse.setEnabled(!uc);
  usecat.setEnabled(!ip && CatalogWrapper.available());
  cfile.setEnabled(uc);
  browsec.setEnabled(uc);
}
