{
  int tl=tok.length;
  if (token[tl] == null) {
    token[0].list[0][0]++;
    IntArrayList ial=new IntArrayList();
    int[] itok=new int[tl + 1];
    for (int t=0; t < tl; t++)     itok[t]=tok[t];
    itok[tl]=1;
    ial.add(itok);
    token[tl]=ial;
    ftpre[tl]=new IntArrayList();
    ftpre[tl].add(new int[]{pre});
    ftpos[tl]=new IntArrayList();
    ftpos[tl].add(new int[]{pos});
  }
 else {
    int[] itok=new int[tl];
    for (int t=0; t < tl; t++)     itok[t]=tok[t];
    int m=token[tl].addSorted(itok,itok.length);
    if (token[tl].found) {
      token[tl].list[m][tl]++;
      int n=token[tl].list[m][token[tl].list[m].length - 1] - 1;
      if (n == ftpre[tl].list[m].length) {
        ftpre[tl].list[m]=Array.extend(ftpre[tl].list[m]);
        ftpos[tl].list[m]=Array.extend(ftpos[tl].list[m]);
      }
      ftpre[tl].list[m][n]=pre;
      ftpos[tl].list[m][n]=pos;
    }
 else {
      ftpre[tl].addAt(new int[]{pre},m);
      ftpos[tl].addAt(new int[]{pos},m);
    }
  }
}
