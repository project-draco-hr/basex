{
  final String exp=data.meta.prop.get(Prop.EXPORTER);
  final SerializerProp sp=new SerializerProp(exp);
  final IOFile root=new IOFile(target);
  root.md();
  final HashSet<String> exported=new HashSet<String>();
  final IntList il=data.resources.docs();
  if (!data.isEmpty()) {
    for (int i=0, is=il.size(); i < is; i++) {
      final int pre=il.get(i);
      final IO file=root.merge(Token.string(data.text(pre,true)));
      final IOFile dir=new IOFile(file.dir());
      if (!dir.exists())       dir.md();
      final PrintOutput po=new PrintOutput(unique(exported,file.path()));
      final Serializer ser=Serializer.get(po,sp);
      ser.node(data,pre);
      ser.close();
      po.close();
    }
  }
  final IOFile bin=data.meta.binaries();
  for (  final String s : bin.descendants()) {
    final String u=unique(exported,new IOFile(root.path(),s).path());
    new IOFile(bin.path(),s).copyTo(new IOFile(u));
  }
}
