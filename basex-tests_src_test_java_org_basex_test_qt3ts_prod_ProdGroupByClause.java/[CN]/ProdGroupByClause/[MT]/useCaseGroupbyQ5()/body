{
  final XQuery query=new XQuery("\n" + "               <result>{\n" + "                 for $sales in $sales-records-doc/*/record\n"+ "                 let $storeno := $sales/store-number\n"+ "                 group by $storeno\n"+ "                 order by $storeno\n"+ "                 return\n"+ "                   <store number = \"{$storeno}\">{\n"+ "                     for $s in $sales\n"+ "                     order by xs:int($s/qty) descending\n"+ "                     return\n"+ "                       <product name = \"{$s/product-name}\" qty = \"{$s/qty}\"/>\n"+ "                   }</store>\n"+ "               }</result>\n"+ "      ",ctx);
  try {
    query.bind("$products-doc",node(file("prod/GroupByClause/products.xml")));
    query.bind("$sales-records-doc",node(file("prod/GroupByClause/sales-records.xml")));
    query.bind("$stores-doc",node(file("prod/GroupByClause/stores.xml")));
    query.bind("$books-doc",node(file("prod/GroupByClause/books.xml")));
    result=new QT3Result(query.value());
  }
 catch (  final Throwable trw) {
    result=new QT3Result(trw);
  }
 finally {
    query.close();
  }
  test(assertSerialization("<result><store number=\"1\"><product name=\"socks\" qty=\"500\"/><product name=\"broiler\" qty=\"20\"/></store><store number=\"2\"><product name=\"toaster\" qty=\"100\"/><product name=\"toaster\" qty=\"50\"/><product name=\"socks\" qty=\"10\"/></store><store number=\"3\"><product name=\"blender\" qty=\"150\"/><product name=\"blender\" qty=\"100\"/><product name=\"toaster\" qty=\"50\"/><product name=\"shirt\" qty=\"10\"/></store></result>",false));
}
