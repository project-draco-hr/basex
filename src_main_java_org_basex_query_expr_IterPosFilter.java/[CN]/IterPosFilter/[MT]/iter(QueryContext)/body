{
  return new Iter(){
    boolean skip, direct;
    Iter iter;
    long cpos;
    @Override public Item next() throws QueryException {
      if (skip)       return null;
      if (iter == null) {
        if (off) {
          final Item it=preds[0].ebv(ctx,input);
          final long l=it.itr(input);
          final Expr e=Pos.get(l,l,input);
          if (l != it.dbl(input) || !(e instanceof Pos))           return null;
          pos=(Pos)e;
        }
        iter=ctx.iter(root);
        cpos=1;
        if (pos != null || last) {
          final long s=iter.size();
          if (s == 0)           return null;
          if (s != -1) {
            cpos=last ? s : pos.min;
            if (cpos > s)             return null;
            direct=preds.length == 1;
          }
        }
      }
      final Value cv=ctx.value;
      final long cp=ctx.pos;
      final long cs=ctx.size;
      try {
        Item item;
        if (direct) {
          item=iter.size() < cpos ? null : iter.get(cpos - 1);
          ctx.pos=cpos++;
        }
 else {
          Item lnode=null;
          while ((item=iter.next()) != null) {
            ctx.checkStop();
            ctx.size=0;
            ctx.pos=cpos++;
            if (preds(item,ctx))             break;
            lnode=item;
            ctx.pos=cp;
            ctx.size=cs;
          }
          if (last)           item=lnode;
        }
        skip=last || pos != null && pos.skip(ctx);
        if (skip && direct)         iter.reset();
        return item;
      }
  finally {
        ctx.value=cv;
        ctx.pos=cp;
        ctx.size=cs;
      }
    }
  }
;
}
