{
  if (hash == o.hash) {
    for (int i=0; i < o.size; i++) {
      if (key.eq(ii,o.keys[i])) {
        final Item[] ks=o.keys.clone();
        final Value[] vs=o.values.clone();
        ks[i]=key;
        vs[i]=value;
        return new List(hash,ks,vs);
      }
    }
    return new List(hash,Array.add(o.keys,key),Array.add(o.values,value));
  }
  final TrieNode[] ch=new TrieNode[KIDS];
  final int k=key(hash,l), ok=key(o.hash,l);
  final int nu;
  if (k == ok) {
    ch[k]=add(o,l + 1,ii);
    nu=1 << k;
  }
 else {
    ch[k]=this;
    ch[ok]=o;
    nu=1 << k | 1 << ok;
  }
  return new Branch(ch,nu,o.size + 1);
}
