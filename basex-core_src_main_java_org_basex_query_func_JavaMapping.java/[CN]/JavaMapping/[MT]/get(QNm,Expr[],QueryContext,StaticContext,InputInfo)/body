{
  final byte[] uri=qname.uri();
  final boolean java=startsWith(uri,JAVAPREF);
  final String name=camelCase(string(qname.local()));
  final String path=camelCase(toPath(java ? substring(uri,JAVAPREF.length) : uri));
  final Object jm=ctx.modLoader.findImport(path);
  if (jm != null) {
    final Method meth=getModMethod(jm,path,name,args.length,ctx,ii);
    if (meth != null)     return new JavaModuleFunc(sctx,ii,jm,meth,args);
  }
  if (!ctx.context.user.has(Perm.ADMIN))   return null;
  try {
    return new JavaFunc(sctx,ii,ctx.modLoader.findClass(path),name,args);
  }
 catch (  final ClassNotFoundException ex) {
    if (java)     throw FUNCJAVA.get(ii,path);
  }
catch (  final Throwable th) {
    throw JAVAINIT.get(ii,th);
  }
  return null;
}
