{
  final TokenBuilder m=new TokenBuilder();
  final byte[] ln=name.local();
  boolean dash=false;
  for (int p=0; p < ln.length; p+=cl(ln,p)) {
    final int ch=cp(ln,p);
    if (dash) {
      m.add(Character.toUpperCase(ch));
      dash=false;
    }
 else {
      dash=ch == '-';
      if (!dash)       m.add(ch);
    }
  }
  final String mth=m.toString();
  final String path=string(substring(name.uri(),JAVAPRE.length));
  final Object jm=ctx.modules.findImported(path);
  if (jm != null) {
    for (    final Method meth : jm.getClass().getMethods()) {
      if (meth.getName().equals(mth))       return new JavaModuleFunc(ii,jm,meth,args);
    }
  }
 else {
    try {
      return new JavaFunc(ii,ctx.modules.find(path),mth,args);
    }
 catch (    final ClassNotFoundException ex) {
      WHICHJAVA.thrw(ii,path + '.' + mth);
    }
catch (    final Throwable th) {
      Util.debug(th);
    }
  }
  throw WHICHJAVA.thrw(ii,path + '.' + mth);
}
