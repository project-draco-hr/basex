{
  if (res == null)   return Empty.SEQ;
  if (res instanceof Value)   return (Value)res;
  if (res instanceof Iter)   return ((Iter)res).value();
  final Type type=type(res);
  if (type != null)   return type.cast(res,null);
  if (!res.getClass().isArray())   return new Jav(res);
  final ItemCache ic=new ItemCache();
  if (res instanceof boolean[]) {
    for (    final boolean o : (boolean[])res)     ic.add(Bln.get(o));
  }
 else   if (res instanceof char[]) {
    ic.add(Str.get(new String((char[])res)));
  }
 else   if (res instanceof byte[]) {
    for (    final byte o : (byte[])res)     ic.add(new Int(o,AtomType.BYT));
  }
 else   if (res instanceof short[]) {
    for (    final short o : (short[])res)     ic.add(Int.get(o));
  }
 else   if (res instanceof int[]) {
    for (    final int o : (int[])res)     ic.add(Int.get(o));
  }
 else   if (res instanceof long[]) {
    for (    final long o : (long[])res)     ic.add(Int.get(o));
  }
 else   if (res instanceof float[]) {
    for (    final float o : (float[])res)     ic.add(Flt.get(o));
  }
 else   if (res instanceof double[]) {
    for (    final double o : (double[])res)     ic.add(Dbl.get(o));
  }
 else {
    for (    final Object o : (Object[])res) {
      ic.add(o instanceof Value ? (Value)o : new Jav(o));
    }
  }
  return ic.value();
}
