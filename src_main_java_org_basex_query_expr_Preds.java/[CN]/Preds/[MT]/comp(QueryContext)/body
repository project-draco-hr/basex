{
  for (  final Expr p : preds)   checkUp(p,ctx);
  Expr e=this;
  for (int p=0; p < preds.length; ++p) {
    Expr pr=preds[p].comp(ctx).compEbv(ctx);
    pr=Pos.get(CmpV.Op.EQ,pr,pr,input);
    if (pr.value()) {
      if (!pr.ebv(ctx,input).bool(input)) {
        ctx.compInfo(OPTREMOVE,desc(),pr);
        e=Empty.SEQ;
        break;
      }
      ctx.compInfo(OPTREMOVE,desc(),pr);
      preds=Array.delete(preds,p--);
    }
 else {
      preds[p]=pr;
      if (preds[p] instanceof And && !preds[p].uses(Use.POS)) {
        ctx.compInfo(OPTPRED,preds[p].desc());
        final Expr[] and=((And)preds[p]).expr;
        final int m=and.length - 1;
        final ObjList<Expr> tmp=new ObjList<Expr>(preds.length + m);
        for (int i=0; i < p; i++)         tmp.add(preds[i]);
        for (        final Expr a : and) {
          tmp.add(Function.BOOLEAN.get(input,a).compEbv(ctx));
        }
        for (int i=p + 1; i < preds.length; i++)         tmp.add(preds[i]);
        preds=tmp.toArray(new Expr[tmp.size()]);
      }
    }
  }
  return e;
}
