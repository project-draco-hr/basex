{
  final TreeBorder[] bo=new TreeBorder[maxLevel];
  if (pre == 0 && d.meta.ndocs == 1) {
    for (int i=0; i < maxLevel; ++i)     bo[i]=new TreeBorder(i,0,nodes[i].size());
    return bo;
  }
  final int[] rlp=findPre(pre);
  final int rl=rlp[0];
  final int ri=rlp[1];
  bo[rl]=new TreeBorder(rl,ri,1);
  final int np=pre + d.size(pre,d.kind(pre));
  int h=1;
  for (int i=rl + 1; i < maxLevel; ++i) {
    final int min=getMinIndex(i,pre,np);
    if (min == -1)     break;
    int c=0;
    for (int j=min; j < nodes[i].size(); ++j)     if (nodes[i].get(j) < np)     ++c;
 else     break;
    bo[i]=new TreeBorder(i,min,c);
    ++h;
  }
  final TreeBorder[] bon=new TreeBorder[h];
  System.arraycopy(bo,rl,bon,0,h);
  return bon;
}
