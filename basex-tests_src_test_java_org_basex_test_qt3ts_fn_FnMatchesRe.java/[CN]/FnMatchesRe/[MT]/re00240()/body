{
  final XQuery query=new XQuery("(every $s in tokenize('???\u0fff,????????????\u0f04\u0f05\u0f06\u0f07\u0f08\u0f09\u0f0a\u0f0b\u0f0c\u0f0d\u0f0e\u0f0f\u0f10\u0f11\u0f12?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\u0f3a\u0f3b\u0f3c\u0f3d??????????????????????????????\u0f48????????????????????????????????????????????????????????????????????????????????????????????????????????????\u0f6d\u0f6e\u0f6f\u0f70????????????????????????????????????????????????????????????\u0f85??????????????????????????????????????????????????????\u0f98????????????????????????????????????????????????????????????????????????????????????????????????????????????\u0fbd?????????????????????????????????????????????\u0fcd??????\u0fd0\u0fd1\u0fd2\u0fd3\u0fd4????????????\u0fd9\u0fda\u0fdb\u0fdc\u0fdd\u0fde\u0fdf\u0fe0\u0fe1\u0fe2\u0fe3\u0fe4\u0fe5\u0fe6\u0fe7\u0fe8\u0fe9\u0fea\u0feb\u0fec\u0fed\u0fee\u0fef\u0ff0\u0ff1\u0ff2\u0ff3\u0ff4\u0ff5\u0ff6\u0ff7\u0ff8\u0ff9\u0ffa\u0ffb\u0ffc\u0ffd\u0ffe\u0fff', ',') satisfies matches($s, '^(?:\\p{IsTibetan}+)$')) and (every $s in tokenize('', ',') satisfies not(matches($s, '^(?:\\p{IsTibetan}+)$')))",ctx);
  try {
    result=new QT3Result(query.value());
  }
 catch (  final Throwable trw) {
    result=new QT3Result(trw);
  }
 finally {
    query.close();
  }
  test(assertBoolean(true));
}
