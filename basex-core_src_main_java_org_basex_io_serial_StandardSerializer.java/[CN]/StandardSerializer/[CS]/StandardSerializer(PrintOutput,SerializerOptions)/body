{
  super(out,sopts);
  indent=sopts.yes(INDENT);
  itemsep(null);
  final String norm=sopts.get(NORMALIZATION_FORM);
  if (norm.equals(Text.NONE)) {
    form=null;
  }
 else {
    try {
      form=Form.valueOf(norm);
    }
 catch (    final IllegalArgumentException ex) {
      throw SERNORM_X.getIO(norm);
    }
  }
  final String maps=sopts.get(USE_CHARACTER_MAPS);
  if (maps.isEmpty()) {
    map=null;
  }
 else {
    map=new IntObjMap<>();
    for (    final String s : Strings.split(maps,',')) {
      final String[] kv=Strings.split(s,'=',2);
      if (kv.length < 2)       throw SERMAP_X.getIO(maps);
      map.put(kv[0].charAt(0),token(kv[1]));
    }
  }
}
