{
  super.comp(ctx);
  if (swap()) {
    op=op.invert();
    ctx.compInfo(OPTSWAP,this);
  }
  for (int e=0; e != expr.length; ++e)   expr[e]=expr[e].addText(ctx);
  final Expr e1=expr[0];
  final Expr e2=expr[1];
  Expr e=this;
  if (oneEmpty()) {
    e=optPre(Empty.SEQ,ctx);
  }
 else   if (values()) {
    e=preEval(ctx);
  }
 else   if (e1.isFun(FunDef.COUNT)) {
    e=count(op);
    if (e != this)     ctx.compInfo(e instanceof Bln ? OPTPRE : OPTWRITE,this);
  }
 else   if (e1.isFun(FunDef.POS)) {
    e=Pos.get(op,e2,e,input);
    if (e != this)     ctx.compInfo(OPTWRITE,this);
  }
  type=SeqType.BLN;
  return e;
}
