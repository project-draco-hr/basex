{
  final Performance p=new Performance();
  final String path=target + (target.isEmpty() ? "/" : "") + (name == null ? parser.src.name() : name);
  final long fl=parser.src.length();
  boolean large=false;
  final Runtime rt=Runtime.getRuntime();
  if (fl > rt.freeMemory() / 3) {
    Performance.gc(2);
    large=fl > rt.freeMemory() / 3;
  }
  final Data data=ctx.data;
  final String dbname=large ? data.meta.random() : path;
  final Builder build=large ? new DiskBuilder(parser,ctx.prop) : new MemBuilder(parser,ctx.prop);
  if (cmd != null)   cmd.build=build;
  Data tmp=null;
  try {
    tmp=build.build(dbname);
    if (tmp.meta.size > 1) {
      data.insert(data.meta.size,-1,tmp);
      ctx.update();
      data.flush();
    }
    return Util.info(PATHADDED,path,p);
  }
 catch (  final IOException ex) {
    Util.debug(ex);
    throw new BaseXException(ex);
  }
 finally {
    if (tmp != null)     try {
      tmp.close();
    }
 catch (    final IOException e) {
    }
    if (large)     DropDB.drop(dbname,ctx.prop);
  }
}
