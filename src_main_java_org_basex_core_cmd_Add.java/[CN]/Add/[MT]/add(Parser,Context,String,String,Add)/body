{
  final Performance p=new Performance();
  final String path=target + (target.isEmpty() ? "/" : "") + (name == null ? parser.file.name() : name);
  final long fl=parser.file.length();
  boolean large=false;
  final Runtime rt=Runtime.getRuntime();
  if (fl > rt.freeMemory() / 3) {
    Performance.gc(2);
    large=fl > rt.freeMemory() / 3;
  }
  final String dbname=large ? ctx.data.meta.random() : path;
  final Builder build=large ? new DiskBuilder(parser,ctx.prop) : new MemBuilder(parser,ctx.prop);
  if (cmd != null)   cmd.build=build;
  Data data=null;
  try {
    data=build.build(dbname);
    ctx.data.insert(ctx.data.meta.size,-1,data);
    ctx.data.flush();
    ctx.update();
    return Util.info(PATHADDED,path,p);
  }
 catch (  final IOException ex) {
    Util.debug(ex);
    throw new BaseXException(ex);
  }
 finally {
    if (data != null)     try {
      data.close();
    }
 catch (    final IOException e) {
    }
    if (large)     DropDB.drop(dbname,ctx.prop);
  }
}
