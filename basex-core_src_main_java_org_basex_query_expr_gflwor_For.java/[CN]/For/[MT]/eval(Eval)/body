{
  return new Eval(){
    /** 
 * Expression iterator. 
 */
    private Iter iter;
    /** 
 * Current position. 
 */
    private long p;
    @Override public boolean next(    final QueryContext qc) throws QueryException {
      while (true) {
        Item it=null;
        if (iter != null) {
          if (scoring) {
            final boolean s=qc.scoring;
            try {
              qc.scoring=true;
              it=iter.next();
            }
  finally {
              qc.scoring=s;
            }
          }
 else {
            it=iter.next();
          }
        }
        if (it != null) {
          ++p;
          qc.set(var,it);
          if (pos != null)           qc.set(pos,Int.get(p));
          if (score != null)           qc.set(score,Dbl.get(it.score()));
          return true;
        }
        if (empty && iter != null && p == 0) {
          qc.set(var,Empty.SEQ);
          if (pos != null)           qc.set(pos,Int.get(p));
          if (score != null)           qc.set(score,Dbl.ZERO);
          iter=null;
          return true;
        }
        if (!sub.next(qc))         return false;
        if (scoring) {
          final boolean s=qc.scoring;
          try {
            qc.scoring=true;
            iter=expr.iter(qc);
          }
  finally {
            qc.scoring=s;
          }
        }
 else {
          iter=expr.iter(qc);
        }
        p=0;
      }
    }
  }
;
}
