{
  final BaseXBack pp=new BaseXBack(new TableLayout(9,1));
  intparse=new BaseXCheckBox(INT_PARSER,opts.get(MainOptions.INTPARSE),0,d);
  pp.add(intparse);
  pp.add(new BaseXLabel(H_INT_PARSER,true,false));
  dtd=new BaseXCheckBox(PARSE_DTDS,opts.get(MainOptions.DTD),0,d);
  pp.add(dtd);
  stripNS=new BaseXCheckBox(STRIP_NS,opts.get(MainOptions.STRIPNS),0,d);
  pp.add(stripNS);
  chopWS=new BaseXCheckBox(CHOP_WS,opts.get(MainOptions.CHOP),0,d);
  pp.add(chopWS);
  pp.add(new BaseXLabel(H_CHOP_WS,false,false).border(0,0,8,0));
  pp.add(new BaseXLabel());
  usecat=new BaseXCheckBox(USE_CATALOG_FILE,!opts.get(MainOptions.CATFILE).isEmpty(),0,d);
  final boolean rsen=CatalogWrapper.available();
  final BaseXBack cr=new BaseXBack(new TableLayout(2,2,8,0));
  usecat.setEnabled(rsen);
  cr.add(usecat);
  cr.add(new BaseXLabel());
  cfile=new BaseXTextField(opts.get(MainOptions.CATFILE),d);
  cfile.setEnabled(rsen);
  cr.add(cfile);
  browsec=new BaseXButton(BROWSE_D,d);
  browsec.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    final ActionEvent e){
      catchoose(d.gui);
    }
  }
);
  browsec.setEnabled(rsen);
  cr.add(browsec);
  pp.add(cr);
  if (!rsen) {
    final BaseXBack rs=new BaseXBack(new TableLayout(2,1));
    rs.add(new BaseXLabel(HELP1_USE_CATALOG).color(GUIConstants.DGRAY));
    rs.add(new BaseXLabel(HELP2_USE_CATALOG).color(GUIConstants.DGRAY));
    pp.add(rs);
  }
  add(pp,BorderLayout.WEST);
  final boolean ip=intparse.isSelected();
  final boolean uc=usecat.isSelected();
  intparse.setEnabled(!uc);
  usecat.setEnabled(!ip && CatalogWrapper.available());
  cfile.setEnabled(uc);
  browsec.setEnabled(uc);
}
