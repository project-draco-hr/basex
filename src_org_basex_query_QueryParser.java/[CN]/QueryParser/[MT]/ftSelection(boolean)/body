{
  final FTExpr expr=ftOr(prg);
  FTFilter[] filters={};
  FTFilter f;
  do {
    f=null;
    if (consumeWS(ORDERED)) {
      f=new FTOrder();
    }
 else     if (consumeWS(WINDOW)) {
      f=new FTWindow(additive(),ftUnit());
    }
 else     if (consumeWS(DISTANCE)) {
      final Expr[] r=ftRange();
      if (r == null)       error(FTRANGE);
      f=new FTDistance(r,ftUnit());
    }
 else     if (consumeWS(AT)) {
      boolean start=consumeWS(START);
      boolean end=!start && consumeWS(END);
      if (!start && !end)       error(INCOMPLETE);
      f=new FTContent(start,end);
    }
 else     if (consumeWS(ENTIRE)) {
      check(CONTENT);
      f=new FTContent(false,false);
    }
 else {
      final boolean same=consumeWS(SAME);
      final boolean diff=!same && consumeWS(DIFFERENT);
      if (same || diff) {
        FTUnit unit=null;
        if (consumeWS(SENTENCE))         unit=FTFilter.FTUnit.SENTENCE;
 else         if (consumeWS(PARAGRAPH))         unit=FTFilter.FTUnit.PARAGRAPH;
 else         error(INCOMPLETE);
        f=new FTScope(unit,same);
      }
    }
    if (f != null)     filters=Array.add(filters,f);
  }
 while (f != null);
  return filters.length == 0 ? expr : new FTSelect(expr,filters);
}
