{
  final FTExpr expr=ftOr(prg);
  final FTPos sel=new FTPos(expr);
  while (true) {
    if (consumeWS(ORDERED)) {
      sel.ordered=true;
    }
 else     if (consumeWS(WINDOW)) {
      sel.window=additive();
      sel.wunit=ftUnit();
    }
 else     if (consumeWS(DISTANCE)) {
      sel.dist=ftRange();
      if (sel.dist == null)       error(FTRANGE);
      sel.dunit=ftUnit();
    }
 else     if (consumeWS(AT)) {
      sel.start=consumeWS(START);
      if (!sel.start)       sel.end=consumeWS(END);
      if (!sel.start && !sel.end)       error(INCOMPLETE);
    }
 else     if (consumeWS(ENTIRE)) {
      check(CONTENT);
      sel.content=true;
    }
 else {
      final boolean same=consumeWS(SAME);
      final boolean diff=!same && consumeWS(DIFFERENT);
      if (!same && !diff)       break;
      sel.same=same;
      sel.different=diff;
      if (consumeWS(SENTENCE))       sel.sdunit=FTUnit.SEN;
 else       if (consumeWS(PARAGRAPH))       sel.sdunit=FTUnit.PAR;
 else       error(INCOMPLETE);
    }
  }
  if (consumeWS(WEIGHT))   sel.weight=range();
  return sel;
}
