{
  skipWS();
  final char c=curr();
  if (digit(c))   return numericLiteral();
  if (c == '.' && next() != '.') {
    consume('.');
    if (!digit(curr()))     return new Context();
    tok.reset();
    tok.add('.');
    return decimalLiteral();
  }
  if (quote(c))   return new Str(stringLiteral(),true);
  if (c == '$') {
    final Var var=new Var(varName(),false);
    if (ctx.vars.get(var) == null)     error(VARNOTDEFINED,var);
    return new VarCall(var);
  }
  if (c == '(' && next() != '#')   return parenthesized();
  if (c == '<')   return constructor();
  if (letter(c)) {
    Expr e=functionCall();
    if (e != null)     return e;
    e=computedConstructor();
    if (e != null)     return e;
    if (consumeWS(ORDERED) || consumeWS(UNORDERED))     return enclosed(NOENCLEXPR);
  }
  return null;
}
