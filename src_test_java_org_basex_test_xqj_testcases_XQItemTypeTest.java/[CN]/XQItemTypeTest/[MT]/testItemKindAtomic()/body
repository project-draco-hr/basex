{
  final XQItemType xqtype=xqc.createAtomicType(XQItemType.XQBASETYPE_STRING);
  assertEquals("A-XQIT-1.1: getBaseType() returns the correct base type.",XQItemType.XQBASETYPE_STRING,xqtype.getBaseType());
  assertEquals("A-XQIT-2.1: getItemKind() returns the correct item kind.",XQItemType.XQITEMKIND_ATOMIC,xqtype.getItemKind());
  assertEquals("A-XQIT-3.1: getItemOccurrence() returns OCC_EXACTLY_ONE.",XQSequenceType.OCC_EXACTLY_ONE,xqtype.getItemOccurrence());
  xqtype.toString();
  try {
    xqtype.getNodeName();
    fail("A-XQIT-5.2: getNodeName() must throw an XQException.");
  }
 catch (  final XQException e) {
  }
  assertEquals("A-XQIT-6.2: getSchemaURI() returns null.",null,xqtype.getSchemaURI());
  assertEquals("A-XQIT-7.1: getTypeName() returns the correct QName.","string",xqtype.getTypeName().getLocalPart());
  assertEquals("A-XQIT-7.1: getTypeName() returns the correct QName.","http://www.w3.org/2001/XMLSchema",xqtype.getTypeName().getNamespaceURI());
  assertFalse("A-XQIT-8.1: isAnonymousType() reports if the type is anonymous.",xqtype.isAnonymousType());
  assertFalse("A-XQIT-9.1: isElementNillable() reports if the element is nillable.",xqtype.isElementNillable());
  try {
    xqtype.getPIName();
    fail("A-XQIT-10.2: getPIName() must throw an XQException.");
  }
 catch (  final XQException e) {
  }
}
