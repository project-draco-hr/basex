{
  perf=new Performance();
  context=ctx;
  prop=ctx.prop;
  final Data data=context.data();
  if (data() && data == null)   return error(PROCNODB);
  final User user=context.user;
  int up=user.perm;
  if (data != null) {
    final User us=data.meta.users.get(user.name);
    if (us != null)     up=up & ~(User.READ | User.WRITE) | us.perm;
  }
  int fp=flags & (User.READ | User.WRITE | User.CREATE| User.ADMIN);
  if (updating(ctx))   fp|=User.WRITE;
  int i=4;
  while (--i >= 0) {
    final int f=1 << i;
    if ((f & fp) != 0 && (f & up) == 0)     break;
  }
  if (i != -1)   return error(PERMNO,CmdPerm.values()[i]);
  try {
    return exec(out);
  }
 catch (  final IOException ex) {
    return error(ex.getMessage());
  }
catch (  final Throwable ex) {
    ex.printStackTrace();
    if (ex instanceof OutOfMemoryError) {
      Performance.gc(2);
      return error(PROCOUTMEM);
    }
    return error(PROCERR,this,ex.toString());
  }
}
