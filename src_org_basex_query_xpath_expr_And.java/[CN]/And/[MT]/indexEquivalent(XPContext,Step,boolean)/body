{
  final int el=expr.length;
  if (el == 0)   return null;
  final Expr[] indexExprs=new Expr[el];
  boolean ie=true;
  for (int i=0; i != el; i++) {
    indexExprs[i]=expr[i].indexEquivalent(ctx,curr,seq);
    if (indexExprs[i] == null)     ie=false;
  }
  if (!ie)   return null;
  final Expr[] ex=XPOptimizer.getIndexExpr(indexExprs);
  if (ex != null)   return new Path(new InterSect(ex),((Path)indexExprs[0]).path);
  ctx.compInfo(OPTAND4);
  return new InterSect(indexExprs).comp(ctx);
}
