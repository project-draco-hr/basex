{
  boolean plaintext=false;
  do {
    String type="";
    if (mCurrLine == null)     break;
    final Matcher m=KEYPAT.matcher(mCurrLine);
    if (m.matches()) {
      type=m.group(1).toLowerCase();
      mCurrLine=m.group(2).trim();
    }
    if (type.equals("content-transfer-encoding")) {
      getEncoding();
    }
 else     if (type.equals("content-type")) {
      final String ms=mCurrLine.split(";")[0].toLowerCase();
      MimeType mime=null;
      if (ms.startsWith("multipart")) {
        mContentType=ms;
        if (ms.startsWith("multipart/related"))         multipartRelated();
        break;
      }
      mime=MimeType.getItem(ms);
      if (mime != null) {
        for (        final FileType mt : mime.getMetaTypes()) {
          contentMeta.setFileType(mt);
          if (mt == FileType.TEXT)           plaintext=true;
        }
        contentMeta.setFileFormat(mime);
        contentMeta.addMeta(MetaElem.ENCODING,getCharset());
      }
    }
 else     getCharset();
  }
 while (readLine() && !mCurrLine.isEmpty());
  if (!plaintext)   return false;
  return true;
}
