{
  meta.update();
  final int ss=dt.meta.size;
  for (int s=0; s < ss; s++) {
    final int k=dt.kind(s);
    final int r=dt.parent(s,k);
    final int p=s + pre;
    final int d=r >= 0 ? s - r : p - par;
switch (k) {
case DOC:
      insertDoc(p,dt.size(s,k),dt.text(s,true));
    break;
case ELEM:
  int n=tags.index(dt.name(s,k),null,false);
insertElem(p,d,n,dt.attSize(s,k),dt.size(s,k),dt.uri(s,k),dt.nsFlag(s));
break;
case TEXT:
case COMM:
case PI:
insertText(p,d,dt.text(s,true),k);
break;
case ATTR:
n=atts.index(dt.name(s,k),null,false);
insertAttr(p,d,n,dt.text(s,false),dt.uri(s,k));
break;
}
}
if (par >= 0) updateTable(pre,par,ss);
if (size(0,DOC) == 1) delete(0);
}
