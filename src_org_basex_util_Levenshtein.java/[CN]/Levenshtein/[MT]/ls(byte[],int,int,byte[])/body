{
  if (tl == 0)   return false;
  final int sl=sub.length;
  if (sl < 3 || tl > 30 || sl > 30)   return equals(tok,ts,tl,sub);
  final int qr=80 / Math.max(1,(sl - 1) >> 2);
  if (Math.abs(sl - tl) * qr > 100)   return false;
  if (m == null) {
    m=new int[32][32];
    for (int i=0; i < m.length; i++) {
      m[0][i]=i;
      m[i][0]=i;
    }
  }
  int e2=-1, f2=-1;
  for (int t=0; t < tl; t++) {
    final int e=ftNorm(tok[ts + t]);
    int d=64;
    for (int q=0; q < sl; q++) {
      final int f=ftNorm(sub[q]);
      int c=min(m[t][q + 1] + 1,m[t + 1][q] + 1,m[t][q] + (e == f ? 0 : 1));
      if (e == f2 && f == e2)       c=m[t][q];
      m[t + 1][q + 1]=c;
      d=Math.min(d,c);
      f2=f;
    }
    if (qr * d > 100)     return false;
    e2=e;
  }
  return qr * m[tl][sl] < 100;
}
