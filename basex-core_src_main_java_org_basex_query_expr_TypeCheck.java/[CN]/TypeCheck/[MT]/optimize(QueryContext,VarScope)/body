{
  final SeqType argType=expr.seqType();
  if (argType.instanceOf(seqType)) {
    qc.compInfo(QueryText.OPTCAST_X,seqType);
    return expr;
  }
  if (expr instanceof FuncItem && seqType.type instanceof FuncType) {
    if (!seqType.occ.check(1))     throw INVPROMOTE_X_X.get(info,argType,seqType);
    final FuncItem fi=(FuncItem)expr;
    return optPre(fi.coerceTo((FuncType)seqType.type,qc,info,true),qc);
  }
  if (expr.isValue()) {
    return optPre(value(qc),qc);
  }
  if (argType.type.instanceOf(seqType.type) && !expr.has(Flag.NDT) && !expr.has(Flag.UPD)) {
    final Occ occ=argType.occ.intersect(seqType.occ);
    if (occ == null)     throw INVPROMOTE_X_X.get(info,argType,seqType);
  }
  final Expr opt=expr.typeCheck(this,qc,scp);
  if (opt != null) {
    qc.compInfo(OPTTYPE_X,seqType);
    return opt;
  }
  return this;
}
