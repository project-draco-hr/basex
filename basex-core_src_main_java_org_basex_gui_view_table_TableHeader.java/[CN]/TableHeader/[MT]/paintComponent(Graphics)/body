{
  super.paintComponent(g);
  g.setFont(font);
  g.setColor(Color.black);
  if (tdata.rows == null) {
    BaseXLayout.drawCenter(g,NO_DATA,getWidth(),getHeight() / 2);
    return;
  }
  final int fsz=fontSize;
  int w=getWidth();
  final int h=getHeight();
  final int hh=h / 2;
  g.setColor(color2);
  g.drawLine(0,h - 1,w,h - 1);
  final int bs=BaseXScrollBar.SIZE;
  w-=bs;
  double x=0;
  final int nc=tdata.cols.length;
  for (int n=0; n < nc; ++n) {
    final double cw=w * tdata.cols[n].width;
    final double ce=x + cw;
    final boolean clicked=n == clickCol && moveC == -1 && header;
    BaseXLayout.drawCell(g,(int)x,(int)ce + 1,0,hh,clicked);
    g.setColor(Color.white);
    g.fillRect((int)x + 1,hh,(int)ce - (int)x - 2,hh - 2);
    g.drawLine((int)ce - 1,hh - 1,(int)ce - 1,h - 2);
    g.setColor(GRAY);
    g.drawLine((int)ce,hh - 1,(int)ce,h - 2);
    g.setColor(Color.black);
    g.setFont(bfont);
    final int off=clicked ? 1 : 0;
    BaseXLayout.chopString(g,tdata.cols[n].name,(int)x + 4 + off,2 + off,(int)cw,fsz);
    if (n == tdata.sortCol) {
      if (tdata.asc)       g.fillPolygon(new int[]{(int)ce - 9 + off,(int)ce - 3 + off,(int)ce - 6 + off},new int[]{4 + off,4 + off,8 + off},3);
 else       g.fillPolygon(new int[]{(int)ce - 9 + off,(int)ce - 3 + off,(int)ce - 6 + off},new int[]{8 + off,8 + off,4 + off},3);
    }
    if (box != null && inputCol == n) {
      box.paint(g,(int)x,hh,(int)ce - (int)x,hh);
    }
 else {
      g.setColor(Color.black);
      g.setFont(font);
      g.drawString(tdata.cols[n].filter,(int)x + 5,h - 7);
    }
    x=ce;
  }
  final boolean clicked=nc == clickCol;
  BaseXLayout.drawCell(g,(int)x,w + bs,0,hh,clicked && header);
  BaseXLayout.drawCell(g,(int)x,w + bs,hh - 1,h,clicked && !header);
  smooth(g);
  int o=header && clicked ? 1 : 0;
  final int xo=(int)(4 * SCALE), yo=(int)(6 * SCALE);
  g.setColor(Color.black);
  g.fillPolygon(new int[]{(int)x + o + xo,(int)x + o + bs - xo,(int)x + o + bs / 2},new int[]{o + yo,o + yo,o + bs - yo},3);
  g.setFont(bfont);
  o=!header && clicked ? 1 : 0;
  final byte[] reset={'x'};
  x+=(bs - BaseXLayout.width(g,reset)) / 2d;
  BaseXLayout.chopString(g,reset,(int)x + o,hh + o + 1,w,fsz);
}
