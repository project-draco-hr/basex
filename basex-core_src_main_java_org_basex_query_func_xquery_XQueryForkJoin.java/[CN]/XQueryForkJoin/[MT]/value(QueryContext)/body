{
  final Value funcs=qc.value(exprs[0]);
  for (  final Item func : funcs) {
    if (!(func instanceof FItem) || ((FItem)func).arity() != 0)     throw ZEROFUNCS_X_X.get(info,func.type,func);
  }
  if (funcs.isEmpty())   return Empty.SEQ;
  if (funcs.size() == 1)   return ((FItem)funcs.itemAt(0)).invokeValue(qc,info);
  final ForkJoinPool pool=new ForkJoinPool();
  final ForkJoinTask task=new ForkJoinTask(funcs,qc,info);
  try {
    return pool.invoke(task);
  }
 catch (  final Exception ex) {
    final Throwable e=Util.rootException(ex);
    if (e instanceof QueryException)     throw (QueryException)e;
    if (e instanceof JobException)     throw (JobException)e;
    throw BXXQ_UNEXPECTED_X.get(info,e);
  }
 finally {
    pool.shutdown();
  }
}
