{
  final Map<String,String[]> vars=new HashMap<String,String[]>();
  String op=null, input=null, value=null;
  final HTTPContext http=rs.http;
  final SerializerOptions sopts=http.sopts();
  for (  final Entry<String,String[]> param : http.params.map().entrySet()) {
    final String key=param.getKey();
    final String[] vals=param.getValue();
    final String val=vals[0];
    if (Token.eqic(key,COMMAND,QUERY,RUN)) {
      if (op != null || vals.length > 1)       throw HTTPCode.ONEOP.get();
      op=key;
      input=val;
    }
 else     if (key.equalsIgnoreCase(WRAP)) {
      http.wrapping=Util.yes(val);
    }
 else     if (key.equalsIgnoreCase(CONTEXT)) {
      value=val;
    }
 else     if (sopts.option(key) != null) {
      for (      final String v : vals)       sopts.assign(key,v);
    }
 else     if (!RESTCmd.parseOption(rs,param,false)) {
      vars.put(key,new String[]{val});
    }
  }
  if (op == null)   return RESTRetrieve.get(rs);
  if (op.equals(QUERY))   return RESTQuery.get(rs,input,vars,value);
  if (op.equals(RUN))   return RESTRun.get(rs,input,vars,value);
  return RESTCommand.get(rs,input);
}
