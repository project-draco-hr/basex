{
  final Map<String,String[]> vars=new HashMap<String,String[]>();
  String operation=null;
  String input=null;
  byte[] item=null;
  final SerializerOptions sopts=http.serialization;
  for (  final Entry<String,String[]> param : http.params().entrySet()) {
    final String key=param.getKey();
    final String[] vals=param.getValue();
    final String val=vals[0];
    if (Token.eqic(key,COMMAND,QUERY,RUN)) {
      if (operation != null || vals.length > 1)       HTTPErr.ONEOP.thrw();
      operation=key;
      input=val;
    }
 else     if (key.equalsIgnoreCase(WRAP)) {
      wrap(val,http);
    }
 else     if (key.equalsIgnoreCase(CONTEXT)) {
      item=Token.token(val);
    }
 else     if (sopts.option(key) != null) {
      for (      final String v : vals)       sopts.assign(key,v);
    }
 else     if (!parseOption(http,param,false)) {
      vars.put(key,new String[]{val});
    }
  }
  final RESTCode code;
  if (operation == null) {
    code=new RESTRetrieve(input,vars,item);
  }
 else   if (operation.equals(QUERY)) {
    code=new RESTQuery(input,vars,item);
  }
 else   if (operation.equals(RUN)) {
    code=new RESTRun(input,vars,item);
  }
 else {
    code=new RESTCommand(input);
  }
  code.run(http);
}
