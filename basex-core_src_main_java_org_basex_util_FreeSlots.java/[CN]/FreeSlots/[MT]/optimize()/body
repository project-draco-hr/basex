{
  if (free.isEmpty())   return;
  final int size=slots;
  final LongList offList=new LongList(size);
  final IntList sizeList=new IntList(size);
  for (  final Entry<Integer,LongList> entry : free.entrySet()) {
    final int slotSize=entry.getKey();
    final LongList list=entry.getValue();
    final int ll=list.size();
    for (int l=0; l < ll; l++) {
      offList.add(list.get(l));
      sizeList.add(slotSize);
    }
  }
  if (size != offList.size())   throw Util.notExpected("Wrong slot count: % vs. %",size,offList.size());
  final long[] offsets=offList.finish();
  final int[] slotSizes=sizeList.finish();
  final int[] index=Array.createOrder(offsets,true);
  free.clear();
  slots=0;
  long offset=offsets[0];
  int slotSize=slotSizes[index[0]];
  for (int c=1; c < size; c++) {
    final long o=offsets[c];
    final int s=slotSizes[index[c]];
    if (o == offset + slotSize) {
      slotSize+=s;
    }
 else {
      add(slotSize,offset,false);
      offset=o;
      slotSize=s;
    }
  }
  add(slotSize,offset,false);
}
