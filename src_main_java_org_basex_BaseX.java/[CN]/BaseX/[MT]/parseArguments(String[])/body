{
  String serial="";
  String bind="";
  try {
    final Args arg=new Args(args,this,sa() ? LOCALINFO : CLIENTINFO);
    while (arg.more()) {
      if (arg.dash()) {
        final char c=arg.next();
        if (c == 'b') {
          bind+="," + arg.string();
          arg.check(set(Prop.BINDINGS,bind));
        }
 else         if (c == 'c') {
          commands=arg.remaining();
        }
 else         if (c == 'd') {
          context.prop.set(Prop.DEBUG,true);
        }
 else         if (c == 'D' && sa()) {
          arg.check(set(Prop.DOTPLAN,true));
        }
 else         if (c == 'i' && sa()) {
          input=arg.string();
        }
 else         if (c == 'n' && !sa()) {
          context.prop.set(Prop.HOST,arg.string());
        }
 else         if (c == 'o') {
          out=new PrintOutput(arg.string());
        }
 else         if (c == 'p' && !sa()) {
          context.prop.set(Prop.PORT,arg.num());
        }
 else         if (c == 'P' && !sa()) {
          pass=arg.string();
        }
 else         if (c == 'q') {
          query=arg.remaining();
        }
 else         if (c == 'r') {
          arg.check(set(Prop.RUNS,arg.string()));
        }
 else         if (c == 's') {
          serial+="," + arg.string();
          arg.check(set(Prop.SERIALIZER,serial));
        }
 else         if (c == 'u') {
          arg.check(set(Prop.WRITEBACK,true));
        }
 else         if (c == 'U' && !sa()) {
          user=arg.string();
        }
 else         if (c == 'v') {
          verbose=true;
        }
 else         if (c == 'V') {
          verbose=true;
          arg.check(set(Prop.QUERYINFO,true));
        }
 else         if (c == 'w') {
          arg.check(set(Prop.CHOP,false));
        }
 else         if (c == 'W') {
          writeProps=true;
        }
 else         if (c == 'x' && sa()) {
          arg.check(set(Prop.COMPPLAN,false));
        }
 else         if (c == 'X') {
          arg.check(set(Prop.XMLPLAN,true));
          verbose=true;
        }
 else         if (c == 'z') {
          arg.check(set(Prop.SERIALIZE,false));
        }
 else {
          arg.check(false);
        }
      }
 else {
        file=file == null ? arg.string() : file + " " + arg.string();
      }
    }
    console=file == null && commands == null && query == null;
    return arg.finish();
  }
 catch (  final IOException ex) {
    Util.errln(Util.server(ex));
    return false;
  }
}
