{
  final Expr c=super.comp(ctx);
  if (c != this)   return c;
  Expr[] ex={};
  Pos ps=null;
  CmpR cr=null;
  for (  final Expr e : expr) {
    Expr tmp=null;
    if (e instanceof Pos) {
      tmp=ps == null ? e : ps.intersect((Pos)e,input);
      if (!(tmp instanceof Pos))       return tmp;
      ps=(Pos)tmp;
    }
 else     if (e instanceof CmpR) {
      tmp=cr == null ? e : cr.intersect((CmpR)e);
      if (tmp instanceof CmpR)       cr=(CmpR)tmp;
 else       if (tmp != null)       return tmp;
    }
    if (tmp == null)     ex=Array.add(ex,e);
  }
  expr=ex;
  if (ps != null)   expr=Array.add(expr,ps);
  if (cr != null)   expr=Array.add(expr,cr);
  if (ex.length != expr.length)   ctx.compInfo(OPTWRITE,this);
  compFlatten(ctx);
  return expr.length == 1 ? compBln(expr[0]) : this;
}
