{
  log.write(this,"LOGIN " + context.user.name,"OK");
  String input=null;
  try {
    while (true) {
      try {
        input=in.readString();
      }
 catch (      final IOException ex) {
        exit();
        break;
      }
      final Performance perf=new Performance();
      proc=null;
      try {
        proc=new CommandParser(input,context,true).parse()[0];
      }
 catch (      final QueryException ex) {
        log.write(this,input,perf,INFOERROR + ex.extended());
        out.write(0);
        out.print(ex.extended());
        out.write(0);
        send(false);
        continue;
      }
      if (proc instanceof Exit) {
        exit();
        break;
      }
      startTimer(proc);
      final boolean w=sema.writing(proc,context);
      sema.before(w);
      final boolean ok=proc.execute(context,out);
      out.write(0);
      final String inf=proc.info();
      out.print(inf.equals(PROGERR) ? SERVERTIME : inf);
      out.write(0);
      send(ok);
      stopTimer();
      sema.after(w);
      final String pr=proc.toString().replaceAll("\\r|\\n"," ");
      log.write(this,pr,ok ? "OK" : INFOERROR + inf,perf);
    }
    log.write(this,"LOGOUT " + context.user.name,"OK");
  }
 catch (  final IOException ex) {
    log.write(this,input,INFOERROR + ex.getMessage());
    ex.printStackTrace();
  }
}
