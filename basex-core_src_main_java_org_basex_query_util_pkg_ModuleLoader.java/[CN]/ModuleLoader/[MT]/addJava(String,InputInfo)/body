{
  final String cp=camelCase(path.replace('/','.').substring(1));
  final Class<?> clz;
  try {
    clz=findClass(cp);
  }
 catch (  final ClassNotFoundException ex) {
    throw WHICHCLASS_X.get(ii,ex.getMessage());
  }
catch (  final Throwable th) {
    throw MODINITERR_X.get(ii,th);
  }
  final Object jm=Reflect.get(clz);
  if (jm == null)   throw INSTERR_X.get(ii,cp);
  final boolean qm=QueryModule.class.isAssignableFrom(clz);
  final ArrayList<Method> list=new ArrayList<>();
  for (  final Method m : clz.getMethods()) {
    if (!qm || m.getDeclaringClass() == clz)     list.add(m);
  }
  if (javaModules == null)   javaModules=new HashMap<>();
  javaModules.put(jm,list);
}
