{
  final String cp=camelCase(path.replace('/','.').substring(1));
  final Class<?> clz;
  try {
    clz=findClass(cp);
  }
 catch (  final ClassNotFoundException ex) {
    throw WHICHCLASS.get(ii,ex.getMessage());
  }
catch (  final Throwable th) {
    throw MODINITERR.get(ii,th);
  }
  final boolean qm=clz.getSuperclass() == QueryModule.class;
  final Object jm=Reflect.get(clz);
  if (jm == null)   throw INSTERR.get(ii,cp);
  final ArrayList<Method> list=new ArrayList<Method>();
  for (  final Method m : clz.getMethods()) {
    if (!qm || m.getDeclaringClass() == clz)     list.add(m);
  }
  if (javaModules == null)   javaModules=new HashMap<Object,ArrayList<Method>>();
  javaModules.put(jm,list);
}
