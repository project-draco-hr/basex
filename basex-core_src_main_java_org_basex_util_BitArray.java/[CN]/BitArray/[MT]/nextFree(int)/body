{
  int wi=i >>> WORD_POWER;
  long word=~words[wi] & WORD_MASK << i;
  if (word != 0) {
    return (wi << WORD_POWER) + numberOfTrailingZeros(word);
  }
  final int wl=words.length;
  while (++wi < wl) {
    if ((word=~words[wi]) != 0) {
      return (wi << WORD_POWER) + numberOfTrailingZeros(word);
    }
  }
  return wi << WORD_POWER;
}
