{
  final Table table=new Table();
  table.description=DATABASES;
  final boolean create=context.user.perm(User.CREATE);
  table.header.add(INFODBNAME);
  table.header.add(INFONRES);
  table.header.add(INFODBSIZE);
  if (create)   table.header.add(INFOPATH);
  for (  final String name : list(context)) {
    DataInput in=null;
    String file=null;
    long size=0;
    int ndocs=0;
    final MetaData meta=new MetaData(name,context);
    try {
      in=new DataInput(meta.dbfile(DATAINF));
      meta.read(in);
      size=meta.dbsize();
      ndocs=meta.ndocs;
      if (context.perm(User.READ,meta))       file=meta.original.toString();
    }
 catch (    final IOException ex) {
      file=INFODBERR;
    }
 finally {
      if (in != null)       try {
        in.close();
      }
 catch (      final IOException ex) {
      }
    }
    final File bin=new File(mprop.dbpath(name),M_RAW);
    final int raw=new IOFile(bin).descendants().size();
    if (file != null) {
      final TokenList tl=new TokenList(4);
      tl.add(name);
      tl.add(ndocs + raw);
      tl.add(size);
      if (create)       tl.add(file);
      table.contents.add(tl);
    }
  }
  table.sort();
  out.println(table.finish());
  return true;
}
