{
  if (pred.length != 0)   return null;
  int kind=-1;
  byte[] n=null;
  int name=0;
  if (test.type != null) {
    kind=Nod.kind(test.type);
    if (kind == Data.PI)     return null;
    if (test.kind == Kind.NAME)     n=((NameTest)test).ln;
    if (n == null && test.kind != null && test.kind != Kind.ALL)     return null;
    name=n == null ? 0 : kind == Data.ELEM ? data.tagID(n) : kind == Data.ATTR ? data.attNameID(n) : 0;
  }
  final boolean desc=axis == Axis.DESC;
  if (!desc && axis != Axis.CHILD)   return null;
  final HashSet<SkelNode> out=new HashSet<SkelNode>();
  for (  final SkelNode sn : nodes) {
    data.skel.desc(sn,out,name,kind,desc);
  }
  return out;
}
