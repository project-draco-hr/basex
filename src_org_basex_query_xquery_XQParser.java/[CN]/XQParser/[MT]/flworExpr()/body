{
  final int s=ctx.vars.size();
  final ForLet[] fl=forLetClause();
  if (fl == null)   return null;
  Expr where=null;
  if (consumeWS(WHERE)) {
    ap=qp;
    where=check(exprSingle(),NOWHERE);
    alter=NOWHERE;
  }
  Ord[] order=null;
  final boolean stable=consumeWS(STABLE);
  if (stable)   check(EMPTYORDER);
  if (stable || consumeWS(EMPTYORDER)) {
    check(BY);
    ap=qp;
    do     order=orderSpec(order);
 while (consumeWS2(COMMA));
    if (order != null)     order=Array.add(order,new Ord());
    alter=ORDERBY;
  }
  if (!consumeWS(RETURN)) {
    if (alter != null)     error();
    Err.or(where == null ? FLWORWHERE : order == null ? FLWORORD : FLWORRET);
  }
  final Expr ret=check(exprSingle(),NORETURN);
  ctx.vars.reset(s);
  return order == null ? new FLWR(fl,where,ret) : new FLWOR(fl,where,new Order(order),ret);
}
