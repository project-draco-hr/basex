{
  final int p=qp;
  final char ch=curr();
  if (XMLToken.isXMLLetter(ch)) {
    final byte[] name=qName(null);
    if (consumeWS(PAR1)) {
      final Type type=Type.node(new QNm(name));
      if (type != null) {
        tok.reset();
        while (!consumeWS(PAR2)) {
          if (curr() == 0)           Err.or(TESTINCOMPLETE);
          tok.add(consume());
        }
        final byte[] ext=tok.finish();
        final QNm qn=checkTest(type,ext);
        return type == Type.NOD ? Test.NODE : new KindTest(type,qn);
      }
    }
 else {
      if (contains(name,':')) {
        skipWS();
        return new NameTest(new QNm(name,ctx),NameTest.Kind.STD);
      }
      if (!consume(':')) {
        skipWS();
        return att ? new NameTest(new QNm(name),NameTest.Kind.NAME) : new NameTest(new QNm(name,Uri.uri(ctx.nsElem)),NameTest.Kind.STD);
      }
      if (consume('*')) {
        final QNm nm=new QNm(EMPTY);
        nm.uri=Uri.uri(ctx.ns.uri(name));
        return new NameTest(nm,NameTest.Kind.NS);
      }
    }
  }
 else   if (consume('*')) {
    if (!consume(':'))     return new NameTest();
    return new NameTest(new QNm(qName(null)),NameTest.Kind.NAME);
  }
  qp=p;
  return null;
}
