{
  final String in=baseIO != null ? baseIO.merge(input).path() : null;
  if (in != null) {
    final String[] names={in,input};
    for (int c=0; c < colls; c++) {
      final String n=collName[c];
      if (Prop.CASE ? Token.eq(n,names) : Token.eqic(n,names))       return coll[c];
    }
  }
  final QueryInput qi=new QueryInput(input);
  Data dt=null;
  for (int i=0; i < datas; ++i) {
    final Data d=data[i];
    final String n=d.meta.name;
    if (Prop.CASE ? n.equals(qi.db) : n.equalsIgnoreCase(qi.db) || IO.get(d.meta.original).eq(qi.input)) {
      dt=d;
      break;
    }
  }
  if (dt == null)   dt=open(qi);
  if (dt == null)   dt=create(qi,false,baseIO,info);
  return DBNodeSeq.get(dt.resources.docs(qi.path),dt,true,qi.path.isEmpty());
}
