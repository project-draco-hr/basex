{
  final FElem function=new FElem("function");
  function.add("name",fname.string());
  function.add("uri",fname.uri());
  final TokenMap doc=sf != null ? sf.doc() : null;
  QNm[] names=null;
  if (sf != null) {
    names=new QNm[sf.args.length];
    for (int n=0; n < names.length; n++)     names[n]=sf.args[n].name;
  }
  for (int a=0; a < types.length; a++) {
    final FElem parameter=type("parameter",types[a]);
    function.add(parameter);
    if (names == null)     continue;
    final byte[] name=names[a].string();
    final byte[] uri=names[a].uri();
    parameter.add("name",name);
    if (uri.length != 0)     parameter.add("uri",uri);
    if (doc != null) {
      for (      final byte[] key : doc) {
        if (!eq(key,DOC_PARAM))         continue;
        byte[] val=doc.get(key);
        final int vl=val.length;
        for (int v=0; v < vl; v++) {
          if (!ws(val[v]))           continue;
          if (eq(replaceAll(substring(val,0,v),"^\\$",""),name)) {
            add(parameter,trim(substring(val,v + 1,vl)),ctx);
          }
          break;
        }
      }
    }
  }
  for (int a=0; a < sf.ann.size(); a++) {
    final FElem annotation=new FElem("annotation");
    annotation.add("name",sf.ann.names[a].string());
    annotation.add("uri",sf.ann.names[a].uri());
    function.add(annotation);
  }
  if (doc != null) {
    for (    final byte[] key : doc) {
      if (eq(key,DOC_PARAM,DOC_RETURN))       continue;
      final FElem elem=eq(key,DOC_TAGS) ? new FElem(key) : new FElem("tag").add("name",key);
      add(elem,doc.get(key),ctx);
      function.add(elem);
    }
  }
  final FElem returnn=type("return",ret);
  function.add(returnn);
  for (  final byte[] key : doc) {
    if (!eq(key,DOC_RETURN))     continue;
    returnn.add(doc.get(key));
    break;
  }
  return function;
}
