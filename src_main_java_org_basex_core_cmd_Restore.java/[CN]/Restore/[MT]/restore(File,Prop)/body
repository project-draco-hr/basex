{
  InputStream is=null;
  try {
    is=new BufferedInputStream(new FileInputStream(file));
    ZipInputStream zis=new ZipInputStream(is);
    while (zis.getNextEntry() != null)     tf++;
    zis.close();
    is=new BufferedInputStream(new FileInputStream(file));
    zis=new ZipInputStream(is);
    final byte[] data=new byte[IO.BLOCKSIZE];
    ZipEntry e;
    while ((e=zis.getNextEntry()) != null) {
      of++;
      final String path=pr.get(Prop.DBPATH) + Prop.SEP + e.getName();
      if (e.isDirectory()) {
        new File(path).mkdir();
      }
 else {
        final BufferedOutputStream bos=new BufferedOutputStream(new FileOutputStream(path));
        int c;
        while ((c=zis.read(data)) != -1)         bos.write(data,0,c);
        bos.close();
      }
    }
    zis.close();
    return true;
  }
 catch (  final IOException ex) {
    Util.debug(ex);
    return false;
  }
 finally {
    if (is != null)     try {
      is.close();
    }
 catch (    final IOException e) {
    }
  }
}
