{
  final double xx=r.x;
  final double ww=r.w;
  final double f=0.25 * GUIProp.fontsize;
  final int fh=(int)Math.max(1,0.5 * GUIProp.fontsize);
  final int lh=(int)Math.max(1,0.8 * GUIProp.fontsize);
  final double ys=r.y + 3;
  double yy=ys;
  int wl=0;
  int ll=0;
  final FTTokenizer ftt=new FTTokenizer(s);
  final Color textc=g.getColor();
  int count=-1;
  int pp=0;
  int cp=0;
  int cs=0;
  boolean m=ftt.more();
  int lastl=0;
  while (m) {
    while (ll + wl < ww && (cs == ftt.sent && sen || cp == ftt.para && !sen) && (r.pos == null || (pp < r.pos.length && count < r.pos[pp]) || pp == r.pos.length)) {
      lastl=(int)((ftt.p - ftt.s) * f);
      wl+=lastl;
      count++;
      m=ftt.more();
      if (!m)       break;
    }
    if (ll + wl >= ww) {
      final int fp=(int)(ww - ll);
      if (fp <= f) {
        yy+=lh;
        ll=0;
      }
 else {
        final int sp=wl - fp;
        g.fillRect((int)(xx + ll),(int)yy,(int)(fp - f),fh);
        ll+=fp - f;
        g.setColor(new Color(0,0,0));
        g.fillRect((int)(xx + ll),(int)yy,(int)f,fh);
        g.setColor(textc);
        if (yy + lh >= r.y + r.h)         return;
        yy+=lh;
        ll=0;
        g.setColor(new Color(0,0,0));
        g.fillRect((int)xx,(int)yy,(int)f,fh);
        g.setColor(textc);
        wl=sp;
        ll=(int)f;
      }
    }
    if (r.pos != null && pp < r.pos.length && count == r.pos[pp]) {
      if (lastl > 0) {
        g.fillRect((int)(xx + ll),(int)yy,wl - lastl,fh);
        ll+=wl - lastl;
        wl=lastl;
      }
      pp++;
      g.setColor(thumbnailcolor[r.poi[pp]]);
    }
    if (wl + ll < ww) {
      g.fillRect((int)(xx + ll),(int)yy,wl,fh);
      g.setColor(textc);
      ll+=wl;
      wl=0;
    }
    if (cs < ftt.sent && sen || cp < ftt.para && !sen) {
      if (sen) {
        ll+=f;
        cs=ftt.sent;
      }
      if (cp < ftt.para) {
        cp=ftt.para;
        yy+=lh;
        wl=0;
        ll=0;
      }
    }
  }
}
