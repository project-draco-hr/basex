{
  if (nodes != null && nodes.ftpos != null)   ftpos=new FTPosData();
  try {
    if (nodes != null) {
      final Data data=nodes.data;
      if (!context.perm(User.READ,data.meta))       throw new QueryException(PERMNO,CmdPerm.READ);
      final int s=(int)nodes.size();
      if (nodes.doc) {
        doc=new DBNode[s];
        for (int n=0; n < s; n++) {
          addDoc(new DBNode(data,nodes.nodes[n],Data.DOC));
        }
      }
 else {
        for (        final int p : data.doc())         addDoc(new DBNode(data,p,Data.DOC));
      }
      rootDocs=docs;
      if (nodes.doc) {
        item=Seq.get(doc,docs);
      }
 else {
        final SeqIter si=new SeqIter(s);
        for (int n=0; n < s; n++) {
          si.add(new DBNode(data,nodes.nodes[n]));
        }
        item=si.finish();
      }
      addColl(new NodIter(doc,docs),token(data.meta.name));
    }
    if (inf)     compInfo(NL + QUERYCOMP);
    fun.comp(this);
    vars.comp(this);
    root=root.comp(this);
    if (inf)     info.add(NL + QUERYRESULT + root);
  }
 catch (  final StackOverflowError ex) {
    if (Prop.debug)     ex.printStackTrace();
    Err.or(XPSTACK);
  }
}
