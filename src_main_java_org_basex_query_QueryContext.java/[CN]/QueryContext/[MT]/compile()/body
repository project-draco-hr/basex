{
  if (nodes != null && nodes.ftpos != null)   ftpos=new FTPosData();
  try {
    if (nodes != null) {
      final Data data=nodes.data;
      if (!context.perm(User.READ,data.meta))       throw new QueryException(null,PERMNO,CmdPerm.READ);
      final int s=(int)nodes.size();
      if (nodes.doc) {
        doc=new DBNode[s];
        for (int n=0; n < s; ++n) {
          addDoc(new DBNode(data,nodes.nodes[n],Data.DOC));
        }
      }
 else {
        for (        final int p : data.doc())         addDoc(new DBNode(data,p,Data.DOC));
      }
      rootDocs=docs;
      if (nodes.doc) {
        value=Seq.get(doc,docs);
      }
 else {
        final ItemIter ir=new ItemIter(s);
        for (int n=0; n < s; ++n) {
          ir.add(new DBNode(data,nodes.nodes[n]));
        }
        value=ir.finish();
      }
      addColl(new NodIter(doc,docs),token(data.meta.name));
    }
    if (inf)     compInfo(NL + QUERYCOMP);
    final boolean empty=value == null;
    if (empty)     value=Item.DUMMY;
    funcs.comp(this);
    root=root.comp(this);
    if (empty)     value=null;
    if (inf)     info.add(NL + QUERYRESULT + funcs+ root+ NL);
  }
 catch (  final StackOverflowError ex) {
    Main.debug(ex);
    Err.or(null,XPSTACK);
  }
}
