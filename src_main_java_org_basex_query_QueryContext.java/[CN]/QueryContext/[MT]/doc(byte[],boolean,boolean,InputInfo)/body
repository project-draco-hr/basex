{
  if (contains(path,'<') || contains(path,'>'))   Err.or(ii,INVDOC,path);
  for (int c=0; c < colls; c++) {
    for (int n=0; n < collect[c].size(); n++) {
      if (eq(path,collect[c].get(n).base())) {
        return (DBNode)collect[c].get(n);
      }
    }
  }
  final String nm=string(path);
  for (int d=0; d < docs; d++)   if (doc[d].data.meta.name.equals(nm))   return doc[d];
  final IO io=IO.get(string(path));
  for (int d=0; d < docs; d++) {
    if (doc[d].data.meta.file.eq(io))     return doc[d];
  }
  Data data=null;
  if (db) {
    try {
      data=Open.open(nm,context);
    }
 catch (    final IOException ex) {
      Err.or(ii,NODB,nm);
    }
  }
 else {
    final IO file=file();
    data=check(nm,file == null,coll,ii);
    if (data == null)     data=check(file.merge(string(path)).path(),true,coll,ii);
  }
  final DBNode node=new DBNode(data,0,Data.DOC);
  addDoc(node);
  return node;
}
