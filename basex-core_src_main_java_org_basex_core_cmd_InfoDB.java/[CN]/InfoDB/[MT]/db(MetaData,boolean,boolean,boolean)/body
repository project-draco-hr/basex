{
  final TokenBuilder tb=new TokenBuilder();
  final String header=(bold ? new TokenBuilder().bold().add('%').norm().toString() : "%") + NL;
  tb.addExt(header,DB_PROPS);
  info(tb,NAME,meta.name);
  info(tb,SIZE,Performance.format(meta.dbsize()));
  info(tb,NODES,meta.size);
  info(tb,DOCUMENTS,meta.ndocs);
  final int b=meta.path != null ? meta.binaries().descendants().size() : 0;
  info(tb,BINARIES,b);
  info(tb,TIMESTAMP,DateTime.format(new Date(meta.dbtime()),DateTime.DATETIME));
  if (meta.corrupt)   tb.add(' ' + DB_CORRUPT + NL);
  tb.add(NL).addExt(header,RES_PROPS);
  if (create && !meta.original.isEmpty())   info(tb,INPUT_PATH,meta.original);
  if (meta.filesize != 0)   info(tb,INPUT_SIZE,Performance.format(meta.filesize));
  info(tb,TIMESTAMP,DateTime.format(new Date(meta.time),DateTime.DATETIME));
  info(tb,ENCODING,meta.encoding);
  info(tb,WS_CHOPPING,Util.flag(meta.chop));
  if (index) {
    tb.add(NL).addExt(header,INDEXES);
    if (meta.oldindex()) {
      tb.add(' ' + H_INDEX_FORMAT + NL);
    }
 else {
      info(tb,UP_TO_DATE,meta.uptodate);
      info(tb,TEXT_INDEX,Util.flag(meta.textindex));
      info(tb,ATTRIBUTE_INDEX,Util.flag(meta.attrindex));
      info(tb,FULLTEXT_INDEX,Util.flag(meta.ftxtindex));
      info(tb,STEMMING,Util.flag(meta.stemming));
      info(tb,CASE_SENSITIVITY,Util.flag(meta.casesens));
      info(tb,DIACRITICS,Util.flag(meta.diacritics));
      info(tb,STOPWORD_LIST,meta.stopwords);
      info(tb,LANGUAGE,meta.language);
      info(tb,MainOptions.UPDINDEX.name(),Util.flag(meta.updindex));
      info(tb,MainOptions.MAXCATS.name(),meta.maxcats);
      info(tb,MainOptions.MAXLEN.name(),meta.maxlen);
    }
  }
  return tb.toString();
}
