{
  treeAwareUpdates();
  NodeUpdates recent=null;
  for (int i=nodes.size() - 1; i >= 0; i--) {
    final NodeUpdates current=updatePrimitives.get(nodes.get(i));
    if (recent == null)     current.makePrimitivesEffective();
 else     recent.resolveExternalTextNodeAdjacency(current.makePrimitivesEffective());
    recent=current;
  }
  recent.resolveExternalTextNodeAdjacency(0);
  data.flush();
  if (data.meta.prop.is(Prop.WRITEBACK) && !data.meta.original.isEmpty()) {
    try {
      Export.export(ctx.context.prop,data,data.meta.original);
    }
 catch (    final IOException ex) {
      UPPUTERR.thrw(null,data.meta.original);
    }
  }
}
