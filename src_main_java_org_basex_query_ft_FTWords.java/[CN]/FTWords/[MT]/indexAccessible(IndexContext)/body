{
  final MetaData md=ic.data.meta;
  final FTOpt fto=ic.ctx.ftopt;
  if (txt == null || occ != null || mode != FTMode.M_ANY && mode != FTMode.M_ALL && mode != FTMode.M_PHRASE || md.casesens != fto.is(FTOpt.CS) || md.diacritics != fto.is(FTOpt.DC) || md.stemming != fto.is(FTOpt.ST))   return false;
  if (txt.length == 0) {
    ic.costs=0;
    return true;
  }
  boolean wc=fto.is(FTOpt.WC);
  if (wc) {
    wc=md.wildcards;
    if (!wc)     return false;
  }
  final Tokenizer ft=new Tokenizer(txt,fto,fast,ic.ctx.context.prop);
  ic.costs=0;
  while (ft.more()) {
    final byte[] tok=ft.get();
    if (tok.length > Token.MAXLEN)     return false;
    if (fto.sw != null && fto.sw.id(tok) != 0)     continue;
    if (wc) {
      byte[] t=ft.get();
      if (t[0] == '.')       return false;
      int d=0;
      for (      final byte w : t) {
        if (w == '{' || w == '\\' || w == '.' && ++d > 1)         return false;
      }
    }
    final int s=ic.data.nrIDs(ft) + 3 >> 2;
    if (ic.costs > s || ic.costs == 0)     ic.costs=s;
    if (s == 0)     break;
  }
  return true;
}
