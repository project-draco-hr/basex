{
  final IO base=ctx.sc.baseIO();
  final String in=base != null ? base.merge(input).path() : null;
  for (int c=0; c < colls; c++) {
    if (in != null && collName[c].equalsIgnoreCase(in) || collName[c].equalsIgnoreCase(input))     return coll[c];
  }
  final QueryInput qi=new QueryInput(input);
  Data dt=null;
  for (int d=0; d < datas; ++d) {
    if (qi.db != null && data[d].meta.name.equalsIgnoreCase(qi.db) || IO.get(data[d].meta.original).eq(qi.input)) {
      dt=data[d];
      break;
    }
  }
  if (dt == null)   dt=open(qi);
  if (dt == null)   dt=create(qi,false,info);
  return DBNodeSeq.get(dt.resources.docs(qi.path),dt,true,qi.path.isEmpty());
}
