{
  if (type instanceof AtomType) {
    final Item atom=StandardFunc.atom(it,ii);
    if (atom != it && atom.type.instanceOf(type))     return it;
    if (atom.type == AtomType.ATM) {
      if (type.nsSensitive()) {
        if (sc.xquery3())         throw NSSENS.get(ii,it.type,type);
        throw Err.treatError(ii,withOcc(Occ.ONE),it);
      }
      return type.cast(atom,ctx,sc,ii);
    }
    final Type at=atom.type, tt=type;
    if (tt == AtomType.DBL && (at.instanceOf(AtomType.FLT) || at.instanceOf(AtomType.DEC)))     return Dbl.get(atom.dbl(ii));
    if (tt == AtomType.FLT && at.instanceOf(AtomType.DEC))     return Flt.get(atom.flt(ii));
    if (tt == AtomType.STR && at.instanceOf(AtomType.URI))     return Str.get(atom.string(ii));
  }
 else   if (it instanceof FItem && type instanceof FuncType) {
    return ((FItem)it).coerceTo((FuncType)type,ctx,ii);
  }
  throw Err.treatError(ii,withOcc(Occ.ONE),it);
}
