{
  final int n=(int)value.size();
  if (!occ.check(n))   throw QueryError.typeError(value,this,name,ii);
  if (n == 0)   return Empty.SEQ;
  ItemList cache=null;
  for (int i=0; i < n; i++) {
    final Item it=value.itemAt(i);
    if (instance(it)) {
      if (i == 0 && value.homogeneous())       return value;
      if (cache != null)       cache.add(it);
    }
 else {
      if (cache == null) {
        cache=new ItemList(n);
        for (int j=0; j < i; j++)         cache.add(value.itemAt(j));
      }
      promote(it,name,opt,cache,qc,sc,ii);
    }
  }
  return cache != null ? cache.value(type) : value;
}
