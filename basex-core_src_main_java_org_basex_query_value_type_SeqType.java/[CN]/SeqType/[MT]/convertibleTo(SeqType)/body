{
  if (intersect(t) != null)   return true;
  if (occ.intersect(t.occ) == null)   return false;
  final Type to=t.type;
  if (to instanceof AtomType) {
    if (type.isUntyped())     return !to.nsSensitive();
    return to == AtomType.DBL && (couldBe(AtomType.FLT) || couldBe(AtomType.DEC)) || to == AtomType.FLT && couldBe(AtomType.DEC) || to == AtomType.STR && couldBe(AtomType.URI);
  }
  return t.type instanceof FuncType && type instanceof FuncType;
}
