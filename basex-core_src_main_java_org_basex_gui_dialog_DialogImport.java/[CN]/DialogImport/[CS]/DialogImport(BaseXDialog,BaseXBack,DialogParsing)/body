{
  gui=dial.gui;
  this.parsing=parsing;
  layout(new TableLayout(10,1));
  border(8);
  add(new BaseXLabel(FILE_OR_DIR + COL,true,true).border(0,0,6,0));
  final String path=gui.gopts.get(GUIOptions.INPUTPATH);
  input=new BaseXTextField(path,dial).history(GUIOptions.INPUTS,dial);
  final IO io=IO.get(path);
  if (io instanceof IOFile && !path.isEmpty())   dbname=io.dbname();
  browse=new BaseXButton(BROWSE_D,dial);
  browse.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    final ActionEvent e){
      choose();
    }
  }
);
  final BaseXBack b=new BaseXBack(new TableLayout(1,2,8,0));
  b.add(input);
  b.add(browse);
  add(b);
  add(panel);
  add(Box.createVerticalStrut(12));
  final MainOptions opts=gui.context.options;
  final StringList ps=new StringList();
  for (  final MainParser mp : MainParser.values())   ps.add(mp.name());
  parsers=new BaseXCombo(dial,ps.finish());
  parsers.setSelectedItem(opts.get(MainOptions.PARSER).name());
  filter=new BaseXTextField(opts.get(MainOptions.CREATEFILTER),dial);
  filter.setColumns(30);
  addRaw=new BaseXCheckBox(ADD_RAW_FILES,MainOptions.ADDRAW,opts,dial);
  skipCorrupt=new BaseXCheckBox(SKIP_CORRUPT_FILES,MainOptions.SKIPCORRUPT,opts,dial);
  archives=new BaseXCheckBox(PARSE_ARCHIVES,MainOptions.ADDARCHIVES,opts,dial);
  final BaseXBack p=new BaseXBack(new TableLayout(2,2,20,0));
  p.add(new BaseXLabel(INPUT_FORMAT,false,true).border(0,0,6,0));
  p.add(new BaseXLabel(FILE_PATTERNS + COL,false,true).border(0,0,6,0));
  p.add(parsers);
  p.add(filter);
  add(p);
  add(Box.createVerticalStrut(8));
  add(addRaw);
  add(skipCorrupt);
  add(archives);
  info=new BaseXLabel(" ").border(20,0,6,0);
  add(info);
  final DropHandler dh=new DropHandler(){
    @Override public void drop(    final Object object){
      input.setText(object.toString());
      action(input,dial instanceof DialogNew);
    }
  }
;
  BaseXLayout.addDrop(this,dh);
  BaseXLayout.addDrop(input,dh);
}
