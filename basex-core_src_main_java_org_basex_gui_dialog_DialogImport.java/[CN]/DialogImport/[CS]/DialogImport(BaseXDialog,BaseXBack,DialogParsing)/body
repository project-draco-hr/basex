{
  gui=dial.gui;
  parsing=parse;
  layout(new TableLayout(10,1));
  border(8);
  add(new BaseXLabel(FILE_OR_DIR + COL,true,true).border(0,0,6,0));
  final String in=gui.gopts.string(GUIOptions.INPUTPATH);
  input=new BaseXTextField(gui.gopts.string(GUIOptions.INPUTPATH),dial);
  input.history(gui,GUIOptions.INPUTS);
  final IO io=IO.get(in);
  if (io instanceof IOFile && !in.isEmpty())   dbname=io.dbname();
  browse=new BaseXButton(BROWSE_D,dial);
  browse.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    final ActionEvent e){
      choose();
    }
  }
);
  final BaseXBack b=new BaseXBack(new TableLayout(1,2,8,0));
  b.add(input);
  b.add(browse);
  add(b);
  add(panel);
  add(Box.createVerticalStrut(12));
  final MainOptions opts=gui.context.options;
  final StringList parsers=new StringList(PARSING.length);
  for (  final String p : PARSING)   parsers.add(p.toUpperCase(Locale.ENGLISH));
  parser=new BaseXCombo(dial,parsers.toArray());
  parser.setSelectedItem(opts.string(MainOptions.PARSER).toUpperCase(Locale.ENGLISH));
  filter=new BaseXTextField(opts.string(MainOptions.CREATEFILTER),dial);
  BaseXLayout.setWidth(filter,200);
  addRaw=new BaseXCheckBox(ADD_RAW_FILES,opts.bool(MainOptions.ADDRAW),dial);
  skipCorrupt=new BaseXCheckBox(SKIP_CORRUPT_FILES,opts.bool(MainOptions.SKIPCORRUPT),dial);
  archives=new BaseXCheckBox(PARSE_ARCHIVES,opts.bool(MainOptions.ADDARCHIVES),dial);
  final BaseXBack p=new BaseXBack(new TableLayout(2,2,20,0));
  p.add(new BaseXLabel(INPUT_FORMAT,false,true).border(0,0,6,0));
  p.add(new BaseXLabel(FILE_PATTERNS + COL,false,true).border(0,0,6,0));
  p.add(parser);
  p.add(filter);
  add(p);
  add(Box.createVerticalStrut(8));
  add(addRaw);
  add(skipCorrupt);
  add(archives);
  info=new BaseXLabel(" ").border(24,0,6,0);
  add(info);
}
