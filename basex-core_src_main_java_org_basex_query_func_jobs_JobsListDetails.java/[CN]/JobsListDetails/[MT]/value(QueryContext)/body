{
  checkAdmin(qc);
  final Map<String,Job> queued=qc.context.jobs.queued;
  final Set<String> set=exprs.length == 0 ? queued.keySet() : Collections.singleton(Token.string(toToken(exprs[0],qc)));
  final int ml=qc.context.soptions.get(StaticOptions.LOGMSGMAXLEN);
  final ValueBuilder vb=new ValueBuilder();
  for (  final String key : set) {
    final Job job=queued.get(key);
    if (job == null)     continue;
    final JobContext jc=job.job();
    final FElem elem=new FElem(JOB).add(ID,key).add(TYPE,jc.type());
    elem.add(chop(normalize(token(jc.toString())),ml));
    final JobState state;
    if (jc.performance != null) {
      final long ms=(System.nanoTime() - jc.performance.start()) / 1000000;
      elem.add(DURATION,new DTDur(ms).string(info));
      state=job.state;
    }
 else {
      state=JobState.QUEUED;
    }
    elem.add(STATE,state.toString().toLowerCase(Locale.ENGLISH));
    elem.add(USER,jc.context.user().name());
    vb.add(elem);
  }
  return vb.value();
}
