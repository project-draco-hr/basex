{
  Value val=null;
  if (type.is(MediaType.APPLICATION_JSON)) {
    final JsonParserOptions opts=new JsonParserOptions(options.get(MainOptions.JSONPARSER));
    opts.parse(type);
    val=JsonConverter.get(opts).convert(input);
  }
 else   if (type.is(MediaType.TEXT_CSV)) {
    final CsvParserOptions opts=new CsvParserOptions(options.get(MainOptions.CSVPARSER));
    opts.parse(type);
    val=CsvConverter.get(opts).convert(input);
  }
 else   if (type.is(MediaType.TEXT_HTML)) {
    final HtmlOptions opts=new HtmlOptions(options.get(MainOptions.HTMLPARSER));
    opts.parse(type);
    val=new DBNode(new HtmlParser(input,options,opts));
  }
 else   if (type.is(MediaType.APPLICATION_X_WWW_FORM_URLENCODED)) {
    final String enc=type.parameters().get(CHARSET);
    val=Str.get(URLDecoder.decode(string(input.read()),enc == null ? Strings.UTF8 : enc));
  }
 else   if (type.isXML()) {
    val=new DBNode(input);
  }
 else   if (type.isText()) {
    val=Str.get(new NewlineInput(input).content());
  }
 else   if (type.isMultipart()) {
    try (final InputStream is=input.inputStream()){
      final HttpPayload hp=new HttpPayload(is,true,null,options);
      hp.extractParts(concat(DASHES,hp.boundary(type)),null);
      val=hp.payloads();
    }
   }
  return val == null ? new B64(input.read()) : val;
}
