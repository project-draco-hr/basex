{
  final byte[] bound=concat(DASHES,boundary(type)), last=concat(bound,DASHES);
  final HashMap<String,Value> data=new HashMap<>();
  final ByteList cont=new ByteList();
  int lines=-1;
  String name=null, filename=null;
  for (byte[] line; (line=readLine()) != null; ) {
    if (lines >= 0) {
      if (startsWith(line,bound)) {
        Value val=data.get(name);
        if (filename != null) {
          final Map map=val instanceof Map ? (Map)val : Map.EMPTY;
          final Str file=Str.get(filename);
          final B64 contents=new B64(cont.next());
          final Value files=new ValueBuilder().add(map.get(file,info)).add(contents).value();
          val=map.put(file,files,info);
        }
 else {
          final Str v=Str.get(cont.next());
          val=val == null ? v : new ValueBuilder().add(val).add(v).value();
        }
        if (!name.isEmpty())         data.put(name,val);
        lines=-1;
        if (eq(line,last))         break;
      }
 else {
        if (lines++ > 0)         cont.add(CRLF);
        cont.add(line);
      }
    }
 else     if (startsWith(line,CONTENT_DISPOSITION)) {
      name=contains(line,token(NAME + '=')) ? string(line).replaceAll("^.*?" + NAME + "=\"|\".*","").replaceAll("\\[\\]","") : null;
      filename=contains(line,token(FILENAME + '=')) ? string(line).replaceAll("^.*" + FILENAME + "=\"|\"$","") : null;
    }
 else     if (line.length == 0) {
      lines=0;
    }
  }
  return data;
}
