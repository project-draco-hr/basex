{
  final long s=Math.round(checkDbl(arg[1]));
  final long e=arg.length > 2 ? s + Math.round(checkDbl(arg[2])) : Long.MAX_VALUE;
  return arg[0].size() != -1 ? new Iter(){
    long c=Math.max(1,s);
    @Override public Item next(){
      return c < e ? arg[0].get(c++ - 1) : null;
    }
  }
 : new Iter(){
    long c=0;
    @Override public Item next() throws QueryException {
      while (true) {
        final Item i=arg[0].next();
        if (i == null || ++c >= e)         return null;
        if (c >= s)         return i;
      }
    }
  }
;
}
