{
switch (kind(pre)) {
case TEXT:
case COMM:
    return text(pre,true);
case ATTR:
  return text(pre,false);
case PI:
byte[] txt=text(pre,true);
final int i=indexOf(txt,' ');
return i == -1 ? EMPTY : substring(txt,i + 1);
default :
TokenBuilder tb=null;
byte[] t=EMPTY;
int p=pre;
final int s=p + size(p,kind(p));
while (p != s) {
final int k=kind(p);
if (k == TEXT) {
txt=text(p,true);
if (t == EMPTY) {
t=txt;
}
 else {
if (tb == null) tb=new TokenBuilder(t);
tb.add(txt);
}
}
p+=attSize(p,k);
}
return tb == null ? t : tb.finish();
}
}
