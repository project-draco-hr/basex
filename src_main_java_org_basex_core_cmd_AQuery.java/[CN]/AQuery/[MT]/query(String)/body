{
  final int runs=Math.max(1,prop.num(Prop.RUNS));
  String err=null;
  try {
    final SerializerProp sp=new SerializerProp(prop.get(Prop.SERIALIZER));
    if (prop.is(Prop.WRAPOUTPUT)) {
      sp.set(SerializerProp.S_WRAP_PRE,NAMELC);
      sp.set(SerializerProp.S_WRAP_URI,URL);
    }
    final boolean ser=prop.is(Prop.SERIALIZE);
    long hits=0;
    int updates=0;
    for (int i=0; i < runs; ++i) {
      final Performance per=new Performance();
      qp=new QueryProcessor(query,context);
      progress(qp);
      qp.parse();
      pars+=per.getTime();
      if (i == 0)       plan(qp,false);
      qp.compile();
      comp+=per.getTime();
      if (i == 0)       plan(qp,true);
      final PrintOutput po=i == 0 && ser ? out : new NullOutput(!ser);
      XMLSerializer xml;
      if (context.prop.is(Prop.CACHEQUERY)) {
        result=qp.execute();
        eval+=per.getTime();
        xml=qp.getSerializer(po,sp);
        result.serialize(xml);
        hits=result.size();
      }
 else {
        final Iter ir=qp.iter();
        eval+=per.getTime();
        hits=0;
        Item it=ir.next();
        xml=qp.getSerializer(po,sp);
        while (it != null) {
          checkStop();
          xml.openResult();
          it.serialize(xml);
          xml.closeResult();
          it=ir.next();
          hits++;
        }
      }
      updates=qp.updates();
      xml.close();
      qp.close();
      prnt+=per.getTime();
    }
    if (prop.is(Prop.QUERYINFO))     evalInfo(hits,updates,runs);
    out.flush();
    return info(NL + QUERYEXEC,perf.getTimer(runs));
  }
 catch (  final QueryException ex) {
    Main.debug(ex);
    err=ex.getMessage();
  }
catch (  final IOException ex) {
    Main.debug(ex);
    err=ex.getMessage();
  }
catch (  final ProgressException ex) {
    err=PROGERR;
  }
  try {
    if (qp != null)     qp.close();
  }
 catch (  final IOException ex) {
  }
  error(err);
  if (Prop.debug) {
    info(NL);
    info(QUERYSTRING + qp.query());
    info(qp.info());
  }
  return false;
}
