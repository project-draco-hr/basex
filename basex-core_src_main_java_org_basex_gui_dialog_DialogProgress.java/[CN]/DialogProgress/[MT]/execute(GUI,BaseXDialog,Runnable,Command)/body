{
  for (  final Command cmd : cmds) {
    final boolean newData=cmd.newData(gui.context);
    if (newData)     gui.notify.init();
    final DialogProgress wait=dialog != null ? new DialogProgress(dialog,cmd) : new DialogProgress(gui,cmd);
    new Thread(){
      @Override public void run(){
        final Performance perf=new Performance();
        gui.updating=cmd.updating(gui.context);
        boolean ok=true;
        String info;
        try {
          cmd.execute(gui.context);
          info=cmd.info();
        }
 catch (        final BaseXException ex) {
          ok=false;
          info=Util.message(ex);
        }
 finally {
          gui.updating=false;
        }
        final String time=perf.toString();
        gui.info.setInfo(info,cmd,time,ok,true);
        gui.status.setText(Util.info(TIME_NEEDED_X,time));
        wait.dispose();
        if (!ok)         BaseXDialog.error(gui,info.equals(INTERRUPTED) ? COMMAND_CANCELED : info);
      }
    }
.start();
    wait.setVisible(true);
    if (newData)     gui.notify.init();
 else     if (cmd.updating(gui.context))     gui.notify.update();
  }
  if (dialog != null)   dialog.action(dialog);
  if (post != null)   SwingUtilities.invokeLater(post);
}
