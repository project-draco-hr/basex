{
  final MapRect l=view.layout;
  final int ww=view.getWidth();
  final int hh=view.getWidth();
  final Data data=GUI.context.data();
  mpos=0;
  final int rs=rects.size;
  for (int ri=0; ri < rs; ri++) {
    final MapRect r=rects.get(ri);
    final int pre=r.p;
    final int lvl=r.l;
    if (lvl == 0)     mpos=0;
    final boolean full=r.w == ww && r.h == hh;
    Color color=nextMark(rects,pre,ri,rs);
    final boolean mark=color != null;
    g.setColor(mark ? color : GUIConstants.COLORS[lvl]);
    if (r.w < l.x + l.w || r.h < l.y + l.h || GUIProp.maplayout < 2 || ViewData.isLeaf(data,pre)) {
      g.fillRect(r.x,r.y,r.w,r.h);
    }
 else {
      g.fillRect(r.x,r.y,l.x,r.h);
      g.fillRect(r.x,r.y,r.w,l.y);
      g.fillRect(r.x + r.w - l.w,r.y,l.w,r.h);
      g.fillRect(r.x,r.y + r.h - l.h,r.w,l.h);
    }
    if (!full) {
      color=mark ? GUIConstants.colormark3 : GUIConstants.COLORS[lvl + 2];
      g.setColor(color);
      g.drawRect(r.x,r.y,r.w,r.h);
      color=mark ? GUIConstants.colormark4 : GUIConstants.COLORS[Math.max(0,lvl - 2)];
      g.setColor(color);
      g.drawLine(r.x + r.w,r.y,r.x + r.w,r.y + r.h);
      g.drawLine(r.x,r.y + r.h,r.x + r.w,r.y + r.h);
    }
    if (r.w < GUIProp.fontsize || r.h < GUIProp.fontsize)     continue;
    drawRectangle(g,r.clone());
  }
}
