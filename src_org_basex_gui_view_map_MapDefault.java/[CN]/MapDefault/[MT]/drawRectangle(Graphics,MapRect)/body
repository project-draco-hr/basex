{
  rect.x+=3;
  rect.w-=3;
  final int pre=rect.p;
  final Context context=GUI.context;
  final Data data=context.data();
  final Nodes current=context.current();
  final int kind=data.kind(pre);
  if (kind == Data.ELEM || kind == Data.DOC) {
    final byte[] name=current.size == 1 && pre != 0 && pre == current.pre[0] ? ViewData.path(data,pre) : ViewData.tag(data,pre);
    g.setColor(Color.black);
    g.setFont(GUIConstants.font);
    BaseXLayout.chopString(g,name,rect.x,rect.y,rect.w);
  }
 else {
    g.setColor(GUIConstants.COLORS[rect.l * 2 + 8]);
    g.setFont(GUIConstants.mfont);
    byte[] text=ViewData.content(data,pre,false);
    final int p=BaseXLayout.centerPos(g,text,rect.w);
    if (p == -1) {
      BaseXLayout.drawText(g,rect,text,Integer.MAX_VALUE,true);
    }
 else {
      g.drawString(string(text,0,text.length),rect.x + p,rect.y + (rect.h + GUIProp.fontsize) / 2 - 1);
    }
  }
}
