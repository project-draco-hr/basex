{
  final Version semVer1=new Version(token("3"));
  final Version v1=new Version(token("3"));
  assertTrue(v1.isCompatible(semVer1) || v1.compareTo(semVer1) < 0);
  final Version v2=new Version(token("2.4"));
  assertTrue(v2.isCompatible(semVer1) || v2.compareTo(semVer1) < 0);
  final Version v3=new Version(token("2"));
  assertTrue(v3.isCompatible(semVer1) || v3.compareTo(semVer1) < 0);
  final Version v4=new Version(token("4.6.55"));
  assertFalse(v4.isCompatible(semVer1) || v4.compareTo(semVer1) < 0);
  final Version semVer2=new Version(token("3.5"));
  final Version vv1=new Version(token("3.5"));
  assertTrue(vv1.isCompatible(semVer2) || vv1.compareTo(semVer2) < 0);
  final Version vv2=new Version(token("3.5.0"));
  assertTrue(vv2.isCompatible(semVer2) || vv2.compareTo(semVer2) < 0);
  final Version vv3=new Version(token("2"));
  assertTrue(vv3.isCompatible(semVer2) || vv3.compareTo(semVer2) < 0);
  final Version vv4=new Version(token("3.6"));
  assertFalse(vv4.isCompatible(semVer2) || vv4.compareTo(semVer2) < 0);
  final Version vv5=new Version(token("3.4.66"));
  assertTrue(vv5.isCompatible(semVer2) || vv5.compareTo(semVer2) < 0);
  final Version vv6=new Version(token("6"));
  assertFalse(vv6.isCompatible(semVer2) || vv6.compareTo(semVer2) < 0);
  final Version semVer3=new Version(token("3.4.7"));
  final Version vvv1=new Version(token("3.4.7"));
  assertTrue(vvv1.isCompatible(semVer3) || vvv1.compareTo(semVer3) < 0);
  final Version vvv2=new Version(token("3.4.6"));
  assertTrue(vvv2.isCompatible(semVer3) || vvv2.compareTo(semVer3) < 0);
  final Version vvv3=new Version(token("3.3"));
  assertTrue(vvv3.isCompatible(semVer3) || vvv3.compareTo(semVer3) < 0);
  final Version vvv4=new Version(token("1"));
  assertTrue(vvv4.isCompatible(semVer3) || vvv4.compareTo(semVer3) < 0);
  final Version vvv5=new Version(token("3.4.8"));
  assertFalse(vvv5.isCompatible(semVer3) || vvv5.compareTo(semVer3) < 0);
  final Version vvv6=new Version(token("3.5.0"));
  assertFalse(vvv6.isCompatible(semVer3) || vvv6.compareTo(semVer3) < 0);
  final Version vvv8=new Version(token("3.4.0"));
  assertTrue(vvv8.isCompatible(semVer3) || vvv8.compareTo(semVer3) < 0);
}
