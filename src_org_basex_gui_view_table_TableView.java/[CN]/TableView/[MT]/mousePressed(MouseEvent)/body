{
  super.mousePressed(e);
  final Context context=gui.context;
  final Data data=context.data;
  if (tdata.rows == null || data.fs != null && tdata.mouseX < 20)   return;
  if (e.getY() < header.getHeight())   return;
  final int pre=gui.context.focused;
  if (SwingUtilities.isLeftMouseButton(e)) {
    if (e.getClickCount() == 1) {
      final String str=content.focusedString;
      if (str == null || str.length() > Token.MAXLEN)       return;
      if (!e.isShiftDown())       tdata.resetFilter();
      final int c=tdata.column(getWidth() - BaseXBar.SIZE,e.getX());
      tdata.cols[c].filter=str;
      query();
    }
 else {
      Nodes nodes=context.marked;
      if (getCursor() == GUIConstants.CURSORARROW) {
        nodes=new Nodes(tdata.getRoot(nodes.data,pre),nodes.data);
      }
      gui.notify.context(nodes,false,null);
    }
  }
 else {
    if (pre != -1) {
      final TableIterator it=new TableIterator(context.data,tdata);
      final int c=tdata.column(getWidth() - BaseXBar.SIZE,e.getX());
      it.init(pre);
      while (it.more()) {
        if (it.col == c) {
          gui.notify.mark(new Nodes(it.pre,context.data),null);
          return;
        }
      }
    }
  }
}
