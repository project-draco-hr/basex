{
  final SerializerProp p=props == null ? PROPS : props;
  final String ver=p.supported(S_VERSION,versions);
  final String htmlver=p.supported(S_HTML_VERSION,new String[]{V40,V401,V50});
  html5=htmlver.equals(V50) || ver.equals(V50);
  final boolean decl=!p.yes(S_OMIT_XML_DECLARATION);
  final boolean bom=p.yes(S_BYTE_ORDER_MARK);
  final String sa=p.check(S_STANDALONE,YES,NO,OMIT);
  p.check(S_NORMALIZATION_FORM,NFC,NONE);
  final String maps=p.get(S_USE_CHARACTER_MAPS);
  final String enc=normEncoding(p.get(S_ENCODING));
  try {
    encoding=Charset.forName(enc);
  }
 catch (  final Exception ex) {
    throw SERENCODING.thrwSerial(enc);
  }
  utf8=enc == UTF8;
  indents=Math.max(0,toInt(p.get(S_INDENTS)));
  format=p.yes(S_FORMAT);
  tab=p.yes(S_TABULATOR) ? '\t' : ' ';
  wPre=token(p.get(S_WRAP_PREFIX));
  wrap=wPre.length != 0;
  final String eol=p.check(S_NEWLINE,S_NL,S_CR,S_CRNL);
  nl=utf8(token(eol.equals(S_NL) ? "\n" : eol.equals(S_CR) ? "\r" : "\r\n"),enc);
  String s=p.get(S_ITEM_SEPARATOR);
  if (s.equals(UNDEFINED))   s=p.get(S_SEPARATOR);
  itemsep=s.equals(UNDEFINED) ? null : token(s.indexOf('\\') != -1 ? s.replace("\\n","\n").replace("\\r","\r").replace("\\t","\t") : s);
  docsys=p.get(S_DOCTYPE_SYSTEM);
  docpub=p.get(S_DOCTYPE_PUBLIC);
  media=p.get(S_MEDIA_TYPE);
  escape=p.yes(S_ESCAPE_URI_ATTRIBUTES);
  content=p.yes(S_INCLUDE_CONTENT_TYPE);
  undecl=p.yes(S_UNDECLARE_PREFIXES);
  indent=p.yes(S_INDENT) && format;
  if (!maps.isEmpty())   SERMAP.thrwSerial(maps);
  if (docsys.isEmpty()) {
    docsys=null;
    docpub=null;
  }
 else   if (docpub.isEmpty()) {
    docpub=null;
  }
  out=PrintOutput.get(os);
  if (bom) {
    if (enc == UTF8) {
      out.write(0xEF);
      out.write(0xBB);
      out.write(0xBF);
    }
 else     if (enc == UTF16LE) {
      out.write(0xFF);
      out.write(0xFE);
    }
 else     if (enc == UTF16BE) {
      out.write(0xFE);
      out.write(0xFF);
    }
  }
  final String supp=p.get(S_SUPPRESS_INDENTATION);
  if (!supp.isEmpty()) {
    for (    final String c : supp.split("\\s+")) {
      if (!c.isEmpty())       suppress.add(c);
    }
  }
  if (this instanceof XMLSerializer || this instanceof XHTMLSerializer) {
    final String cdse=p.get(S_CDATA_SECTION_ELEMENTS);
    if (!cdse.isEmpty()) {
      for (      final String c : cdse.split("\\s+")) {
        if (!c.isEmpty())         cdata.add(c);
      }
    }
    if (undecl && ver.equals(V10))     SERUNDECL.thrwSerial();
    if (decl) {
      print(PI_O);
      print(DOCDECL1);
      print(ver);
      print(DOCDECL2);
      print(p.get(S_ENCODING));
      if (!sa.equals(OMIT)) {
        print(DOCDECL3);
        print(sa);
      }
      print(ATT2);
      print(PI_C);
      sep=true;
    }
 else     if (!sa.equals(OMIT) || !ver.equals(V10) && docsys != null) {
      SERSTAND.thrwSerial();
    }
  }
  if (wrap) {
    startElement(concat(wPre,COLON,T_RESULTS));
    namespace(wPre,token(p.get(S_WRAP_URI)));
  }
}
