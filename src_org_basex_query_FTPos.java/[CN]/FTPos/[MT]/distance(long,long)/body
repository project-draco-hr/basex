{
  if (dunit == null)   return true;
  final IntList[] il=sortPositions();
  IntList p=il[0];
  IntList pp=il[1];
  int p1;
  int p2;
  int[] res=new int[p.size];
  int c=0;
  int i=0;
  int lp=0;
  while (i < pp.size && pp.list[lp] == pp.list[i]) {
    res[c++]=i;
    i++;
  }
  while (i < pp.size) {
    int[] tmp=new int[p.size];
    int tc=0;
    lp=i;
    while (i < pp.size && pp.list[lp] == pp.list[i]) {
      p1=calcPosition(p.list[i],dunit);
      boolean o=false;
      for (int z=0; z < c; z++) {
        p2=calcPosition(p.list[res[z]],dunit);
        final int d=Math.abs(p1 - p2) - 1;
        if (d >= mn && d <= mx) {
          o=true;
          break;
        }
      }
      if (o)       tmp[tc++]=i;
      i++;
    }
    res=tmp;
    c=tc;
  }
  return c > 0;
}
