{
  if (compiled)   return this;
  compiled=true;
  for (  final Entry<Var,Expr> e : nonLocal.entrySet()) {
    final Expr bound=e.getValue().compile(ctx,scp);
    e.setValue(bound);
    e.getKey().refineType(bound.type(),ctx,info);
  }
  final int fp=scope.enter(ctx);
  try {
    for (    final Entry<Var,Value> e : staticBindings())     ctx.set(e.getKey(),e.getValue(),info);
    expr=expr.compile(ctx,scope);
  }
 catch (  final QueryException qe) {
    expr=FNInfo.error(qe,ret != null ? ret : expr.type());
  }
 finally {
    scope.cleanUp(this);
    scope.exit(ctx,fp);
  }
  expr.markTailCalls(ctx);
  return optimize(ctx,scp);
}
