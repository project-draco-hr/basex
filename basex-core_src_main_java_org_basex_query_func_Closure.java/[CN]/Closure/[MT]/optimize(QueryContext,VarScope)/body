{
  final SeqType r=expr.seqType();
  final SeqType retType=updating ? SeqType.EMP : ret == null || r.instanceOf(ret) ? r : ret;
  seqType=FuncType.get(ann,args,retType).seqType();
  size=1;
  try {
    for (    final Entry<Var,Value> e : staticBindings()) {
      final Var v=e.getKey();
      final Expr inlined=expr.inline(qc,scope,v,v.checkType(e.getValue(),qc,info,true));
      if (inlined != null)       expr=inlined;
    }
  }
 catch (  final QueryException qe) {
    expr=FnError.get(qe,ret != null ? ret : expr.seqType());
  }
 finally {
    scope.cleanUp(this);
  }
  return nonLocal.isEmpty() ? preEval(qc) : this;
}
