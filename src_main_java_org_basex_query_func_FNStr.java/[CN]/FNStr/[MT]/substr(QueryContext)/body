{
  final double ds=checkDbl(expr[1],ctx);
  final byte[] str=checkEStr(expr[0],ctx);
  if (ds != ds)   return Str.ZERO;
  final boolean end=expr.length == 3;
  int l=len(str);
  int s=subPos(ds);
  int e=end ? subPos(checkDbl(expr[2],ctx) + 1) : l;
  if (s < 0) {
    e+=s;
    s=0;
  }
  e=Math.min(l,end ? s + e : Integer.MAX_VALUE);
  if (s >= e)   return Str.ZERO;
  if (ascii(str))   return Str.get(substring(str,s,e));
  int ss=s;
  int ee=e;
  int p=0;
  for (l=0; l < str.length; l+=cl(str,l), ++p) {
    if (p == s)     ss=l;
    if (p == e)     ee=l;
  }
  if (p == e)   ee=l;
  return Str.get(Arrays.copyOfRange(str,ss,ee));
}
