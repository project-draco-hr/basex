{
  for (  final UpdatePrimitive p : prim) {
    final PrimitiveType t=p.type;
    del|=t == DELETENODE;
    rep|=t == REPLACENODE;
  }
  if (prim.length > 1 && (rep || del)) {
    final PrimitiveType dominantOp=rep ? REPLACENODE : DELETENODE;
    final ObjList<UpdatePrimitive> up=new ObjList<UpdatePrimitive>();
    for (    final UpdatePrimitive p : prim) {
      final PrimitiveType t=p.type;
      if (t == INSERTBEFORE || t == INSERTAFTER || t == dominantOp)       up.add(p);
    }
    prim=up.toArray(new UpdatePrimitive[up.size()]);
  }
  for (  final UpdatePrimitive p : prim) {
    final PrimitiveType t=p.type;
    del|=t == DELETENODE;
    rep|=t == REPLACENODE;
    adjEXT|=del || rep || t == INSERTBEFORE || t == INSERTAFTER;
    adjINT|=t == INSERTINTO || t == INSERTINTOFIRST || t == INSERTINTOLAST;
  }
  if (prim.length > 1)   Arrays.sort(prim);
}
