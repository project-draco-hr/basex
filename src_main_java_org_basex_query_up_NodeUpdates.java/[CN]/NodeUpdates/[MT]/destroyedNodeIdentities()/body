{
  final IntList d=new IntList();
  for (  final UpdatePrimitive p : prim) {
    final PrimitiveType t=p.type;
switch (t) {
case DELETENODE:
case REPLACENODE:
      d.add(p.pre);
    break;
case REPLACEELEMCONT:
  final Data data=p.data;
final int pre=p.pre;
final int kind=data.kind(pre);
final int l=pre + data.size(pre,kind);
int ipre=pre + data.attSize(pre,kind);
while (ipre < l) {
d.add(ipre);
ipre+=data.size(ipre,data.kind(ipre));
}
break;
default :
}
}
return d;
}
