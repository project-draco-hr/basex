{
  try {
    if (seq.size == 0)     return new Nodes(data);
    if (seq.size == 1) {
      final Item it=seq.item[0];
      if (it.type == Type.BLN)       return Bln.get(it.bool());
      if (it.n())       return new Dbl(it.dbl());
      if (it.s())       return new Str(it.str());
    }
    final NodeBuilder nb=new NodeBuilder();
    for (int i=0; i < seq.size; i++) {
      final Item it=seq.item[i];
      if (!it.node())       return this;
      if (it instanceof DBNode) {
        if (((DBNode)it).data != data)         return this;
        nb.add(((DBNode)it).pre);
      }
 else {
        final FNode node=(FNode)it;
        final NodeIter ch=node.child();
        Item c;
        while ((c=ch.next()) != null) {
          if (c instanceof DBNode && ((DBNode)c).data == data)           nb.add(((DBNode)c).pre);
        }
      }
    }
    return nb.size != 0 ? new Nodes(nb.finish(),data) : this;
  }
 catch (  final XQException ex) {
    BaseX.debug(ex);
    return this;
  }
}
