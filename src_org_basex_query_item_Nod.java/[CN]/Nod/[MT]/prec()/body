{
  return new NodeIter(){
    /** 
 * Iterator. 
 */
    private NodIter it;
    /** 
 * First call. 
 */
    private boolean more;
    @Override public Nod next() throws QueryException {
      if (!more) {
        it=new NodIter();
        Nod n=Nod.this;
        Nod p=n.parent();
        while (p != null) {
          if (n.type != Type.ATT) {
            final NodIter tmp=new NodIter();
            final NodeIter i=p.child();
            Nod c;
            while ((c=i.next()) != null && !c.is(n)) {
              tmp.add(c.finish());
              addDesc(c.child(),tmp);
            }
            for (int t=tmp.size - 1; t >= 0; t--)             it.add(tmp.list[t]);
          }
          n=p;
          p=p.parent();
        }
        more=true;
      }
      return it.next();
    }
  }
;
}
