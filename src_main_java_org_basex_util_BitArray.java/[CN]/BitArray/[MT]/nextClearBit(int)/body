{
  if (all)   return length;
  int wordIndex=i >>> WORD_POWER;
  long word=~words[wordIndex] & WORD_MASK << i;
  if (word != 0) {
    return (wordIndex << WORD_POWER) + numberOfTrailingZeros(word);
  }
  while (++wordIndex < words.length) {
    if ((word=~words[wordIndex]) != 0) {
      return (wordIndex << WORD_POWER) + numberOfTrailingZeros(word);
    }
  }
  return wordIndex << WORD_POWER;
}
