{
  final int startWord=s >>> WORD_POWER;
  final int endWord=e - 1 >>> WORD_POWER;
  if (endWord >= words.length)   expandTo(endWord + 1);
  final long startMask=WORD_MASK << s;
  final long endMask=WORD_MASK >>> -e;
  if (startWord == endWord) {
    words[startWord]|=startMask & endMask;
  }
 else {
    words[startWord]|=startMask;
    for (int i=startWord + 1; i < endWord; i++)     words[i]=WORD_MASK;
    words[endWord]|=endMask;
  }
  if (e >= length)   length=e + 1L;
}
