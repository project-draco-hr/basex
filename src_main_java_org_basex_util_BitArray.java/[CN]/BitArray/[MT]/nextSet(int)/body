{
  if (i >= size)   return -1;
  final int inUse=size + WORD_SIZE - 1 >>> WORD_POWER;
  int wi=i >>> WORD_POWER;
  long word=words[wi] & WORD_MASK << i;
  while (true) {
    if (word != 0)     return (wi << WORD_POWER) + numberOfTrailingZeros(word);
    if (++wi == inUse)     return -1;
    word=words[wi];
  }
}
