{
  BaseXLayout.setWidth(this,DWIDTH);
  BaseXLayout.addInteraction(this,win);
  if (txt != null) {
    setText(txt);
    selectAll();
  }
  addFocusListener(new FocusAdapter(){
    @Override public void focusGained(    final FocusEvent e){
      if (area != null) {
        selectAll();
        find(getText().trim());
      }
    }
  }
);
  addKeyListener(new KeyAdapter(){
    @Override public void keyPressed(    final KeyEvent e){
      if (UNDOSTEP.is(e) || REDOSTEP.is(e)) {
        final String t=getText();
        setText(last);
        last=t;
      }
      if (area == null)       return;
      if (ESCAPE.is(e) || ENTER.is(e) && getText().trim().isEmpty()) {
        area.requestFocusInWindow();
        setBackground(GUIConstants.WHITE);
      }
 else       if (FINDPREV.is(e) || FINDPREV2.is(e) || ENTER.is(e) && e.isShiftDown()) {
        area.find(false);
      }
 else       if (FINDNEXT.is(e) || FINDNEXT2.is(e) || ENTER.is(e)) {
        area.find(true);
      }
    }
    @Override public void keyReleased(    final KeyEvent e){
      if (area != null)       updateKeyword(true);
    }
  }
);
  if (dialog != null)   addKeyListener(dialog.keys);
  setDragEnabled(true);
  BaseXLayout.addDrop(this,new DropHandler(){
    @Override public void drop(    final Object object){
      setText(object.toString());
      updateKeyword(true);
      if (dialog != null)       dialog.action(BaseXTextField.this);
    }
  }
);
}
