{
  String xml;
  System.out.println("=== Serialize a single file (without metadata and contents)");
  xml=FSMLSerializer.serialize(FILE,false);
  System.out.println(xml);
  System.out.println("\n=== Serialize a single file (with metadata and text/xml contents)");
  final DeepFile deepFile=new DeepFile(FILE);
  deepFile.extract();
  xml=FSMLSerializer.serialize(deepFile);
  System.out.println(xml);
  System.out.println("\n\n=== Traverse a file system hierarchy (method 1)");
  new CreateFS(DIR[0].getAbsolutePath(),DB[0]).execute(CONTEXT,System.out);
  new XQuery("/").execute(CONTEXT,System.out);
  new Close().execute(CONTEXT,System.out);
  System.out.println("\n\n=== Traverse a file system hierarchy (method 2)");
  final FSImporter importer=new FSImporter(CONTEXT);
  importer.createDB(DB[0]);
  new FSWalker(importer).traverse(DIR[0]);
  new Optimize().execute(CONTEXT,System.out);
  new XQuery("/").execute(CONTEXT,System.out);
  new Close().execute(CONTEXT,System.out);
  System.out.println("\n\n=== List available parsers");
  System.out.println("file suffix\t| \t java class");
  System.out.println("-----------------------------------------------------");
  final ParserRegistry registry=new ParserRegistry();
  for (  final String[] parser : registry.availableParsers()) {
    System.out.println(parser[0] + (parser[0].length() > 7 ? "" : "\t") + "\t  "+ parser[1]);
  }
  System.out.println("\n=== Example queries ====================");
  if (DIR[1] != null) {
    System.out.println("\tcreating mp3 database...");
    new CreateFS(DIR[1].getAbsolutePath(),DB[1]).execute(CONTEXT,System.out);
    new Close().execute(CONTEXT,System.out);
  }
  if (DIR[2] != null) {
    System.out.println("\tcreating jpg database...");
    new CreateFS(DIR[2].getAbsolutePath(),DB[2]).execute(CONTEXT,System.out);
    new Close().execute(CONTEXT,System.out);
  }
  for (int i=0; i < QUERIES.length; i++) {
    if (DIR[INDEX[i]] == null)     continue;
    System.out.println("\n\n=== " + QUERIES[i][0]);
    new Open(DB[INDEX[i]]).execute(CONTEXT,System.out);
    new XQuery(QUERIES[i][1]).execute(CONTEXT,System.out);
    new Close().execute(CONTEXT,System.out);
  }
}
