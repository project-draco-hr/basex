{
switch (func) {
case DATA:
    return data(ctx.iter(expr[0]));
case COLLECT:
  Iter iter=expr.length != 0 ? ctx.iter(expr[0]) : null;
Item it=iter != null ? iter.next() : null;
if (iter != null && it == null) Err.empty(this);
return ctx.coll(iter == null ? null : checkStr(it));
case PUT:
if (!ctx.context.user.perm(User.ADMIN)) throw new QueryException(Main.info(PERMNO,CmdPerm.ADMIN));
final byte[] file=checkStr(expr[1],ctx);
it=expr[0].atomic(ctx);
if (it == null || it.type != Type.DOC && it.type != Type.ELM) Err.or(UPFOTYPE,expr[0]);
try {
final PrintOutput out=new PrintOutput(Token.string(file));
final XMLSerializer xml=new XMLSerializer(out);
it.serialize(xml);
xml.close();
out.close();
}
 catch (final IOException ex) {
Main.debug(ex);
Err.or(UPFOURI,file);
return null;
}
return Iter.EMPTY;
default :
return super.iter(ctx);
}
}
