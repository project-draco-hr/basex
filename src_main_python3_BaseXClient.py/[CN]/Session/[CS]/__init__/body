def __init__(self, host, port, user, password, receive_bytes_encoding='utf-8', send_bytes_encoding='utf-8'):
    'Create and return session with host, port, user name and password'
    self.__info = None
    self.__swrapper = SocketWrapper(socket.socket(socket.AF_INET, socket.SOCK_STREAM), receive_bytes_encoding=receive_bytes_encoding, send_bytes_encoding=send_bytes_encoding)
    self.__swrapper.connect((host, port))
    self.__event_socket_wrapper = None
    self.__event_host = host
    self.__event_listening_thread = None
    self.__event_callbacks = {}
    timestamp = self.recv_c_str()
    hfun = hashlib.md5()
    hfun.update(hashlib.md5(password.encode('us-ascii')).hexdigest().encode('us-ascii'))
    hfun.update(timestamp.encode('us-ascii'))
    self.send(((user + chr(0)) + hfun.hexdigest()))
    if (not self.server_response_success()):
        raise IOError('Access Denied.')
