{
  final int l=token.length;
  if (l == 0)   return EMPTY;
  final byte[] t=new byte[l];
  int i=0, p=0;
  if (chop)   while (i < l && ws(token[i]))   ++i;
  if (i == l)   return EMPTY;
  out:   while (i < l) {
    final int cl=cl2(token[i]);
    if (cl <= 0) {
      ++i;
      continue;
    }
    if (cl > l - i)     break;
    final byte b=token[i];
    if (b >= 0 && b < ' ' && !ws(b)) {
      ++i;
      continue;
    }
    t[p++]=token[i++];
    for (int j=1; j < cl; ++j) {
      if (cl2(token[i]) != 0) {
        --p;
        i+=cl - j;
        continue out;
      }
    }
    for (int j=1; j < cl; ++j)     t[p++]=token[i++];
  }
  if (chop)   while (p > 0 && ws(t[p - 1]))   --p;
  return p == 0 ? EMPTY : Arrays.copyOf(t,p);
}
