{
  ts=ts.compile(ctx,scp);
  if (ts.isValue()) {
    final Value val=ts.value(ctx);
    for (    final TypeCase tc : cases) {
      if (tc.matches(val))       return optPre(tc.compile(ctx,scp,(Value)ts).expr,ctx);
    }
  }
  for (  final TypeCase tc : cases)   tc.compile(ctx,scp);
  boolean eq=true;
  for (int i=1; i < cases.length; ++i) {
    final TypeCase tc=cases[i - 1];
    eq&=tc.expr.sameAs(cases[i].expr) && tc.var == null;
  }
  if (eq)   return optPre(cases[0].expr.item(ctx,info),ctx);
  type=cases[0].type();
  for (int c=1; c < cases.length; ++c) {
    type=type.union(cases[c].type());
  }
  return this;
}
