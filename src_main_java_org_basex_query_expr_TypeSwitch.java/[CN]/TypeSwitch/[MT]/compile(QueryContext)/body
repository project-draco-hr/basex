{
  ts=ts.compile(ctx);
  if (ts.isValue()) {
    for (    final TypeCase tc : cases) {
      if (tc.var.type == null || tc.var.type.instance(ts.value(ctx)))       return optPre(tc.compile(ctx,(Value)ts).expr,ctx);
    }
  }
  for (  final TypeCase tc : cases)   tc.compile(ctx);
  boolean eq=true;
  for (int i=1; i < cases.length; ++i) {
    eq&=cases[i - 1].expr.sameAs(cases[i].expr);
  }
  if (eq)   return optPre(null,ctx);
  type=cases[0].type();
  for (int c=1; c < cases.length; ++c) {
    type=type.intersect(cases[c].type());
  }
  return this;
}
