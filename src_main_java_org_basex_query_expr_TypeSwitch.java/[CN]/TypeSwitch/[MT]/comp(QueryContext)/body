{
  ts=checkUp(ts,ctx).comp(ctx);
  for (  final TypeCase c : cs)   c.comp(ctx);
  boolean em=true;
  for (  final TypeCase c : cs)   em&=c.empty();
  if (em) {
    ctx.compInfo(OPTTRUE);
    return Seq.EMPTY;
  }
  final Expr[] tmp=new Expr[cs.length];
  for (int i=0; i < cs.length; i++)   tmp[i]=cs[i].expr;
  checkUp(ctx,tmp);
  if (ts.item()) {
    for (int c=0; c < cs.length; c++) {
      if (cs[c].var.type != null) {
        if (cs[c].var.type.instance(ts.iter(ctx))) {
          ctx.compInfo(OPTPRE,TYPESWITCH + '(' + ts+ ')');
          return cs[c].comp(ctx,(Item)ts).expr;
        }
        cs=Array.delete(cs,c);
      }
    }
  }
  return this;
}
