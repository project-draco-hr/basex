{
  if (not != n.not || pre() != n.pre())   return false;
  final IntList ps=new IntList();
  final IntList pi=new IntList();
  boolean mp=morePos();
  boolean np=n.morePos();
  while (mp || np) {
    final int d=mp && np ? nextPos() - n.nextPos() + w : mp ? -1 : 1;
    if (d < 0) {
      if (w == 0)       add(ps,pi);
      mp=morePos();
    }
 else     if (d > 0) {
      if (w == 0)       n.add(ps,pi);
      np=n.morePos();
    }
 else {
      add(ps,pi);
      if (w > 0)       n.add(ps,pi);
      mp=morePos();
      np=n.morePos();
    }
  }
  pos=ps;
  poi=pi;
  reset();
  n.reset();
  return pos.size > 0;
}
