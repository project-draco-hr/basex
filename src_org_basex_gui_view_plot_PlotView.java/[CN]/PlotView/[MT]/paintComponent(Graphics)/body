{
  final Data data=GUI.context.data();
  if (data == null)   return;
  super.paintComponent(g);
  BaseXLayout.antiAlias(g);
  if (plotData == null) {
    refreshInit();
    return;
  }
  final int w=getWidth();
  final int h=getHeight();
  if (w + h != viewDimension) {
    viewDimension=w + h;
    plotChanged=true;
  }
  plotWidth=w - (MARGIN[1] + MARGIN[3]);
  plotHeight=h - (MARGIN[0] + MARGIN[2]);
  final int novalue=noValueSize();
  if (plotWidth - novalue < 0 || plotHeight - novalue < 0) {
    g.setFont(GUIConstants.font);
    g.setColor(Color.black);
    BaseXLayout.drawCenter(g,NOSPACE,getWidth(),(h + MARGIN[0]) / 2);
    return;
  }
  if (plotImg == null || plotChanged)   plotImg=createPlotImage();
  g.drawImage(plotImg,0,0,this);
  final Nodes marked=GUI.context.marked();
  if (marked.size() > 0) {
    for (int i=0; i < marked.size(); i++) {
      final int prePos=plotData.findPre(marked.nodes[i]);
      if (prePos > -1)       drawItem(g,plotData.xAxis.co[prePos],plotData.yAxis.co[prePos],false,true);
    }
  }
  final int f=plotData.findPre(focused);
  if (f > -1) {
    if (!dragging) {
      final double x1=plotData.xAxis.co[f];
      final double y1=plotData.yAxis.co[f];
      drawItem(g,x1,y1,true,false);
      g.setFont(GUIConstants.font);
      final String x=formatString(true);
      final String y=formatString(false);
      final String label=(x.length() > 16 ? x.substring(0,16) : x) + " / " + (y.length() > 15 ? y.substring(0,15) : y);
      final int tw=BaseXLayout.width(g,label);
      final int th=g.getFontMetrics().getHeight();
      final int xx=Math.min(getWidth() - tw - 8,calcCoordinate(true,x1));
      g.setColor(GUIConstants.COLORS[10]);
      g.fillRect(xx - 1,calcCoordinate(false,y1) - th,tw + 4,th);
      g.setColor(GUIConstants.color1);
      g.drawString(label,xx,calcCoordinate(false,y1) - 4);
    }
  }
  if (dragging) {
    g.setColor(GUIConstants.back);
    final int selW=selectionBox.getWidth();
    final int selH=selectionBox.getHeight();
    final int x1=selectionBox.x1;
    final int y1=selectionBox.y1;
    g.fillRect(selW > 0 ? x1 : x1 + selW,selH > 0 ? y1 : y1 + selH,Math.abs(selW),Math.abs(selH));
    g.setColor(GUIConstants.frame);
    g.drawRect(selW > 0 ? x1 : x1 + selW,selH > 0 ? y1 : y1 + selH,Math.abs(selW),Math.abs(selH));
  }
  plotChanged=false;
}
