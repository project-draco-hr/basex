{
  final byte[] tag=utf8(name,meta.encoding);
  if (level != 0) {
    if (level == 1 && inDoc)     error(MOREROOTS,parser.det(),tag);
    tags.noleaf(tagStack[level - 1],true);
  }
  final int tid=tags.index(tag,null);
  final int tns=ns.get(tag);
  skel.add(tid,level,kind);
  final int al=att != null ? att.length : 0;
  final int[] at=al != 0 ? new int[al] : null;
  for (int a=0; a < al; a+=2) {
    at[a]=atts.index(att[a],att[a + 1]);
    at[a + 1]=ns.get(att[a]);
    skel.add(at[a],level + 1,Data.ATTR);
  }
  for (int a=0; a < al - 1; a+=2) {
    for (int b=a + 2; b < al; b+=2) {
      if (at[a] == at[b])       error(DUPLATT,parser.det(),att[a]);
    }
  }
  tagStack[level]=tid;
  parStack[level]=size;
  final int par=level != 0 ? size - parStack[level - 1] : 1;
  addNode(tid,tns,par,att,at,kind);
  if (open && meta.height < ++level)   meta.height=level;
  if (size != 1)   inDoc=true;
}
