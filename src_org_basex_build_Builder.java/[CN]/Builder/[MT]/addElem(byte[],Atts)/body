{
  int n=tags.index(tag,null,true);
  if (meta.pathindex)   path.add(n,level,Data.ELEM);
  final int pre=meta.size;
  tagStack[level]=n;
  parStack[level]=pre;
  final int dis=level != 0 ? pre - parStack[level - 1] : 1;
  final int as=att.size;
  final boolean ne=ns.open(pre);
  int u=ns.uri(tag,true);
  addElem(dis,n,as + 1,u,ne);
  for (int a=0; a < as; a++) {
    n=atts.index(att.key[a],att.val[a],true);
    u=ns.uri(att.key[a],false);
    if (meta.pathindex)     path.add(n,level + 1,Data.ATTR);
    addAttr(n,att.val[a],a + 1,u);
  }
  if (level != 0) {
    if (level > 1) {
      tags.stat(tagStack[level - 1]).leaf=false;
    }
 else     if (inDoc) {
      error(MOREROOTS,parser.det(),tag);
    }
  }
  if (meta.size != 1)   inDoc=true;
  if (Prop.debug) {
    if (++c % 500000 == 0)     Main.err(" " + c + Prop.NL);
 else     if (c % 50000 == 0)     Main.err("!");
 else     if (c % 10000 == 0)     Main.err(".");
  }
  limit(tags.size(),0x8000,LIMITTAGS);
  limit(atts.size(),0x8000,LIMITATTS);
  limit(ns.size(),0x100,LIMITNS);
  limit(as,0x20,LIMITATT);
  if (meta.size < 0)   limit(0,0,LIMITRANGE);
  return pre;
}
