{
  final Item it=expr[1].atomic(ctx);
  if (it == null)   Err.empty(this);
  if (expr.length == 3)   checkColl(expr[2],ctx);
  return new Iter(){
    final Iter ir=expr[0].iter(ctx);
    int c;
    @Override public Item next() throws QueryException {
      while (true) {
        final Item i=ir.next();
        if (i == null)         return null;
        c++;
        if (CmpV.valCheck(i,it) && CmpV.Comp.EQ.e(i,it))         return Itr.get(c);
      }
    }
  }
;
}
