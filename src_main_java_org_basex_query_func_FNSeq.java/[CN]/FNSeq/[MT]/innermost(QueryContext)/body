{
  final Iter iter=expr[0].iter(ctx);
  final NodeCache nc=new NodeCache().random();
  for (Item it; (it=iter.next()) != null; )   nc.add(checkNode(it));
  final int len=(int)nc.size();
  if (len == 0)   return Empty.ITER;
  if (nc.dbnodes()) {
    final DBNode lst=(DBNode)nc.get(len - 1);
    final Data data=lst.data;
    final ANode[] nodes=nc.item.clone();
    nc.item[0]=lst;
    nc.size(1);
    int before=lst.pre;
    for (int i=len - 1; i-- > 0; ) {
      final DBNode nd=(DBNode)nodes[i];
      if (nd.pre + data.size(nd.pre,kind(nd.type)) < before) {
        nc.add(nd);
        before=nd.pre;
      }
    }
  }
 else {
    throw Util.notimplemented("doesn't work yet for constructed nodes");
  }
  return nc;
}
