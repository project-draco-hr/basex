{
  final Item it=expr[0].atomic(ctx,input);
  if (it == null)   return null;
  final boolean d=expr.length == 2;
  final Item zon=d ? expr[1].atomic(ctx,input) : null;
switch (def) {
case YEADUR:
    return yea(checkDur(it));
case YEADTM:
  return yea(checkDate(it,Type.DTM,ctx));
case YEADAT:
return yea(checkDate(it,Type.DAT,ctx));
case MONDUR:
return mon(checkDur(it));
case MONDTM:
return mon(checkDate(it,Type.DTM,ctx));
case MONDAT:
return mon(checkDate(it,Type.DAT,ctx));
case DAYDUR:
return day(checkDur(it));
case DAYDTM:
return day(checkDate(it,Type.DTM,ctx));
case DAYDAT:
return day(checkDate(it,Type.DAT,ctx));
case HOUDUR:
return hou(checkDur(it));
case HOUDTM:
return hou(checkDate(it,Type.DTM,ctx));
case HOUTIM:
return hou(checkDate(it,Type.TIM,ctx));
case MINDUR:
return min(checkDur(it));
case MINDTM:
return min(checkDate(it,Type.DTM,ctx));
case MINTIM:
return min(checkDate(it,Type.TIM,ctx));
case SECDUR:
return sec(checkDur(it));
case SECDTM:
return sec(checkDate(it,Type.DTM,ctx));
case SECTIM:
return sec(checkDate(it,Type.TIM,ctx));
case ZONDTM:
return zon(checkDate(it,Type.DTM,ctx));
case ZONDAT:
return zon(checkDate(it,Type.DAT,ctx));
case ZONTIM:
return zon(checkDate(it,Type.TIM,ctx));
case DATZON:
return datzon(it,zon,d);
case DTMZON:
return dtmzon(it,zon,d);
case TIMZON:
return timzon(it,zon,d);
case DATETIME:
return dattim(it,zon);
default :
return super.atomic(ctx,ii);
}
}
