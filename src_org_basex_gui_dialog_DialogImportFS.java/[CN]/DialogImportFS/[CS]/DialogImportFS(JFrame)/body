{
  super(parent,IMPORTFSTITLE);
  final BaseXBack pp=new BaseXBack();
  pp.setLayout(new TableLayout(10,1,0,0));
  pp.add(new BaseXLabel(IMPORTFSTEXT,true));
  BaseXBack p=new BaseXBack();
  p.setLayout(new TableLayout(2,3,6,0));
  p.add(new BaseXLabel(IMPORTDIR + "   "));
  path=new BaseXTextField(GUIProp.fspath,HELPFSPATH,this);
  path.addKeyListener(new KeyAdapter(){
    @Override public void keyReleased(    final KeyEvent e){
      check();
    }
  }
);
  p.add(path);
  button=new BaseXButton(BUTTONBROWSE,HELPBROWSE,this);
  button.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      final BaseXFileChooser fc=new BaseXFileChooser(DIALOGFC,path.getText(),parent);
      if (fc.select(BaseXFileChooser.DIR))       path.setText(fc.getDir());
    }
  }
);
  p.add(button);
  p.add(new BaseXLabel(IMPORTSAVE + "   "));
  database=new BaseXTextField(GUIProp.importfsname,HELPFSNAME,this);
  database.addKeyListener(new KeyAdapter(){
    @Override public void keyReleased(    final KeyEvent e){
      check();
    }
  }
);
  p.add(database);
  all=new BaseXCheckBox(IMPORTALL,HELPFSALL,GUIProp.fsall,this);
  all.setToolTipText(IMPORTALLINFO);
  all.setBorder(new EmptyBorder(4,4,0,0));
  all.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      check();
    }
  }
);
  p.add(all);
  pp.add(p);
  BaseXLabel label=new BaseXLabel(IMPORTFSTEXT1,true);
  label.setBorder(15,0,8,0);
  pp.add(label);
  meta=new BaseXCheckBox(IMPORTMETA,HELPMETA,Prop.fsmeta,this);
  pp.add(meta);
  label=new BaseXLabel(IMPORTFSTEXT2,true);
  label.setBorder(10,0,8,0);
  pp.add(label);
  p=new BaseXBack();
  p.setLayout(new BorderLayout());
  cont=new BaseXCheckBox(IMPORTCONT,HELPCONT,Prop.fscont,this);
  cont.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      check();
    }
  }
);
  p.add(cont,BorderLayout.WEST);
  maxsize=new BaseXCombo(IMPORTFSMAX,HELPFSMAX,false,this);
  maxsize.setToolTipText(IMPORTFSMAXINFO);
  final int m=Prop.fstextmax;
  int i=-1;
  while (++i < IMPORTFSMAXSIZE.length - 1) {
    if (IMPORTFSMAXSIZE[i] == m)     break;
  }
  maxsize.setSelectedIndex(i);
  p.add(maxsize,BorderLayout.EAST);
  BaseXLayout.setWidth(p,pp.getPreferredSize().width);
  pp.add(p);
  set(pp,BorderLayout.CENTER);
  buttons=BaseXLayout.okCancel(this);
  set(buttons,BorderLayout.SOUTH);
  check();
  finish(parent);
}
