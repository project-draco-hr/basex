{
  final Prop prop=qc.context.prop;
  final int ns=N_OPT.length;
  final int[] onums=new int[ns];
  for (int o=0; o < ns; o++)   onums[o]=prop.num(N_OPT[o]);
  final int bs=B_OPT.length;
  final boolean[] obools=new boolean[bs];
  for (int o=0; o < bs; o++)   obools[o]=prop.is(B_OPT[o]);
  final int ss=S_OPT.length;
  final String[] ostrs=new String[ss];
  for (int o=0; o < ss; o++)   ostrs[o]=prop.get(S_OPT[o]);
  assignOptions();
  final MetaData meta=data.meta;
  final boolean rebuild=prop.num(Prop.MAXCATS) != meta.maxcats || prop.num(Prop.MAXLEN) != meta.maxlen;
  meta.maxcats=prop.num(Prop.MAXCATS);
  meta.maxlen=prop.num(Prop.MAXLEN);
  meta.createtext=prop.is(Prop.TEXTINDEX);
  meta.createattr=prop.is(Prop.ATTRINDEX);
  meta.createftxt=prop.is(Prop.FTINDEX);
  try {
    if (all)     OptimizeAll.optimizeAll(data,qc.context,null);
 else     Optimize.optimize(data,rebuild,null);
  }
 catch (  final IOException ex) {
    UPDBOPTERR.thrw(info,ex);
  }
 finally {
    resetOptions();
  }
  if (all)   qc.resource.removeData(data.meta.name);
}
