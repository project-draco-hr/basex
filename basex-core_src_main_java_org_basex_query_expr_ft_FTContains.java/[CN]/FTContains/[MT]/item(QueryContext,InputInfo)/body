{
  final boolean scoring=qc.scoring;
  final Iter iter=expr.iter(qc);
  final FTLexer tmp=qc.ftLexer, lexer=new FTLexer(new FTOpt());
  qc.ftLexer=lexer;
  try {
    double s=0;
    int c=0;
    boolean f=false;
    final FTPosData ftPosData=qc.ftPosData;
    for (Item it; (it=iter.next()) != null; ) {
      lexer.init(it.string(info));
      final FTNode item=ftexpr.item(qc,info);
      final FTMatches all=item.matches();
      if (all.matches()) {
        f=true;
        if (scoring)         s+=item.score();
        if (ftPosData != null && it instanceof DBNode) {
          final DBNode node=(DBNode)it;
          ftPosData.add(node.data(),node.pre(),all);
        }
      }
      c++;
    }
    return scoring ? Bln.get(f,Scoring.avg(s,c)) : Bln.get(f);
  }
  finally {
    qc.ftLexer=tmp;
  }
}
