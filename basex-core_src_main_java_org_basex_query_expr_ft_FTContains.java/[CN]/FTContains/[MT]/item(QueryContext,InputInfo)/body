{
  final boolean scoring=qc.scoring;
  final Iter iter=expr.iter(qc);
  final FTLexer tmp=qc.ftToken;
  qc.ftToken=lex;
  double s=0;
  int c=0;
  boolean f=false;
  final FTPosData ftPosData=qc.ftPosData;
  for (Item it; (it=iter.next()) != null; ) {
    lex.init(it.string(info));
    final FTNode item=ftexpr.item(qc,info);
    final FTMatches all=item.matches();
    if (all.matches()) {
      f=true;
      if (scoring)       s+=item.score();
      if (ftPosData != null && it instanceof DBNode) {
        final DBNode node=(DBNode)it;
        ftPosData.add(node.data(),node.pre(),all);
      }
    }
    c++;
  }
  qc.ftToken=tmp;
  return scoring ? Bln.get(f,Scoring.avg(s,c)) : Bln.get(f);
}
