{
  final int q=Token.indexOf(uri,'?');
  final byte[] base=q == -1 ? uri : substring(uri,0,q);
  final String args=q == -1 ? "" : string(replace(substring(uri,q + 1),'&',';'));
  final CollationOptions opts;
  final boolean uca=eq(UCA,base);
  if (uca) {
    opts=new UCAOptions();
  }
 else   if (eq(URL,base)) {
    opts=new BaseXCollationOptions();
  }
 else {
    throw err.get(info,uri);
  }
  String fail=null;
  for (  final String param : args.split(";")) {
    final String[] kv=param.split("=");
    if (kv.length != 2)     return null;
    final String key=kv[0], val=kv[1];
    try {
      opts.assign(key,val);
    }
 catch (    final BaseXException ex) {
      fail=key;
    }
  }
  if (fail != null && (!uca || fail.equals(UCAOptions.FALLBACK.name()) || opts.get(UCAOptions.FALLBACK) == YesNo.NO))   throw err.get(info,uri);
  ;
  final Locale locale=Locales.map.get(opts.get(BaseXCollationOptions.LANG));
  if (locale == null)   throw err.get(info,uri);
  final Collator coll=Collator.getInstance(locale);
  if (!opts.assign(coll))   throw err.get(info,uri);
  return coll;
}
