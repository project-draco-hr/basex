{
  if (instanceOf(t))   return this;
  if (t instanceof MapType) {
    final MapType mt=(MapType)t;
    if (mt.instanceOf(this))     return mt;
    final SeqType rt=retType.intersect(mt.retType);
    return rt == null ? null : get((AtomType)keyType.union(mt.keyType),rt);
  }
  if (t instanceof FuncType) {
    final FuncType ft=(FuncType)t;
    if (ft.argTypes.length == 1 && ft.argTypes[0].instanceOf(SeqType.AAT)) {
      final SeqType rt=retType.intersect(ft.retType);
      return rt == null ? null : get((AtomType)keyType.union(ft.argTypes[0].type),rt);
    }
  }
  return null;
}
