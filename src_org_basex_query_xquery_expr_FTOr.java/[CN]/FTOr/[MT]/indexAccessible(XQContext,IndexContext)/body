{
  final IntList p=new IntList();
  final IntList n=new IntList();
  int min=ic.is;
  int sum=0;
  for (int i=0; i < expr.length; i++) {
    ic.ftnot=false;
    expr[i].indexAccessible(ctx,ic);
    if (!ic.io)     return;
    if (!ic.ftnot && ic.is > 0) {
      p.add(i);
      sum+=ic.is;
    }
 else     if (ic.ftnot) {
      if (ic.is > 0)       n.add(i);
 else {
        ic.iu=false;
        ic.seq=true;
        ic.is=Integer.MAX_VALUE;
        return;
      }
    }
  }
  nex=n.finish();
  pex=p.finish();
  if (pex.length == 0 && nex.length > 0) {
    ic.seq=true;
    ic.is=Integer.MAX_VALUE;
  }
 else   if (nex.length > 0 && pex.length > 0) {
    ic.seq=true;
    ic.is=Integer.MAX_VALUE;
  }
 else {
    ic.is=sum > min ? min : sum;
  }
}
