{
  final IntList p=new IntList();
  final IntList n=new IntList();
  int min=ia.indexSize;
  int sum=0;
  for (int i=0; i < expr.length; i++) {
    ia.ftnot=false;
    expr[i].indexAccessible(ctx,ia);
    if (!ia.io)     return;
    if (!ia.ftnot && ia.indexSize > 0) {
      p.add(i);
      sum+=ia.indexSize;
    }
 else     if (ia.ftnot) {
      if (ia.indexSize > 0)       n.add(i);
 else {
        ia.iu=false;
        ia.seq=true;
        ia.indexSize=Integer.MAX_VALUE;
        return;
      }
    }
  }
  nex=n.finish();
  pex=p.finish();
  if (pex.length == 0 && nex.length > 0) {
    ia.seq=true;
    ia.indexSize=Integer.MAX_VALUE;
  }
 else   if (nex.length > 0 && pex.length > 0) {
    ia.seq=true;
    ia.indexSize=Integer.MAX_VALUE;
  }
 else {
    ia.indexSize=sum > min ? min : sum;
  }
}
