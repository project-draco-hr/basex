{
  final Class<?> readerC=Reflect.find(JLINE_CONSOLE_READER);
  readLine=Reflect.method(readerC,"readLine",String.class);
  readEcho=Reflect.method(readerC,"readLine",String.class,Character.class);
  reader=readerC.newInstance();
  final Class<?> history=Reflect.find(JLINE_HISTORY);
  fileHistoryC=Reflect.find(JLINE_FILE_HISTORY);
  fileHistory=Reflect.get(Reflect.find(fileHistoryC,File.class),new File(Prop.HOME,HISTORY_FILE));
  final Class<?> completer=Reflect.find(JLINE_COMPLETER);
  final Class<?> stringCompleter=Reflect.find(JLINE_STRING_COMPLETER);
  Reflect.invoke(Reflect.method(readerC,"setBellEnabled",boolean.class),reader,false);
  Reflect.invoke(Reflect.method(readerC,"setHistory",history),reader,fileHistory);
  Reflect.invoke(Reflect.method(readerC,"setHistoryEnabled",boolean.class),reader,true);
  final StringList sl=new StringList();
  for (  final Commands.Cmd cmd : Commands.Cmd.values()) {
    sl.add(cmd.name().toLowerCase(Locale.ENGLISH));
  }
  Reflect.invoke(Reflect.method(readerC,"addCompleter",completer),reader,Reflect.get(Reflect.find(stringCompleter,String[].class),(Object)sl.finish()));
}
