{
  try {
    perf=new Performance();
    context=ctx;
    prop=ctx.prop;
    out=os instanceof PrintOutput ? (PrintOutput)os : new PrintOutput(os);
    return run();
  }
 catch (  final ProgressException ex) {
    abort();
    return error(PROGERR);
  }
catch (  final Throwable ex) {
    Performance.gc(2);
    abort();
    if (ex instanceof OutOfMemoryError) {
      ex.printStackTrace();
      return error(PROCMEM + ((flags & User.CREATE) != 0 ? PROCMEMCREATE : ""));
    }
    Main.debug(ex);
    final Object[] st=ex.getStackTrace();
    final Object[] obj=new Object[st.length + 1];
    obj[0]=ex.toString();
    System.arraycopy(st,0,obj,1,st.length);
    return error(Main.bug(obj));
  }
}
