{
  perf=new Performance();
  context=ctx;
  prop=ctx.prop;
  out=PrintOutput.get(os);
  try {
    return run();
  }
 catch (  final ProgressException ex) {
    abort();
    return error(PROGERR);
  }
catch (  final Throwable ex) {
    Performance.gc(2);
    abort();
    if (ex instanceof OutOfMemoryError) {
      Util.stack(ex);
      return error(PROCMEM + ((flags & User.CREATE) != 0 ? PROCMEMCREATE : ""));
    }
    Util.debug(ex);
    final Object[] st=ex.getStackTrace();
    final Object[] obj=new Object[st.length + 1];
    obj[0]=ex.toString();
    System.arraycopy(st,0,obj,1,st.length);
    return error(Util.bug(obj));
  }
 finally {
    try {
      if (out != null)       out.flush();
    }
 catch (    final IOException ex) {
    }
  }
}
