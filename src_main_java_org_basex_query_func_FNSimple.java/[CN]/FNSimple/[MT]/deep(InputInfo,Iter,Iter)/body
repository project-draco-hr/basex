{
  Item it1=null;
  Item it2=null;
  while ((it1=iter1.next()) != null & (it2=iter2.next()) != null) {
    if (!it1.node() && !it2.node()) {
      if (!it1.equiv(ii,it2))       return false;
      continue;
    }
    if (it1.type != it2.type)     return false;
    Nod s1=(Nod)it1, s2=(Nod)it2;
    final Stack<NodeIter[]> chld=new Stack<NodeIter[]>();
    NodeIter[] ch={s1.child(),s2.child()};
    chld.push(ch);
    boolean desc=false;
    do {
      final Type t1=s1 != null ? s1.type : null;
      final Type t2=s2 != null ? s2.type : null;
      if (desc) {
        if (t1 == Type.PI || t1 == Type.COM) {
          s1=ch[0].next();
          continue;
        }
        if (t2 == Type.PI || t2 == Type.COM) {
          s2=ch[1].next();
          continue;
        }
      }
      if (s1 == null || s2 == null) {
        if (s1 != s2)         return false;
        ch=chld.pop();
      }
 else {
        final QNm n1=s1.qname(), n2=s2.qname();
        if (n1 != null && n2 != null && !n1.eq(n2))         return false;
        if ((t1 == Type.TXT || t1 == Type.ATT || t1 == Type.COM || t1 == Type.PI) && !Token.eq(s1.atom(),s2.atom()))         return false;
        if (t1 == Type.ELM) {
          if (s1.attr().finish().size() != s2.attr().finish().size())           return false;
          Nod a1=null, a2=null;
          final NodeIter att1=s1.attr();
          while ((a1=att1.next()) != null) {
            final NodeIter att2=s2.attr();
            boolean f=false;
            while ((a2=att2.next()) != null) {
              if (a1.qname().eq(a2.qname())) {
                f=Token.eq(a1.atom(),a2.atom());
                break;
              }
            }
            if (!f)             return false;
          }
          chld.push(ch);
          ch=new NodeIter[]{s1.child(),s2.child()};
        }
      }
      s1=ch[0].next();
      s2=ch[1].next();
      desc=true;
    }
 while (!chld.isEmpty());
  }
  return it1 == it2;
}
