{
  Item it1=null;
  Item it2=null;
  while ((it1=iter1.next()) != null & (it2=iter2.next()) != null) {
    if (!it1.equiv(ii,it2))     return false;
    if (!it1.node() && !it2.node())     continue;
    if (!(it1.node() && it2.node()))     return false;
    final NodeIter niter1=((Nod)it1).descOrSelf();
    final NodeIter niter2=((Nod)it2).descOrSelf();
    Nod n1=null, n2=null;
    while (true) {
      n1=niter1.next();
      n2=niter2.next();
      if (n1 == null && n2 == null || n1 == null ^ n2 == null)       break;
      if (n1.type != n2.type)       return false;
      final QNm qn1=n1.qname();
      if (qn1 != null && !qn1.eq(n2.qname()))       return false;
      if (n1.type == Type.ATT || n1.type == Type.PI || n1.type == Type.COM || n1.type == Type.TXT) {
        if (!Token.eq(n1.atom(),n2.atom()))         return false;
        continue;
      }
      NodeIter att1=n1.attr();
      int s1=0;
      while (att1.next() != null)       s1++;
      NodeIter att2=n2.attr();
      int s2=0;
      while (att2.next() != null)       s2++;
      if (s1 != s2)       return false;
      Nod a1=null, a2=null;
      att1=n1.attr();
      while ((a1=att1.next()) != null) {
        att2=n2.attr();
        boolean found=false;
        while ((a2=att2.next()) != null) {
          if (a1.qname().eq(a2.qname())) {
            found=Token.eq(a1.atom(),a2.atom());
            break;
          }
        }
        if (!found)         return false;
      }
    }
    if (n1 != n2)     return false;
  }
  return it1 == it2;
}
