{
  final Expr e=expr.length == 1 ? expr[0] : null;
switch (func) {
case FALSE:
    return Bln.FALSE;
case TRUE:
  return Bln.TRUE;
case EMPTY:
return Bln.get(!e.i() && e.iter(ctx).next() == null);
case EXISTS:
return Bln.get(e.i() || e.iter(ctx).next() != null);
case BOOL:
return Bln.get(e.ebv(ctx).bool());
case NOT:
return Bln.get(!e.ebv(ctx).bool());
case ZEROONE:
Iter iter=e.iter(ctx);
Item it=iter.next();
if (it == null) return null;
if (iter.next() != null) Err.or(ZEROONE);
return it;
case EXONE:
iter=e.iter(ctx);
it=iter.next();
if (it == null || iter.next() != null) Err.or(EXONE);
return it;
default :
return super.atomic(ctx);
}
}
