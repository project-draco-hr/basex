{
  final byte[] str=expr.length < 3 ? null : checkStr(expr[2],ctx);
  final Iter iter1=ctx.iter(expr[0]), iter2=ctx.iter(expr[1]);
  final Compare comp=new Compare(info);
  Item it1, it2;
  int c=1;
  while (true) {
    it1=iter1.next();
    it2=iter2.next();
    final boolean empty1=it1 == null, empty2=it2 == null;
    if (empty1 && empty2)     return null;
    if (empty1 || empty2 || !comp.deep(it1.iter(),it2.iter()))     break;
    c++;
  }
  if (str != null)   throw UNIT_MESSAGE.get(info,str);
  throw new UnitException(info,UNIT_ASSERT_EQUALS,it1,it2,c);
}
