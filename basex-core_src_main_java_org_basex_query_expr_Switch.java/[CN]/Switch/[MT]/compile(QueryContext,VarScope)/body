{
  cond=cond.compile(ctx,scp);
  for (  final SwitchCase sc : cases)   sc.compile(ctx,scp);
  Expr ex=this;
  if (cond.isValue()) {
    final Item it=cond.item(ctx,info);
    LOOP:     for (    final SwitchCase sc : cases) {
      final int sl=sc.exprs.length;
      for (int e=1; e < sl; e++) {
        if (!sc.exprs[e].isValue())         break LOOP;
        final Item cs=sc.exprs[e].item(ctx,info);
        if (it == cs || cs != null && it != null && it.equiv(cs,null,info)) {
          ex=sc.exprs[0];
          break LOOP;
        }
      }
      if (sl == 1)       ex=sc.exprs[0];
    }
  }
  if (ex != this)   return optPre(ex,ctx);
  type=cases[0].exprs[0].type();
  for (int c=1; c < cases.length; c++) {
    type=type.union(cases[c].exprs[0].type());
  }
  return ex;
}
