{
  int n=tags.index(name,null,true);
  if (meta.pathindex)   path.index(n,Data.ELEM,lvl);
  final int pre=meta.size;
  tstack.set(lvl,n);
  pstack.set(lvl,pre);
  final int dis=lvl != 0 ? pre - pstack.get(lvl - 1) : 1;
  final int as=att.size;
  final boolean ne=ns.open();
  int u=ns.uri(name,true);
  addElem(dis,n,Math.min(IO.MAXATTS,as + 1),u,ne);
  for (int a=0; a < as; ++a) {
    n=atts.index(att.key[a],att.val[a],true);
    u=ns.uri(att.key[a],false);
    if (meta.pathindex)     path.index(n,Data.ATTR,lvl + 1);
    addAttr(n,att.val[a],Math.min(IO.MAXATTS,a + 1),u);
  }
  if (lvl != 0) {
    if (lvl > 1) {
      tags.stat(tstack.get(lvl - 1)).leaf=false;
    }
 else     if (inDoc) {
      error(MOREROOTS,parser.detail(),name);
    }
  }
  if (meta.size != 1)   inDoc=true;
  if (Util.debug && (c++ & 0x7FFFF) == 0)   Util.err(".");
  limit(tags.size(),0x8000,LIMITTAGS);
  limit(atts.size(),0x8000,LIMITATTS);
  limit(ns.size(),0x100,LIMITNS);
  if (meta.size < 0)   limit(0,0,LIMITRANGE);
  return pre;
}
