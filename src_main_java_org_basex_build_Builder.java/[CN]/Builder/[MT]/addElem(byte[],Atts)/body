{
  int n=tags.index(nm,null,true);
  if (meta.createpath)   path.index(n,Data.ELEM,level);
  final int pre=meta.size;
  tstack.set(level,n);
  pstack.set(level,pre);
  final int dis=level != 0 ? pre - pstack.get(level - 1) : 1;
  final int as=att.size();
  final boolean ne=ns.open();
  int u=ns.uri(nm,true);
  addElem(dis,n,Math.min(IO.MAXATTS,as + 1),u,ne);
  for (int a=0; a < as; ++a) {
    n=atts.index(att.name(a),att.string(a),true);
    u=ns.uri(att.name(a),false);
    if (meta.createpath) {
      path.index(n,Data.ATTR,level + 1,att.string(a),meta);
    }
    addAttr(n,att.string(a),Math.min(IO.MAXATTS,a + 1),u);
  }
  if (level != 0) {
    if (level > 1) {
      tags.stat(tstack.get(level - 1)).leaf=false;
    }
 else     if (inDoc) {
      error(MOREROOTS,parser.detail(),nm);
    }
  }
  if (meta.size != 1)   inDoc=true;
  if (Util.debug && (c++ & 0x7FFFF) == 0)   Util.err(".");
  limit(tags.size(),0x8000,LIMITTAGS);
  limit(atts.size(),0x8000,LIMITATTS);
  limit(ns.size(),0x100,LIMITNS);
  if (meta.size < 0)   limit(0,0,LIMITRANGE);
}
