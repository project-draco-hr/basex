{
  super(main,GUIEXPORT);
  final BaseXBack pp=new BaseXBack(new TableLayout(3,1,0,4));
  BaseXBack p=new BaseXBack(new TableLayout(2,2,8,0));
  out=new BaseXLabel(OUTDIR + COL,true,true).border(0,0,4,0);
  p.add(out);
  p.add(new BaseXLabel());
  final String dir=new IOFile(gui.context.data.meta.path).dir();
  path=new BaseXTextField(dir,this);
  path.addKeyListener(keys);
  p.add(path);
  final BaseXButton browse=new BaseXButton(BUTTONBROWSE,this);
  browse.setMnemonic();
  browse.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    final ActionEvent e){
      choose();
    }
  }
);
  p.add(browse);
  pp.add(p);
  p=new BaseXBack(new TableLayout(2,1));
  p.add(new BaseXLabel(INFOENCODING + COL,true,true).border(0,0,4,0));
  final Prop prop=gui.context.prop;
  SerializerProp sp=null;
  try {
    sp=new SerializerProp(prop.get(Prop.EXPORTER));
  }
 catch (  final IOException ex) {
    sp=new SerializerProp();
  }
  encoding=new BaseXCombo(this,ENCODINGS);
  String enc=gui.context.data.meta.encoding;
  boolean f=false;
  for (  final String s : ENCODINGS)   f|=s.equals(enc);
  if (!f) {
    enc=enc.toUpperCase();
    for (    final String s : ENCODINGS)     f|=s.equals(enc);
  }
  encoding.setSelectedItem(f ? enc : sp.get(SerializerProp.S_ENCODING));
  encoding.addKeyListener(keys);
  BaseXLayout.setWidth(encoding,BaseXTextField.DWIDTH);
  p.add(encoding);
  pp.add(p);
  format=new BaseXCheckBox(OUTINDENT,sp.get(SerializerProp.S_INDENT).equals(YES),0,this);
  pp.add(format);
  set(pp,BorderLayout.CENTER);
  p=new BaseXBack(new BorderLayout());
  info=new BaseXLabel(" ").border(18,0,0,0);
  p.add(info,BorderLayout.WEST);
  buttons=okCancel(this);
  p.add(buttons,BorderLayout.EAST);
  set(p,BorderLayout.SOUTH);
  action(null);
  finish(null);
}
