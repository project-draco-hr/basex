{
  skipWs();
  final int ip=pos;
  final AnnList anns=annotations(false).check(false);
  if (wsConsume(FUNCTION) && wsConsume(PAREN1)) {
    if (anns.contains(Annotation.PRIVATE) || anns.contains(Annotation.PUBLIC))     throw error(INVISIBLE);
    final HashMap<Var,Expr> nonLocal=new HashMap<>();
    localVars.pushContext(nonLocal);
    final Var[] args=paramList();
    wsCheck(PAREN2);
    final SeqType type=optAsType();
    final Expr body=enclosed(NOFUNBODY);
    final VarScope scope=localVars.popContext();
    return new Closure(info(),type,args,body,anns,nonLocal,sc,scope);
  }
  if (!anns.isEmpty())   throw error(NOANN);
  pos=ip;
  final QNm name=eQName(null,sc.funcNS);
  if (name != null && consume('#')) {
    if (keyword(name))     throw error(RESERVED_X,name.local());
    final Expr ex=numericLiteral(true);
    if (!(ex instanceof Int))     return ex;
    final int card=(int)((ANum)ex).itr();
    final Expr lit=Functions.getLiteral(name,card,qc,sc,info(),false);
    return lit != null ? lit : unknownLit(name,card,info());
  }
  pos=ip;
  return null;
}
