{
  final IO io=sc.io(string(path));
  final byte[] p=token(io.path());
  final byte[] u=ctx.modParsed.get(p);
  if (u != null) {
    if (!eq(uri,u))     throw error(WRONGMODULE,uri,ctx.context.user.has(Perm.ADMIN) ? io.path() : io.name());
    if (!sc.xquery3() && ctx.modStack.contains(p))     throw error(CIRCMODULE);
    return;
  }
  ctx.modParsed.put(p,uri);
  String qu;
  try {
    qu=string(io.read());
  }
 catch (  final IOException ex) {
    throw error(WHICHMODFILE,ctx.context.user.has(Perm.ADMIN) ? io.path() : io.name());
  }
  ctx.modStack.push(p);
  final StaticContext sub=new StaticContext(ctx.context);
  final LibraryModule lib=new QueryParser(qu,io.path(),ctx,sub).parseLibrary(false);
  final byte[] muri=lib.name.uri();
  if (!eq(uri,muri))   throw error(WRONGMODULE,muri,file);
  if (sub.initType != null) {
    if (sc.initType == null) {
      sc.initType=sub.initType;
    }
 else     if (!sub.initType.eq(sc.initType)) {
      throw error(CITYPES,sub.initType,sc.initType);
    }
  }
  ctx.modStack.pop();
}
