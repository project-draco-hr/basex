{
  tok.reset();
  while (digit(curr()))   tok.add(consume());
  final boolean dot=consume('.');
  if (dot) {
    tok.add('.');
    if (itr)     throw error(NUMBERITR,tok);
    while (digit(curr()))     tok.add(consume());
  }
  if (XMLToken.isNCStartChar(curr())) {
    if (!consume('e') && !consume('E'))     throw error(NUMBERWS);
    tok.add('e');
    if (curr('+') || curr('-'))     tok.add(consume());
    final int s=tok.size();
    while (digit(curr()))     tok.add(consume());
    if (s == tok.size())     throw error(NUMBER_X,tok);
    if (XMLToken.isNCStartChar(curr()))     throw error(NUMBERWS);
    return Dbl.get(tok.toArray(),info());
  }
  final byte[] tmp=tok.toArray();
  final int tl=tmp.length;
  if (tl == 0)   throw error(NUMBER_X,tmp);
  if (dot) {
    if (tl == 1 && tmp[0] == '.')     throw error(NUMBER_X,tmp);
    return Dec.get(new BigDecimal(string(trim(tmp))));
  }
  final long l=toLong(tmp);
  if (l != Long.MIN_VALUE)   return Int.get(l);
  final InputInfo ii=info();
  return FnError.get(RANGE_X.get(ii,chop(tok,ii)),SeqType.ITR,sc);
}
