{
  skipWs();
  final char c=curr();
  if (c == '$') {
    final InputInfo ii=info();
    return resolveVar(varName(),ii);
  }
  if (next() != '#' && consume('('))   return parenthesized();
  if (c == '<')   return constructor();
  Expr e=functionItem();
  if (e != null)   return e;
  e=functionCall();
  if (e != null)   return e;
  e=compConstructor();
  if (e != null)   return e;
  if (wsConsumeWs(ORDERED,CURLY1,INCOMPLETE) || wsConsumeWs(UNORDERED,CURLY1,INCOMPLETE))   return enclosed(NOENCLEXPR);
  if (wsConsumeWs(MAPSTR,CURLY1,INCOMPLETE))   return new CMap(info(),keyValues());
  if (wsConsumeWs(SQUARE1))   return new CArray(info(),false,values());
  if (wsConsumeWs(ARRAYSTR,CURLY1,INCOMPLETE)) {
    wsCheck(CURLY1);
    final Expr a=expr();
    wsCheck(CURLY2);
    return a == null ? new CArray(info(),true) : new CArray(info(),true,a);
  }
  final int ip=pos;
  if (consume(QUESTION)) {
    if (!wsConsume(COMMA) && !consume(PAREN2))     return new Lookup(info(),keySpecifier());
    pos=ip;
  }
  if (c == '.' && !digit(next())) {
    if (next() == '.')     return null;
    consume('.');
    return new Context(info());
  }
  return literal();
}
