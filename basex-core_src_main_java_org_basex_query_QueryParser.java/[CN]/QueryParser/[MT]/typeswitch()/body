{
  if (!wsConsumeWs(TYPESWITCH,PAREN1,TYPEPAR))   return null;
  final InputInfo ii=info();
  wsCheck(PAREN1);
  final Expr ts=check(expr(),NOTYPESWITCH);
  wsCheck(PAREN2);
  TypeCase[] cases={};
  final ArrayList<SeqType> types=new ArrayList<>();
  final int s=localVars.openScope();
  boolean cs;
  do {
    types.clear();
    cs=wsConsumeWs(CASE);
    if (!cs) {
      wsCheck(DEFAULT);
      skipWs();
    }
    Var var=null;
    if (curr('$')) {
      var=localVars.add(newVar(SeqType.ITEM_ZM));
      if (cs)       wsCheck(AS);
    }
    if (cs) {
      do       types.add(sequenceType());
 while (wsConsume(PIPE));
    }
    wsCheck(RETURN);
    final Expr ret=check(single(),NOTYPESWITCH);
    final TypeCase tc=new TypeCase(info(),var,types.toArray(new SeqType[types.size()]),ret);
    cases=Array.add(cases,tc);
    localVars.closeScope(s);
  }
 while (cs);
  if (cases.length == 1)   throw error(NOTYPESWITCH);
  return new TypeSwitch(ii,ts,cases);
}
