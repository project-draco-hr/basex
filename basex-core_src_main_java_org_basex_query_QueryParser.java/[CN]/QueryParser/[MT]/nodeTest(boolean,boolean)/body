{
  int p=pos;
  if (consume('*')) {
    p=pos;
    if (consume(':')) {
      if (!consume('*'))       return new NameTest(new QNm(ncName(QNAME_X)),Kind.NAME,att,sc.elemNS);
    }
    pos=p;
    return new NameTest(att);
  }
  if (consume(EQNAME)) {
    final byte[] uri=bracedURILiteral();
    if (consume('*')) {
      final QNm nm=new QNm(COLON,uri);
      return new NameTest(nm,Kind.URI,att,sc.elemNS);
    }
  }
  pos=p;
  QNm name=eQName(null,SKIPCHECK);
  if (name != null) {
    p=pos;
    if (all && wsConsumeWs(PAREN1)) {
      final NodeType type=NodeType.find(name);
      if (type != null)       return kindTest(type);
    }
 else {
      pos=p;
      if (!name.hasPrefix() && consume(":*")) {
        name=new QNm(concat(name.string(),COLON));
        qnames.add(name,!att);
        return new NameTest(name,Kind.URI,att,sc.elemNS);
      }
      qnames.add(name,!att);
      return new NameTest(name,Kind.URI_NAME,att,sc.elemNS);
    }
  }
  pos=p;
  return null;
}
