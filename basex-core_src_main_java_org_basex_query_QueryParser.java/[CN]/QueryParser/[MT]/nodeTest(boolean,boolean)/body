{
  final int i=pos;
  if (consume('*')) {
    if (!consume(':'))     return new NameTest(att);
    return new NameTest(new QNm(ncName(QNAME_X)),Kind.NAME,att,sc.elemNS);
  }
  if (consume(EQNAME)) {
    final byte[] uri=bracedURILiteral();
    if (consume('*')) {
      final QNm nm=new QNm(COLON,uri);
      return new NameTest(nm,Kind.URI,att,sc.elemNS);
    }
  }
  pos=i;
  final QNm name=eQName(null,SKIPCHECK);
  if (name != null) {
    final int i2=pos;
    if (all && wsConsumeWs(PAREN1)) {
      final NodeType type=NodeType.find(name);
      if (type != null)       return kindTest(type);
    }
 else {
      pos=i2;
      if (consume(":*") && !name.hasPrefix()) {
        final QNm nm=new QNm(concat(name.string(),COLON));
        qnames.add(nm,!att);
        return new NameTest(nm,Kind.URI,att,sc.elemNS);
      }
      skipWs();
      qnames.add(name,!att);
      return new NameTest(name,Kind.URI_NAME,att,sc.elemNS);
    }
  }
  pos=i;
  return null;
}
