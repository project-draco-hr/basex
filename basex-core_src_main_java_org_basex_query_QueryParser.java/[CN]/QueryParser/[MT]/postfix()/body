{
  Expr e=primary(), old;
  if (e != null) {
    do {
      old=e;
      if (wsConsume(SQUARE1)) {
        if (e == null)         throw error(PREDMISSING);
        final ExprList el=new ExprList();
        do {
          add(el,expr());
          wsCheck(SQUARE2);
        }
 while (wsConsume(SQUARE1));
        e=Filter.get(info(),e,el.finish());
      }
 else       if (consume(PAREN1)) {
        final InputInfo ii=info();
        final ExprList argList=new ExprList();
        final int[] holes=argumentList(argList,e);
        final Expr[] args=argList.finish();
        AnnList anns=null;
        if (e instanceof FuncItem)         anns=((FuncItem)e).annotations();
 else         if (e instanceof FuncLit)         anns=((FuncLit)e).annotations();
 else         if (e instanceof PartFunc)         anns=((PartFunc)e).annotations();
        final boolean up=sc.mixUpdates && anns != null && anns.contains(Annotation.UPDATING);
        if (up)         qc.updating();
        e=holes == null ? new DynFuncCall(ii,sc,up,e,args) : new PartFunc(sc,ii,e,args,holes);
      }
 else       if (consume(QUESTION)) {
        e=new Lookup(info(),keySpecifier(),e);
      }
 else       if (consume(ARROW)) {
        final Expr ex=arrowPostfix();
        wsCheck(PAREN1);
        if (ex instanceof QNm) {
          final QNm name=(QNm)ex;
          if (keyword(name))           throw error(RESERVED_X,name.local());
          e=function(name,e);
        }
 else {
          final InputInfo ii=info();
          final ExprList argList=new ExprList(e);
          final int[] holes=argumentList(argList,e);
          final Expr[] args=argList.finish();
          e=holes == null ? new DynFuncCall(ii,sc,false,ex,args) : new PartFunc(sc,ii,ex,args,holes);
        }
      }
    }
 while (e != old);
  }
  return e;
}
