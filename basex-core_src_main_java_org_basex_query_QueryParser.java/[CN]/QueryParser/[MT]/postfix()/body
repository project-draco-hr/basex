{
  Expr e=primary(), old;
  do {
    old=e;
    if (wsConsume(SQUARE1)) {
      if (e == null)       throw error(PREDMISSING);
      final ExprList el=new ExprList();
      do {
        add(el,expr());
        wsCheck(SQUARE2);
      }
 while (wsConsume(SQUARE1));
      e=Filter.get(info(),e,el.finish());
    }
 else     if (e != null) {
      if (!wsConsume(PAREN1))       break;
      final InputInfo ii=info();
      final ExprList argList=new ExprList();
      final int[] holes=argumentList(argList,e);
      final Expr[] args=argList.finish();
      Ann ann=null;
      if (e instanceof FuncItem)       ann=((FuncItem)e).annotations();
 else       if (e instanceof FuncLit)       ann=((FuncLit)e).annotations();
 else       if (e instanceof PartFunc)       ann=((PartFunc)e).annotations();
      final boolean up=sc.mixUpdates && ann != null && ann.contains(Ann.Q_UPDATING);
      if (up)       qc.updating();
      e=holes == null ? new DynFuncCall(ii,sc,up,e,args) : new PartFunc(sc,ii,e,args,holes);
    }
  }
 while (e != old);
  return e;
}
