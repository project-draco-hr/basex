{
  init();
  try {
    versionDecl();
    wsCheck(MODULE);
    wsCheck(NAMESPACE);
    skipWs();
    final byte[] pref=ncName(NONAME_X);
    wsCheck(IS);
    final byte[] uri=stringLiteral();
    if (uri.length == 0)     throw error(NSMODURI);
    module=new QNm(pref,uri);
    sc.ns.add(pref,uri,info());
    namespaces.put(pref,uri);
    wsCheck(";");
    final IO baseO=sc.baseIO();
    final byte[] path=token(baseO == null ? "" : baseO.path());
    qc.modParsed.put(path,uri);
    qc.modStack.push(path);
    prolog1();
    importModules();
    prolog2();
    finish(null);
    if (check)     check(null);
    qc.modStack.pop();
    return new LibraryModule(module,moduleDoc,funcs,vars,imports,sc);
  }
 catch (  final QueryException ex) {
    mark();
    ex.pos(this);
    throw ex;
  }
}
