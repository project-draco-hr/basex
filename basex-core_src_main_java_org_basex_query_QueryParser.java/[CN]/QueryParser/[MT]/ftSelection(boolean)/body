{
  FTExpr expr=ftOr(prg);
  FTExpr old;
  FTExpr first=null;
  boolean ordered=false;
  do {
    old=expr;
    if (wsConsumeWs(ORDERED)) {
      ordered=true;
      old=null;
    }
 else     if (wsConsumeWs(WINDOW)) {
      expr=new FTWindow(info(),expr,additive(),ftUnit());
    }
 else     if (wsConsumeWs(DISTANCE)) {
      final Expr[] rng=ftRange(false);
      if (rng == null)       throw error(FTRANGE);
      expr=new FTDistance(info(),expr,rng[0],rng[1],ftUnit());
    }
 else     if (wsConsumeWs(AT)) {
      final FTContents cont=wsConsumeWs(START) ? FTContents.START : wsConsumeWs(END) ? FTContents.END : null;
      if (cont == null)       throw error(INCOMPLETE);
      expr=new FTContent(info(),expr,cont);
    }
 else     if (wsConsumeWs(ENTIRE)) {
      wsCheck(CONTENT);
      expr=new FTContent(info(),expr,FTContents.ENTIRE);
    }
 else {
      final boolean same=wsConsumeWs(SAME);
      final boolean diff=!same && wsConsumeWs(DIFFERENT);
      if (same || diff) {
        final FTUnit unit;
        if (wsConsumeWs(SENTENCE))         unit=FTUnit.SENTENCES;
 else         if (wsConsumeWs(PARAGRAPH))         unit=FTUnit.PARAGRAPHS;
 else         throw error(INCOMPLETE);
        expr=new FTScope(info(),expr,same,unit);
      }
    }
    if (first == null && old != null && old != expr)     first=expr;
  }
 while (old != expr);
  if (ordered) {
    if (first == null)     return new FTOrder(info(),expr);
    first.expr[0]=new FTOrder(info(),first.expr[0]);
  }
  return expr;
}
