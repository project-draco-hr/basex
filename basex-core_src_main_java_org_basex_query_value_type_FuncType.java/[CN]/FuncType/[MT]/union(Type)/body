{
  if (!(t instanceof FuncType))   return AtomType.ITEM;
  final FuncType ft=(FuncType)t;
  if (this == SeqType.ANY_FUN || ft == SeqType.ANY_FUN)   return SeqType.ANY_FUN;
  final int al=argTypes.length;
  if (al != ft.argTypes.length)   return SeqType.ANY_FUN;
  final SeqType[] arg=new SeqType[al];
  for (int a=0; a < al; a++) {
    arg[a]=argTypes[a].intersect(ft.argTypes[a]);
    if (arg[a] == null)     return SeqType.ANY_FUN;
  }
  return get(anns.intersect(ft.anns),type.union(ft.type),arg);
}
