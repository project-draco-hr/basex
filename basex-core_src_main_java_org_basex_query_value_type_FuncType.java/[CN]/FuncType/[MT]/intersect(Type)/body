{
  if (t instanceof MapType || t instanceof ArrayType)   return t.intersect(this);
  if (instanceOf(t))   return this;
  if (t.instanceOf(this))   return t;
  if (t instanceof FuncType) {
    final FuncType ft=(FuncType)t;
    final SeqType rt=type.intersect(ft.type);
    final int al=argTypes.length;
    if (rt != null && al == ft.argTypes.length) {
      final SeqType[] arg=new SeqType[al];
      for (int a=0; a < al; a++)       arg[a]=argTypes[a].union(ft.argTypes[a]);
      final AnnList a=anns.union(ft.anns);
      return a == null ? null : get(a,rt,arg);
    }
  }
  return null;
}
