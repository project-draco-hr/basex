{
  if (t instanceof MapType || t instanceof ArrayType)   return t.intersect(this);
  if (instanceOf(t))   return this;
  if (t.instanceOf(this))   return t;
  if (t instanceof FuncType) {
    final FuncType ft=(FuncType)t;
    final SeqType rt=retType.intersect(ft.retType);
    if (rt != null && argTypes.length == ft.argTypes.length) {
      final SeqType[] arg=new SeqType[argTypes.length];
      for (int i=0; i < arg.length; i++)       arg[i]=argTypes[i].union(ft.argTypes[i]);
      final Ann a=ann.union(ft.ann);
      return a == null ? null : get(a,rt,arg);
    }
  }
  return null;
}
