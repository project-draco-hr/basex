{
  try {
    new RepoManager(ctx.repo).delete("xyz",null);
    fail("Not installed package not detected.");
  }
 catch (  final QueryException ex) {
    check(ex,Err.PKGNOTEXIST);
  }
  new RepoInstall(REPO + "pkg3.xar",null).execute(ctx);
  assertTrue(ctx.repo.pkgDict().contains(token("http://www.pkg3.com-10.0")));
  final String pkg3Dir=normalize("http://www.pkg3.com-10.0");
  assertTrue(dir(pkg3Dir));
  assertTrue(file(pkg3Dir + "/expath-pkg.xml"));
  assertTrue(dir(pkg3Dir + "/pkg3"));
  assertTrue(dir(pkg3Dir + "/pkg3/mod"));
  assertTrue(file(pkg3Dir + "/pkg3/mod/pkg3mod1.xql"));
  new RepoInstall(REPO + "pkg4.xar",null).execute(ctx);
  assertTrue(ctx.repo.pkgDict().contains(token("http://www.pkg4.com-2.0")));
  final String pkg4Dir=normalize("http://www.pkg4.com-2.0");
  assertTrue(dir(pkg4Dir));
  assertTrue(file(pkg4Dir + "/expath-pkg.xml"));
  assertTrue(dir(pkg4Dir + "/pkg4"));
  assertTrue(dir(pkg4Dir + "/pkg4/mod"));
  assertTrue(file(pkg4Dir + "/pkg4/mod/pkg4mod1.xql"));
  try {
    new RepoManager(ctx.repo).delete(pkg3Dir,null);
    fail("Package involved in a dependency was deleted.");
  }
 catch (  final QueryException ex) {
    check(ex,Err.PKGDEP);
  }
  new RepoDelete("http://www.pkg4.com",null).execute(ctx);
  assertFalse(ctx.repo.pkgDict().contains(token("http://www.pkg4.com-2.0")));
  assertTrue(!dir(pkg4Dir));
  new RepoDelete(pkg3Dir,null).execute(ctx);
  assertFalse(ctx.repo.pkgDict().contains(token("http://www.pkg3.com-10.0")));
  assertTrue(!dir(pkg3Dir));
}
