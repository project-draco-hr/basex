{
  final CountDownLatch sync=new CountDownLatch(1), test=new CountDownLatch(1);
  assertTrue("Increase {@code objects.length}!",objects.length > 1);
  final String[] release=Arrays.copyOf(objects,1);
  final String[] keep=Arrays.copyOfRange(objects,1,objects.length);
  final LockTester th1=new LockTester(null,NONE,objects,sync);
  final LockTester th2=new LockTester(sync,NONE,release,test);
  th1.start();
  th2.start();
  assertFalse("Thread 2 shouldn't be able to acquire lock yet.",test.await(WAIT,TimeUnit.MILLISECONDS));
  th1.downgrade(keep);
  assertFalse("Thread 2 shouldn't be able to acquire lock yet.",test.await(WAIT,TimeUnit.MILLISECONDS));
  th1.release();
  assertTrue("Thread 2 should be able to acquire lock now.",test.await(WAIT,TimeUnit.MILLISECONDS));
  th2.release();
}
