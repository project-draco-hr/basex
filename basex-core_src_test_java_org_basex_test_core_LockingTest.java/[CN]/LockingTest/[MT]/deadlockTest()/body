{
  final CountDownLatch sync=new CountDownLatch(1), test2=new CountDownLatch(1), test3=new CountDownLatch(1);
  ;
  final LockTester th1=new LockTester(null,NONE,new String[]{"3"},sync);
  final LockTester th2=new LockTester(sync,new String[]{"2"},new String[]{"1","3"},test2);
  final LockTester th3=new LockTester(sync,new String[]{"1"},new String[]{"2","3"},test3);
  th1.start();
  Thread.sleep(WAIT);
  th2.start();
  th3.start();
  th1.release();
  assertTrue("One of the threads should be able to aquire its locks now.",test2.await(WAIT,TimeUnit.MILLISECONDS) || test3.await(WAIT,TimeUnit.MILLISECONDS));
  boolean which=false;
  if (test2.getCount() == 0) {
    th2.release();
    which=true;
  }
 else   th3.release();
  assertTrue("The other thread should be able to acquire its locks now.",test2.await(WAIT,TimeUnit.MILLISECONDS) && test3.await(WAIT,TimeUnit.MILLISECONDS));
  if (which)   th3.release();
 else   th2.release();
}
