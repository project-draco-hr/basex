{
  final int s=ctx.vars.size();
  final PendingUpdates pu=new PendingUpdates(true);
  for (  final Let fo : copies) {
    final Iter ir=fo.expr.iter(ctx);
    final Item i=ir.next();
    if (i == null || !i.node() || ir.next() != null)     Err.or(UPCOPYMULT,this);
    final Data m=UpdateFunctions.buildDB(new NodIter(new Nod[]{(Nod)i},1),new MemData(ctx.context.prop));
    ctx.vars.add(fo.var.bind(new DBNode(m,0),ctx).copy());
    pu.addDataReference(m);
  }
  final PendingUpdates tmp=ctx.updates;
  ctx.updates=pu;
  ctx.iter(expr[0]).finish();
  ctx.updates.apply();
  ctx.updates=tmp;
  final Item im=expr[1].iter(ctx).finish();
  ctx.vars.reset(s);
  return im;
}
