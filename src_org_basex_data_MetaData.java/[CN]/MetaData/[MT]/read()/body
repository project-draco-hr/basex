{
  final DataInput in=new DataInput(dbname,DATAINFO);
  String storage="";
  int size=0;
  while (true) {
    final String key=in.readString();
    if (key.length() == 0)     break;
    final String val=in.readString();
    if (key.equals(DBSTORAGE))     storage=val;
 else     if (key.equals(DBFNAME))     filename=val;
 else     if (key.equals(DBFSIZE))     filesize=Token.toInt(val);
 else     if (key.equals(DBENCODING))     encoding=val;
 else     if (key.equals(DBHEIGHT))     height=Token.toInt(val);
 else     if (key.equals(DBSIZE))     size=Token.toInt(val);
 else     if (key.equals(DBCHOPPED))     chop=val.equals("ON");
 else     if (key.equals(DBENTITY))     entity=val.equals("ON");
 else     if (key.equals(DBTXTINDEX))     txtindex=val.equals("ON");
 else     if (key.equals(DBATVINDEX))     atvindex=val.equals("ON");
 else     if (key.equals(DBWRDINDEX))     wrdindex=val.equals("ON");
 else     if (key.equals(DBFTXINDEX))     ftxindex=val.equals("ON");
 else     if (key.equals(DBTIME))     time=Token.toLong(val);
 else     if (key.equals(DBLASTID))     lastid=Token.toLong(val);
  }
  in.close();
  if (!storage.equals(STORAGE)) {
    throw new BuildException(BaseX.info(DBUPDATE,storage));
  }
  return size;
}
