{
  final DataInput in=new DataInput(dbname,DATAINFO);
  String storage="";
  String istorage="";
  int size=0;
  while (true) {
    final String k=in.readString();
    if (k.length() == 0)     break;
    final String v=in.readString();
    if (k.equals(DBSTORAGE))     storage=v;
 else     if (k.equals(IDBSTORAGE))     istorage=v;
 else     if (k.equals(DBFNAME))     file=new IO(v);
 else     if (k.equals(DBFSIZE))     filesize=Token.toLong(v);
 else     if (k.equals(DBENCODING))     encoding=v;
 else     if (k.equals(DBHEIGHT))     height=Token.toInt(v);
 else     if (k.equals(DBSIZE))     size=Token.toInt(v);
 else     if (k.equals(DBCHOPPED))     chop=toBool(v);
 else     if (k.equals(DBENTITY))     entity=toBool(v);
 else     if (k.equals(DBTXTINDEX))     txtindex=toBool(v);
 else     if (k.equals(DBATVINDEX))     atvindex=toBool(v);
 else     if (k.equals(DBFTXINDEX))     ftxindex=toBool(v);
 else     if (k.equals(DBFZINDEX))     ftfuzzy=toBool(v);
 else     if (k.equals(DBFTSTEM))     ftstem=toBool(v);
 else     if (k.equals(DBFTCS))     ftcs=toBool(v);
 else     if (k.equals(DBFTDC))     ftdc=toBool(v);
 else     if (k.equals(DBTIME))     time=Token.toLong(v);
 else     if (k.equals(DBLASTID))     lastid=Token.toInt(v);
  }
  in.close();
  if (!storage.equals(STORAGE))   throw new BuildException(DBUPDATE,storage);
  if (!istorage.equals(ISTORAGE))   noIndex();
  return size;
}
