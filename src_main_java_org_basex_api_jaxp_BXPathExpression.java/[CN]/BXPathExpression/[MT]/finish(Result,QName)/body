{
  final Nodes nodes=item instanceof Nodes ? (Nodes)item : null;
  if (res == XPathConstants.NODESET || res == XPathConstants.NODE) {
    if (nodes == null)     throw new XPathExpressionException("Result can't be cast to a nodeset");
    if (nodes.size() == 0)     return null;
    final Data data=nodes.data;
    return res == XPathConstants.NODESET ? new BXNList(nodes) : new DBNode(data,nodes.nodes[0]).toJava();
  }
  try {
    final CachedOutput co=new CachedOutput();
    item.serialize(new XMLSerializer(co));
    final String val=co.toString();
    if (res == XPathConstants.NUMBER)     return Double.valueOf(val);
    if (res == XPathConstants.STRING)     return val;
    if (res == XPathConstants.BOOLEAN)     return Boolean.valueOf(val);
    throw new XPathExpressionException("Invalid type: " + res);
  }
 catch (  final IOException ex) {
    throw new XPathExpressionException(ex);
  }
}
