{
  final Context c=gui.context;
  final Data data=c.data();
  if (data == null)   return;
  if (showAttsChanged())   paintType=Refresh.INIT;
  if (slimToTextChanged() && paintType == Refresh.VOID)   paintType=Refresh.RESIZE;
  super.paintComponent(g);
  gui.painting=true;
  final DBNodes nodes=gui.context.current();
  roots=nodes.pres;
  final int rl=roots.length;
  if (rl == 0)   return;
  for (int i=0; !showAtts && i < rl; ++i) {
    if (roots[i] >= data.meta.size)     break;
    if (data.kind(roots[i]) == Data.ATTR) {
      drawMessage(g,NO_ATTS);
      return;
    }
  }
  smooth(g);
  g.setFont(font);
  fontHeight=g.getFontMetrics().getHeight();
  if (paintType == Refresh.INIT) {
    sub=new TreeSubtree(data,showAtts);
    tr=new TreeRects(this);
  }
  tr.nodes=nodes;
  if (paintType == Refresh.INIT || paintType == Refresh.CONTEXT) {
    sub.generateBorders(data,roots);
  }
  final boolean winChange=windowSizeChanged();
  if (winChange && paintType == Refresh.VOID || paintType == Refresh.INIT || paintType == Refresh.CONTEXT || paintType == Refresh.RESIZE) {
    treedist=tr.generateRects(sub,g,wstart,wwidth,slimToText);
    nes=treedist == -1;
    if (!nes) {
      markedImage=null;
      setLevelDistance();
      createMainImage();
      if (gui.context.marked.size() > 0)       markNodes();
    }
  }
  if (nes) {
    drawMessage(g,NOT_ENOUGH_SPACE);
    return;
  }
  g.drawImage(treeImage,0,0,wwidth,wheight,this);
  if (selection) {
    if (selectRect != null) {
      final int x=selectRect.w < 0 ? selectRect.x + selectRect.w : selectRect.x;
      final int y=selectRect.h < 0 ? selectRect.y + selectRect.h : selectRect.y;
      final int w=Math.abs(selectRect.w);
      final int h=Math.abs(selectRect.h);
      g.setColor(colormark1);
      g.drawRect(x,y,w,h);
    }
    markNodes();
  }
  if (markedImage != null)   g.drawImage(markedImage,0,0,wwidth,wheight,this);
  inFocus=paintType == Refresh.VOID && focus();
  if (inFocus && !winChange) {
    if (!refreshedFocus && tr.bigRect(sub,frn,flv)) {
      final int f=getMostSizedNode(data,frn,flv,frect,fpre);
      if (f >= 0)       fpre=f;
    }
    highlightNode(g,frn,flv,frect,fpre,-1,Draw.HIGHLIGHT);
    refreshedFocus=false;
  }
  paintType=Refresh.VOID;
  gui.painting=false;
}
