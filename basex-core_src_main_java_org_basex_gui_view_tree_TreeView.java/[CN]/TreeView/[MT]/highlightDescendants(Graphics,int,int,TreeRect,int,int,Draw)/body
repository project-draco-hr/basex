{
  final Data d=gui.context.data();
  final boolean br=tr.bigRect(sub,rn,lv);
  if (!br && t != Draw.CONNECTION)   drawRectangle(g,rn,lv,r,pre,t);
  final int lvd=lv + 1;
  final TreeBorder[] sbo=sub.subtree(d,pre);
  if (sub.subtreeHeight(rn) >= lvd && sbo.length >= 2) {
    final boolean brd=tr.bigRect(sub,rn,lvd);
    if (brd) {
      drawBigRectDescendants(g,rn,lvd,sbo,px,t);
    }
 else {
      final TreeBorder bo=sbo[1];
      final TreeBorder bos=sub.treeBorder(rn,lvd);
      final int start=bo.start >= bos.start ? bo.start - bos.start : bo.start;
      for (int j=0; j < bo.size; ++j) {
        final int dp=sub.prePerIndex(rn,lvd,j + start);
        final TreeRect dr=tr.getTreeRectPerIndex(rn,lvd,j + start);
        if (levelDistance >= MIN_NODE_DIST_CONN)         drawDescendantsConn(g,lvd,dr,px,t);
        highlightDescendants(g,rn,lvd,dr,dp,getRectCenter(dr),t == Draw.CONNECTION ? Draw.CONNECTION : Draw.DESCENDANTS);
      }
    }
  }
}
