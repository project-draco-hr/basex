{
  if (lv == -1)   return;
  final boolean br=tr.bigRect(sub,rn,lv);
  final boolean root=roots[rn] == pre;
  final int height=sub.subtreeHeight(rn);
  final Data d=gui.context.data();
  final int k=d.kind(pre);
  final int size=d.size(pre,k);
  final int rc;
  if (br) {
    rc=drawNodeInBigRectangle(g,rn,lv,r,pre);
  }
 else {
    drawRectangle(g,rn,lv,r,pre,t);
    rc=getRectCenter(r);
  }
  if (px > -1 && levelDistance >= MIN_NODE_DIST_CONN)   drawParentConnection(g,lv,r,px,rc);
  if (!root) {
    final int par=d.parent(pre,k);
    final int lvp=lv - 1;
    final TreeRect parRect=tr.searchRect(sub,rn,lvp,par);
    if (parRect == null)     return;
    highlightNode(g,rn,lvp,parRect,par,rc,Draw.PARENT);
  }
  if ((t == Draw.CONNECTION || t == Draw.HIGHLIGHT) && size > 1 && lv + 1 < height)   highlightDescendants(g,rn,lv,r,pre,rc,t);
  if (t == Draw.HIGHLIGHT)   drawThumbnails(g,lv,pre,r,root);
}
