{
  final Picture[] pics=new Picture[patterns.length];
  for (int s=0; s < patterns.length; ++s) {
    final byte[] pt=patterns[s];
    final Picture pic=new Picture();
    int p=0;
    boolean act=false;
    final int[] opt=new int[2];
    for (int i=0; i < pt.length; i+=cl(pt,i)) {
      int ch=cp(pt,i);
      final boolean a=active.indexOf(ch) != -1;
      if (ch == decimal) {
        ++p;
        act=false;
      }
 else       if (ch == digit) {
        opt[p]++;
      }
 else       if (ch == group) {
        pic.group[p]=Array.add(pic.group[p],pic.min[p] + opt[p]);
      }
 else       if (digits.indexOf(ch) != -1) {
        pic.min[p]++;
      }
 else {
        pic.pc|=ch == percent;
        pic.pm|=ch == permille;
        pic.fix[p == 0 && act ? p + 1 : p].add(ch);
      }
      act|=a;
    }
    for (int g=0; g < pic.group[0].length; ++g) {
      pic.group[0][g]=pic.min[0] + opt[0] - pic.group[0][g];
    }
    pic.maxFrac=pic.min[1] + opt[1];
    pics[s]=pic;
  }
  return pics;
}
