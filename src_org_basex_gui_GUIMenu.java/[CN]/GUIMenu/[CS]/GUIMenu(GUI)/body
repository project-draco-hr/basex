{
  gui=main;
  final String sm=Toolkit.getDefaultToolkit().getMenuShortcutKeyMask() == Event.META_MASK ? "meta" : "ctrl";
  int c=0;
  for (int i=0; i < MENUBAR.length; i++)   for (int j=0; j < MENUITEMS[i].length; j++)   c++;
  items=new JMenuItem[c];
  c=0;
  for (int i=0; i < MENUBAR.length; i++) {
    final JMenu menu=new JMenu(MENUBAR[i]);
    menu.setMnemonic((int)MENUBAR[i].charAt(0));
    for (int j=0; j < MENUITEMS[i].length; j++) {
      final Object subEntry=MENUITEMS[i][j];
      if (subEntry == null) {
        menu.addSeparator();
      }
 else {
        JComponent comp=null;
        if (subEntry instanceof String) {
          comp=new BaseXLabel((String)subEntry);
          comp.setFont(getFont());
          comp.setBorder(new EmptyBorder(2,5,2,0));
        }
 else {
          final GUICommand cmd=(GUICommand)subEntry;
          final JMenuItem item=cmd.checked() ? new JCheckBoxMenuItem(cmd.desc()) : new JMenuItem(cmd.desc());
          item.addActionListener(new ActionListener(){
            public void actionPerformed(            final ActionEvent e){
              cmd.execute(gui);
            }
          }
);
          item.setMnemonic(cmd.desc().charAt(0));
          item.setToolTipText(cmd.help());
          final String sc=cmd.key();
          if (sc != null) {
            item.setAccelerator(KeyStroke.getKeyStroke(BaseX.info(sc,sm)));
          }
          comp=item;
          items[c++]=item;
        }
        menu.add(comp);
      }
    }
    add(menu);
  }
}
