{
  return RuntimeExpr.funcItem(new RuntimeExpr(info){
    @Override public Value value(    final QueryContext qc) throws QueryException {
      final ItemList cache=qc.get(params[0]).cache();
      final int sz=cache.size();
      final Item[] items=cache.internal();
      long s=seed;
      for (int i=sz; --i >= 1; ) {
        s=next(s);
        final int j=(int)((s >>> 16) % (i + 1));
        if (i != j) {
          final Item item=items[i];
          items[i]=items[j];
          items[j]=item;
        }
      }
      return cache.value();
    }
  }
,1,sc,qctx);
}
