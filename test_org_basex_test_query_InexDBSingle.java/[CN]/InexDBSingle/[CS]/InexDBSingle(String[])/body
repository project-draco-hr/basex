{
  final Performance p=new Performance();
  Main.outln(Main.name(InexDBSingle.class));
  if (!parseArguments(args))   return;
  final BufferedReader br=new BufferedReader(new FileReader(QUERIES));
  String l;
  int c=0;
  String query="";
  while ((l=br.readLine()) != null) {
    if (++c == quindex) {
      query=l.substring(l.lastIndexOf(';') + 1).replaceAll("\"","'");
    }
  }
  br.close();
  final TokenBuilder qu=new TokenBuilder();
  qu.add("let $hits := (for $i score $s in(\n");
  int d=0;
  for (  final String s : List.list(ctx)) {
    if (s.startsWith(DBPREFIX)) {
      if (d++ != 0)       qu.add(",\n");
      qu.add("doc('" + s + "')"+ query);
    }
  }
  qu.add(")\n" + "order by $s descending\n" + "return <result score='{ $s }' "+ "file='{ replace(base-uri($i), '.*/', '') }'>{ $i }</result>)"+ "[position() <= " + MAX + "]\n"+ "return <results query=\""+ query+ "\">{ $hits }</results>\n");
  if (session.execute(new XQuery(qu.toString()))) {
    String file=Integer.toString(quindex) + ".xml";
    while (file.length() < 7)     file="0" + file;
    final PrintOutput out=new PrintOutput(file);
    session.output(out);
    out.close();
    Main.outln("- " + query);
    Main.outln("Result saved to % in %",file,p);
  }
 else {
    Main.outln(session.info());
  }
}
