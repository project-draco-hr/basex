{
  if (res == null || res[0].length == 0 || p == null) {
    return new int[][]{};
  }
  int k=0;
  int[][] mres=new int[2][res[0].length * 2];
  int c=0;
  int pos=-1;
  byte[] data;
  int[][] level;
  int l;
  int i=0;
  int lid=-1;
  for (k=0; k < res[0].length; k++) {
    if (lid != res[0][k]) {
      lid=-1;
      if (k + 1 == p.length) {
        break;
      }
      data=ctx.local.data.text(res[0][k]);
      pos=getBytePositionNScopsFollowing(res[1][k],data,(int)ftpos.from.num());
      i=k;
      level=new int[2][p[0] + 1];
      while (i < res[0].length && res[0][k] == res[0][i] && res[1][i] <= pos) {
        level[0][p[i + 1]]=res[0][i];
        level[1][p[i + 1]]=res[1][i];
        lid=res[0][i];
        i++;
      }
      l=0;
      while (l < level[0].length) {
        if (level[0][l] == 0) {
          break;
        }
        l++;
      }
      if (l == level[0].length) {
        System.arraycopy(level[0],0,mres[0],c,level[0].length);
        System.arraycopy(level[1],0,mres[1],c,level[0].length);
        c=c + level[0].length;
      }
    }
  }
  if (c == 0) {
    return null;
  }
  int[][] result=new int[2][c];
  System.arraycopy(mres[0],0,result[0],0,c);
  System.arraycopy(mres[1],0,result[1],0,c);
  return result;
}
