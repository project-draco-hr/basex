{
  if (res == null || res[0] == null || res[0].length == 0 || ftpos.from == null) {
    return new int[][]{};
  }
  if (ftpos.to == null && ftpos.ftRange.equals(FTPositionFilter.RANGE.ATLEAST)) {
    ftpos.to=new Num(res[0].length);
  }
  int[][] maxResult=new int[2][res[0].length];
  int count=0;
  int times=1;
  int[] stack=new int[res[0].length];
  for (int i=1; i <= res[0].length; i++) {
    if (i < res[0].length && res[0][i - 1] == res[0][i]) {
      stack[times]=res[1][i - 1];
      times++;
    }
 else {
      if (ftpos.from.num() <= times && times <= ftpos.to.num()) {
        for (int t=0; t < times; t++) {
          maxResult[0][count]=res[0][i - 1];
          maxResult[1][count++]=stack[t];
        }
        maxResult[0][count]=res[0][i - 1];
        maxResult[1][count]=res[1][i - 1];
        count++;
      }
      stack=new int[res[0].length];
      times=1;
    }
  }
  if (count == 0) {
    return null;
  }
  int[][] returnResult=new int[2][count];
  System.arraycopy(maxResult[0],0,returnResult[0],0,count);
  System.arraycopy(maxResult[1],0,returnResult[1],0,count);
  return returnResult;
}
