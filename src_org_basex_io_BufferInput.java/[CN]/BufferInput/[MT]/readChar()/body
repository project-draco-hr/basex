{
  byte ch=readByte();
  if (enc == UTF16LE)   return (ch & 0xFF) | ((readByte() & 0xFF) << 8);
  if (enc == UTF16BE)   return ((ch & 0xFF) << 8) | readByte() & 0xFF;
  if (enc == UTF8) {
    final int cl=cl(ch);
    if (cl == 1)     return ch & 0xFF;
    CACHE[0]=ch;
    for (int c=1; c < cl; c++)     CACHE[c]=readByte();
    return cp(CACHE,0);
  }
  if (ch >= 0)   return ch;
  int p=0;
  while (true) {
    if (p == 4)     return -CACHE[0];
    CACHE[p++]=ch;
    try {
      final CharBuffer cb=csd.decode(ByteBuffer.wrap(Array.finish(CACHE,p)));
      int i=0;
      for (int c=0; c < cb.limit(); c++)       i|=cb.get(c) << (c << 3);
      return i;
    }
 catch (    final CharacterCodingException ex) {
      ch=readByte();
    }
  }
}
