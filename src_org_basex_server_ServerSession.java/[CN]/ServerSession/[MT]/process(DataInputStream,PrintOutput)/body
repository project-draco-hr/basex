{
  while (true) {
    String in=null;
    try {
      in=dis.readUTF();
    }
 catch (    final IOException ex) {
      exit();
      return;
    }
    final Performance perf=new Performance();
    Process proc=null;
    try {
      proc=new CommandParser(in,context,true).parse()[0];
      if (proc instanceof IntInfo) {
        String inf=core.info();
        if (inf.equals(PROGERR))         inf=SERVERTIME;
        new DataOutputStream(out).writeUTF(inf);
        out.flush();
      }
 else       if (proc instanceof IntStop || proc instanceof Exit) {
        exit();
        if (proc instanceof IntStop)         server.quit(false);
        return;
      }
 else {
        core=proc;
        startTimer(proc);
        boolean up=proc.updating();
        if (up)         server.sem.startWrite(this);
 else         server.sem.startRead(this);
        final boolean ok=proc.execute(context,out);
        stopTimer();
        out.write(new byte[IO.BLOCKSIZE]);
        send(out,ok);
        if (up)         server.sem.stopWrite(this);
 else         server.sem.stopRead(this);
      }
    }
 catch (    final QueryException ex) {
      proc=new IntError(ex.extended());
      core=proc;
      out.write(new byte[IO.BLOCKSIZE]);
      send(out,false);
    }
    if (info)     Main.outln(this + " " + in+ ": "+ perf.getTimer());
  }
}
