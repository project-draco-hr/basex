{
  final int limit=pre + data.size(pre,Data.ELEM);
  double currX=-1;
  double currY=-1;
  int p=pre;
  p++;
  while (p < limit) {
    final int kind=data.kind(p);
    if (kind == Data.ELEM) {
      final byte[] currName=data.tag(p);
      boolean isXvalue=false;
      if ((isXvalue=Token.eq(attrX,currName)) && xIsTag || Token.eq(attrY,currName) && yIsTag) {
        final int attSize=data.attSize(p,kind);
        final byte[] value=data.text(p + attSize);
        if (isXvalue) {
          currX=calcPosition(true,value);
        }
 else {
          currY=calcPosition(false,value);
        }
      }
    }
 else     if (kind == Data.ATTR) {
      boolean isXvalue=false;
      final byte[] currName=data.attName(p);
      if ((isXvalue=Token.eq(attrX,currName)) && !xIsTag || Token.eq(attrY,currName) && !yIsTag) {
        final byte[] value=data.attValue(p);
        if (isXvalue) {
          currX=calcPosition(true,value);
        }
 else {
          currY=calcPosition(false,value);
        }
      }
    }
    p++;
  }
  tmpPres.add(pre);
  tmpX.add(currX);
  tmpY.add(currY);
}
