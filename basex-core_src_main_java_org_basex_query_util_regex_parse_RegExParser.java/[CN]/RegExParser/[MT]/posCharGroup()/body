{
  final RegExpList cg=new RegExpList();
  RegExp sub=null;
  label_4:   while (true) {
    if (jj_2_3(3)) {
      sub=charRange();
      cg.add(sub);
    }
 else {
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case SINGLE_ESC:
case MULTI_ESC:
case CAT_ESC:
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case SINGLE_ESC:
          jj_consume_token(SINGLE_ESC);
        break;
case MULTI_ESC:
      jj_consume_token(MULTI_ESC);
    break;
case CAT_ESC:
  jj_consume_token(CAT_ESC);
break;
default :
jj_la1[13]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
for (final RegExp re : Escape.inGroup(token.image)) cg.add(re);
break;
default :
jj_la1[14]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
}
if (jj_2_4(1)) {
;
}
 else {
break label_4;
}
}
{
if (true) return new CharGroup(cg.finish());
}
throw new Error("Missing return statement in function");
}
