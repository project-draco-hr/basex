{
  RegExp nd=null;
switch (jj_ntk == -1 ? jj_ntk() : jj_ntk) {
case CHAR:
case DIGIT:
    nd=Char();
  break;
case WILDCARD:
case LINE_START:
case LINE_END:
case SINGLE_ESC:
case MULTI_ESC:
case CAT_ESC:
case BR_OPEN:
nd=charClass();
break;
case NPAR_OPEN:
jj_consume_token(NPAR_OPEN);
nd=regExp();
jj_consume_token(PAR_CLOSE);
nd=new Group(nd,false);
break;
case PAR_OPEN:
jj_consume_token(PAR_OPEN);
final int grp=++groups;
nd=regExp();
jj_consume_token(PAR_CLOSE);
closed.set(grp);
nd=new Group(nd,true);
break;
case BACK_REF:
nd=backReference();
break;
default :
jj_la1[7]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
{
if (true) return nd;
}
throw new Error("Missing return statement in function");
}
