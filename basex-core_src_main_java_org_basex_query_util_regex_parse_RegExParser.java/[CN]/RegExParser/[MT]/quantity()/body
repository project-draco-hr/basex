{
  final int[] qty=new int[2];
  jj_consume_token(NUMBER);
  try {
    qty[0]=qty[1]=Integer.parseInt((String)token.getValue());
  }
 catch (  final NumberFormatException ex) {
{
      if (true)       throw new ParseException("Number in quantifier is too large");
    }
  }
switch (jj_ntk == -1 ? jj_ntk() : jj_ntk) {
case COMMA:
    jj_consume_token(COMMA);
  qty[1]=-1;
switch (jj_ntk == -1 ? jj_ntk() : jj_ntk) {
case NUMBER:
  jj_consume_token(NUMBER);
try {
  qty[1]=Integer.parseInt((String)token.getValue());
}
 catch (final NumberFormatException ex) {
{
    if (true)     throw new ParseException("Number in quantifier is too large");
  }
}
if (qty[0] > qty[1]) {
if (true) throw new ParseException("Illegal quantifier: " + qty[0] + " > "+ qty[1]);
}
break;
default :
jj_la1[5]=jj_gen;
;
}
break;
default :
jj_la1[6]=jj_gen;
;
}
{
if (true) return qty;
}
throw new Error("Missing return statement in function");
}
