{
  if (minp == -1) {
    minp=0;
    while (mp[minp].ftn.size == 0)     minp++;
    cp.set(minp,0);
    for (int ip=minp + 1; ip < pex.length; ip++) {
      if (mp[ip].ftn.size > 0) {
        final FTNodeItem n1=mp[pex[ip]];
        final FTNodeItem n2=mp[pex[minp]];
        if (n1.ftn.getPre() < n2.ftn.getPre()) {
          minp=ip;
          cp.set(ip,0);
        }
 else         if (n1.ftn.getPre() == n2.ftn.getPre()) {
          cp.add(ip);
        }
      }
    }
  }
  minp=-1;
  final FTNodeItem m=mp[pex[cp.list[0]]];
  for (int i=1; i < cp.size; i++) {
    m.merge(mp[pex[cp.list[i]]],0);
  }
  return m;
}
