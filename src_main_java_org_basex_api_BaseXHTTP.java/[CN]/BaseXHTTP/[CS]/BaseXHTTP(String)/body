{
  parseArguments(args);
  server=!Token.eqic(System.getProperty(DBMODE),LOCAL,CLIENT);
  final MainProp mprop=ctx.mprop;
  final int port=mprop.num(MainProp.SERVERPORT);
  final int eport=mprop.num(MainProp.EVENTPORT);
  final int hport=mprop.num(MainProp.HTTPPORT);
  final int sport=mprop.num(MainProp.STOPPORT);
  int same=-1;
  if (port == eport || port == hport || port == sport)   same=port;
 else   if (eport == hport || eport == sport)   same=eport;
 else   if (hport == sport)   same=hport;
  if (same != -1)   throw new BaseXException(PORT_TWICE_X,same);
  final String shost=mprop.get(MainProp.SERVERHOST);
  if (service) {
    start(hport,args);
    Util.outln(HTTP + ' ' + SRV_STARTED);
    if (server)     Util.outln(SRV_STARTED);
    Performance.sleep(1000);
    return;
  }
  if (stopped) {
    stop();
    Util.outln(HTTP + ' ' + SRV_STOPPED);
    if (server)     Util.outln(SRV_STOPPED);
    Performance.sleep(1000);
    return;
  }
  if (System.getProperty(DBUSER) != null) {
    while (System.getProperty(DBPASS) == null) {
      Util.out(PASSWORD + COLS);
      System.setProperty(DBPASS,Util.password());
    }
  }
  if (server) {
    if (quiet)     new BaseXServer(ctx,"-z");
 else     new BaseXServer(ctx);
    Util.outln(HTTP + ' ' + SRV_STARTED);
  }
 else {
    Util.outln(CONSOLE + HTTP + ' '+ SRV_STARTED,SERVERMODE);
  }
  jetty=new Server();
  final Connector conn=new SelectChannelConnector();
  if (!shost.isEmpty())   conn.setHost(shost);
  conn.setPort(hport);
  jetty.addConnector(conn);
  final org.mortbay.jetty.servlet.Context jctx=new org.mortbay.jetty.servlet.Context(jetty,"/",org.mortbay.jetty.servlet.Context.SESSIONS);
  if (rest)   jctx.addServlet(RESTServlet.class,"/rest/*");
  if (webdav)   jctx.addServlet(WebDAVServlet.class,"/webdav/*");
  final ResourceHandler rh=new ResourceHandler();
  rh.setWelcomeFiles(new String[]{"index.xml","index.xhtml","index.html"});
  rh.setResourceBase(ctx.mprop.get(MainProp.HTTPPATH));
  final HandlerList hl=new HandlerList();
  hl.addHandler(rh);
  hl.addHandler(jctx);
  jetty.setHandler(hl);
  jetty.start();
  new StopServer(sport,shost).start();
  Runtime.getRuntime().addShutdownHook(new Thread(){
    @Override public void run(){
      Util.outln(HTTP + ' ' + SRV_STOPPED);
    }
  }
);
}
