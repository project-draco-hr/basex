{
  if (user.equals(UserText.ADMIN))   return !info(ADMIN_STATIC);
  final Users users=context.users;
  if (db == null) {
    for (    final ClientListener s : context.sessions) {
      if (s.context().user().name().equals(user))       return !info(USER_LOGGED_IN_X,user);
    }
    users.drop(users.get(user));
    return info(USER_DROPPED_X,user);
  }
  final Data data;
  try {
    data=Open.open(db,context,options);
  }
 catch (  final IOException ex) {
    return !info(Util.message(ex),db);
  }
  if (!startUpdate(data))   return false;
  if (data.meta.users.drop(data.meta.users.get(user)))   info(USER_DROPPED_X_X,user,db);
  if (!finishUpdate(data))   return false;
  Close.close(data,context);
  return true;
}
