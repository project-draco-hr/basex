{
  final Data data=context.data();
  final String src=MetaData.normPath(args[0]);
  if (src == null)   return error(NAME_INVALID_X,args[0]);
  final String trg=MetaData.normPath(args[1]);
  if (trg == null)   return error(NAME_INVALID_X,args[1]);
  if (!startUpdate(data))   return false;
  boolean ok=true;
  int c=0;
  final IntList docs=data.resources.docs(src);
  for (int i=0, ds=docs.size(); i < ds; i++) {
    final int pre=docs.get(i);
    final String target=target(data,pre,src,trg);
    if (target.isEmpty()) {
      ok=!info(NAME_INVALID_X,target);
    }
 else {
      data.update(pre,Data.DOC,token(target));
      c++;
    }
  }
  if (c != 0)   data.flush();
  final IOFile file=data.meta.binary(src);
  if (file != null && file.exists()) {
    final IOFile target=data.meta.binary(trg);
    final IOFile trgdir=new IOFile(target.dir());
    if (!trgdir.exists() && !trgdir.md() || !file.rename(target)) {
      ok=!info(NAME_INVALID_X,trg);
    }
    c++;
  }
  return stopUpdate(data) && info(DOCS_RENAMED_X_X,c,perf) && ok;
}
