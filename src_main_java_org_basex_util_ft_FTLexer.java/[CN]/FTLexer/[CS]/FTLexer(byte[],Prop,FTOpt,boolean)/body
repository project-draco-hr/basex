{
  pr=p;
  fto=f;
  txt=t;
  final byte[] lang;
  final String lstr;
  if (fto != null && fto.ln != null) {
    lang=fto.ln;
  }
 else   if (pr != null && (lstr=p.get(Prop.FTLANGUAGE)).length() > 0) {
    lang=token(lstr);
  }
 else {
    lang=LanguageTokens.DEFAULT.ln;
  }
  Tokenizer tk=TOKENIZERS.getFirst();
  if (lang != null) {
    for (    final Tokenizer tok : TOKENIZERS) {
      if (tok.isLanguageSupported(lang)) {
        tk=tok;
        break;
      }
    }
  }
  tokenizer=tk.newInstance(t,p,f,sc);
  iterator=tokenizer.iterator();
  if (f != null && f.isSet(ST) && f.is(ST) && f.sd == null || f == null && p != null && p.is(Prop.STEMMING)) {
    SpanProcessor sp=STEMMERS.getFirst();
    for (    final SpanProcessor stem : STEMMERS) {
      if (stem.isLanguageSupported(lang)) {
        sp=stem;
        break;
      }
    }
    iterator=sp.newInstance(p,f).process(iterator);
  }
 else   if (f != null && f.isSet(ST) && f.is(ST) && f.sd != null)   iterator=new DictionaryStemmer(f.sd).process(iterator);
}
