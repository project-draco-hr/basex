{
  final int pre=gui.context.focused;
  if (pre == -1)   return;
  super.mousePressed(e);
  final Context context=gui.context;
  final Data data=gui.context.data();
  if (tdata.rows == null)   return;
  if (e.getY() < header.getHeight())   return;
  if (SwingUtilities.isLeftMouseButton(e)) {
    if (e.getClickCount() == 1) {
      final int c=tdata.column(getWidth() - scroll.getWidth(),e.getX());
      final String str=content.focusedString;
      if (str == null || str.length() > data.meta.maxlen)       return;
      if (!e.isShiftDown())       tdata.resetFilter();
      tdata.cols[c].filter=str;
      query();
    }
 else {
      DBNodes nodes=context.marked;
      if (getCursor() == CURSORARROW) {
        nodes=new DBNodes(nodes.data(),tdata.getRoot(nodes.data(),pre));
      }
      gui.notify.context(nodes,false,null);
    }
  }
 else {
    final TableIterator it=new TableIterator(data,tdata);
    final int c=tdata.column(getWidth() - scroll.getWidth(),e.getX());
    it.init(pre);
    while (it.more()) {
      if (it.col == c) {
        gui.notify.mark(new DBNodes(data,it.pre),null);
        return;
      }
    }
  }
}
