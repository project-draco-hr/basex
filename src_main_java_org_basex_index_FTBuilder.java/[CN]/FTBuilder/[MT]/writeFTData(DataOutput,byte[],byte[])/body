{
  int np=4, pp=4, lp=-1, lu=-1;
  final int ns=Num.size(vpre);
  while (np < ns) {
    if (scm > 0) {
      final int p=Num.read(vpre,np);
      if (lp != p) {
        int u=unit.find(p);
        if (u < 0)         u=-u - 1;
        if (lu != u) {
          final int s=Scoring.tfIDF(freq.get(fc++),maxfreq[u],unit.size(),ntoken[token]);
          if (max < s)           max=s;
          if (min > s)           min=s;
          if (np != 4)           out.write(0);
          out.write(Num.num(s));
          lu=u;
        }
        lp=p;
      }
    }
    for (final int l=np + Num.len(vpre,np); np < l; np++)     out.write(vpre[np]);
    for (final int l=pp + Num.len(vpos,pp); pp < l; pp++)     out.write(vpos[pp]);
  }
  token++;
}
