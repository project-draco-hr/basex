{
  final int el=exprs.length;
  if (el == 0) {
    final TokenList tl=new TokenList();
    for (    final String s : qc.context.databases.listDBs())     tl.add(s);
    return StrSeq.get(tl).iter();
  }
  final Data data=checkData(qc);
  final String path=string(exprs.length == 1 ? Token.EMPTY : toToken(exprs[1],qc));
  final IntList il=data.resources.docs(path);
  final TokenList tl=data.resources.binaries(path);
  return new Iter(){
    final int is=il.size(), ts=tl.size();
    int ip, tp;
    @Override public Str get(    final long i){
      return i < is ? Str.get(data.text(il.get((int)i),true)) : i < is + ts ? Str.get(tl.get((int)i - is)) : null;
    }
    @Override public Str next(){
      return ip < is ? get(ip++) : tp < ts ? get(ip + tp++) : null;
    }
    @Override public long size(){
      return is + ts;
    }
  }
;
}
