{
  String arg=in.readString();
  String error=null;
  try {
    final ServerQuery qp;
    final StringBuilder info=new StringBuilder();
    if (sc == ServerCmd.QUERY) {
      final String query=arg;
      qp=new ServerQuery(query,context);
      arg=Integer.toString(id++);
      queries.put(arg,qp);
      out.print(arg);
      out.write(0);
      info.append(query);
    }
 else {
      qp=queries.get(arg);
      if (qp == null) {
        if (sc != ServerCmd.CLOSE)         throw new IOException("Unknown Query ID: " + arg);
      }
 else       if (sc == ServerCmd.BIND) {
        final String key=in.readString();
        final String val=in.readString();
        final String typ=in.readString();
        qp.bind(key,val,typ);
        info.append(key).append('=').append(val);
        if (!typ.isEmpty())         info.append(" as ").append(typ);
      }
 else       if (sc == ServerCmd.CONTEXT) {
        final String val=in.readString();
        final String typ=in.readString();
        qp.context(val,typ);
        info.append(val);
        if (!typ.isEmpty())         info.append(" as ").append(typ);
      }
 else       if (sc == ServerCmd.RESULTS) {
        qp.execute(true,out,true,false);
      }
 else       if (sc == ServerCmd.EXEC) {
        qp.execute(false,out,true,false);
      }
 else       if (sc == ServerCmd.FULL) {
        qp.execute(true,out,true,true);
      }
 else       if (sc == ServerCmd.INFO) {
        out.print(qp.info());
      }
 else       if (sc == ServerCmd.OPTIONS) {
        out.print(qp.parameters());
      }
 else       if (sc == ServerCmd.UPDATING) {
        out.print(Boolean.toString(qp.updating()));
      }
 else       if (sc == ServerCmd.CLOSE) {
        queries.remove(arg);
      }
 else       if (sc == ServerCmd.NEXT) {
        throw new Exception("Protocol for query iteration is out-of-date.");
      }
      out.write(0);
    }
    out.write(0);
    log(LogType.OK,new StringBuilder(sc.toString()).append('[').append(arg).append("] ").append(info).toString());
  }
 catch (  final Throwable ex) {
    error=Util.message(ex);
    log(LogType.REQUEST,sc + "[" + arg+ ']');
    log(LogType.ERROR,error);
    queries.remove(arg);
  }
  if (error != null) {
    out.write(0);
    out.write(1);
    out.print(error);
    out.write(0);
  }
  out.flush();
}
