{
  try {
    final String nonce=Long.toString(System.nanoTime());
    final byte[] address=socket.getInetAddress().getAddress();
    out=PrintOutput.get(socket.getOutputStream());
    out.print(Prop.NAME + ':' + nonce);
    send(true);
    in=new BufferInput(socket.getInputStream());
    final String us=in.readString(), hash=in.readString();
    final User user=context.users.get(us);
    running=user != null && Strings.md5(user.code(Algorithm.DIGEST,Code.HASH) + nonce).equals(hash);
    if (running) {
      context.user(user);
      send(true);
      context.blocker.remove(address);
      context.sessions.add(this);
    }
 else {
      if (!us.isEmpty())       log(LogType.ERROR,ACCESS_DENIED);
      context.blocker.delay(address);
      send(false);
    }
  }
 catch (  final IOException ex) {
    if (running) {
      Util.stack(ex);
      log(LogType.ERROR,Util.message(ex));
      running=false;
    }
  }
  server.remove(this);
  return running;
}
