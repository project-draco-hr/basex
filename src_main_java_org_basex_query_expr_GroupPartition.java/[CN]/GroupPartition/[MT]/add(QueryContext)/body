{
  if (!cachedVars)   cacheVars(ctx);
  final int gl=gv.length;
  final Value[] vals=new Value[gl];
  for (int i=0; i < gl; ++i) {
    final Value val=gv[i].value(ctx);
    if (val.size() > 1)     Err.or(input,QueryText.XGRP);
    vals[i]=val;
  }
  final GroupNode gn=new GroupNode(vals);
  final int h=gn.hashCode();
  final IntList ps=hashes.get(h);
  int p=-1;
  if (ps != null) {
    for (int i=0; i < ps.size(); ++i) {
      final int pp=ps.get(i);
      if (gn.eq(part.get(pp))) {
        p=pp;
        break;
      }
    }
  }
  if (p < 0) {
    if (order != null)     order.add(ctx);
    p=part.size();
    part.add(gn);
    IntList pos=hashes.get(h);
    if (pos == null) {
      pos=new IntList(1);
      hashes.add(h,pos);
    }
    pos.add(p);
  }
  final int ngl=ngv.length;
  if (ngl == 0)   return;
  if (p == items.size())   items.add(new ItemIter[ngl]);
  final ItemIter[] sq=items.get(p);
  for (int i=0; i < ngl; ++i) {
    ItemIter ir=sq[i];
    if (ir == null) {
      ir=new ItemIter();
      sq[i]=ir;
    }
 else     if (!among && order.uses(ngv[i])) {
      Err.or(input,QueryText.XPSORT);
    }
    ir.add(ngv[i].iter(ctx));
  }
}
