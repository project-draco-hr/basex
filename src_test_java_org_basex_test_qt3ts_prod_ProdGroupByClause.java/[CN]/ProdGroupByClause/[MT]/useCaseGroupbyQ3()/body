{
  final XQuery query=new XQuery("\n" + "               <result>{\n" + "                 for $sales in $sales-records-doc/*/record\n"+ "                 let $state := $stores-doc/*/store[store-number = $sales/store-number]/state,\n"+ "                   $product := $products-doc/*/product[name = $sales/product-name],\n"+ "                   $category := $product/category,\n"+ "                   $revenue := $sales/qty * $product/price\n"+ "                 group by $state, $category\n"+ "                 order by $state, $category\n"+ "                 return\n"+ "                   <group>\n"+ "                     <state>{$state}</state>\n"+ "                     <category>{$category}</category>\n"+ "                     <total-revenue>{sum($revenue)}</total-revenue>\n"+ "                   </group>\n"+ "               }</result>\n"+ "      ",ctx);
  query.bind("$products-doc",node(file("prod/GroupByClause/products.xml")));
  query.bind("$sales-records-doc",node(file("prod/GroupByClause/sales-records.xml")));
  query.bind("$stores-doc",node(file("prod/GroupByClause/stores.xml")));
  query.bind("$books-doc",node(file("prod/GroupByClause/books.xml")));
  final QT3Result res=result(query);
  result=res;
  test(assertSerialization("<result><group><state>CA</state><category>clothes</category><total-revenue>2550</total-revenue></group><group><state>CA</state><category>kitchen</category><total-revenue>6500</total-revenue></group><group><state>MA</state><category>clothes</category><total-revenue>100</total-revenue></group><group><state>MA</state><category>kitchen</category><total-revenue>14000</total-revenue></group></result>",false));
}
