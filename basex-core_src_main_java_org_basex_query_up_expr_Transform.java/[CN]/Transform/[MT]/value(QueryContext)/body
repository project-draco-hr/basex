{
  final int o=qc.resources.output.size();
  final Updates updates=qc.resources.updates();
  final ContextModifier tmp=updates.mod;
  final TransformModifier pu=new TransformModifier();
  updates.mod=pu;
  try {
    for (    final Let fo : copies) {
      final Iter ir=qc.iter(fo.expr);
      Item i=ir.next();
      if (!(i instanceof ANode) || ir.next() != null)       throw UPCOPYMULT_X.get(fo.info,fo.var.name);
      i=((ANode)i).dbCopy(qc.context.options);
      qc.set(fo.var,i,info);
      pu.addData(i.data());
    }
    final Value v=qc.value(exprs[0]);
    if (!v.isEmpty())     throw BASEX_MOD.get(info);
    updates.prepare(qc);
    updates.apply(qc);
  }
  finally {
    qc.resources.output.size(o);
    updates.mod=tmp;
  }
  return qc.value(exprs[1]);
}
