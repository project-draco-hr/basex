{
  final Updates tmp=qc.updates();
  final Updates updates=new Updates(true);
  qc.updates=updates;
  try {
    for (    final Let copy : copies) {
      final Iter ir=qc.iter(copy.expr);
      Item i=ir.next();
      if (!(i instanceof ANode))       throw UPSINGLE_X_X.get(copy.info,copy.var.name,i);
      final Item i2=ir.next();
      if (i2 != null)       throw UPSINGLE_X_X.get(copy.info,copy.var.name,ValueBuilder.concat(i,i2));
      i=((ANode)i).dbNodeCopy(qc.context.options);
      qc.set(copy.var,i,info);
      updates.addData(i.data());
    }
    final Value v=qc.value(exprs[0]);
    if (!v.isEmpty())     throw BASX_UPMODIFY.get(info);
    updates.prepare(qc);
    updates.apply(qc);
    return qc.value(exprs[1]);
  }
  finally {
    qc.updates=tmp;
  }
}
