{
  final int o=(int)ctx.output.size();
  final Updates updates=ctx.updates();
  final ContextModifier tmp=updates.mod;
  final TransformModifier pu=new TransformModifier();
  updates.mod=pu;
  try {
    for (    final Let fo : copies) {
      final Iter ir=ctx.iter(fo.expr);
      Item i=ir.next();
      if (!(i instanceof ANode) || ir.next() != null)       throw UPCOPYMULT.get(fo.info,fo.var.name);
      i=((ANode)i).dbCopy(ctx.context.options);
      ctx.set(fo.var,i,info);
      pu.addData(i.data());
    }
    final Value v=ctx.value(expr[0]);
    if (!v.isEmpty())     throw UPMODIFY.get(info);
    updates.prepare();
    updates.apply();
    return ctx.value(expr[1]);
  }
  finally {
    ctx.output.size(o);
    updates.mod=tmp;
  }
}
