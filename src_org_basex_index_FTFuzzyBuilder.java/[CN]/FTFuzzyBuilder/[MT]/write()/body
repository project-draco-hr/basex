{
  final String db=data.meta.name;
  final Prop pr=data.meta.prop;
  final DataOutput outx=new DataOutput(pr.dbfile(db,DATAFTX + 'x'));
  final DataOutput outy=new DataOutput(pr.dbfile(db,DATAFTX + 'y'));
  final DataOutput outz=new DataOutput(pr.dbfile(db,DATAFTX + 'z'));
  outx.write(isize);
  long dr=0;
  int tr=0;
  byte j=-1;
  while (++j < tree.length) {
    final FTHash hash=tree[j];
    if (hash == null)     continue;
    outx.write(j);
    outx.writeInt(tr);
    if (scm == 0)     hash.init();
 else     hash.initIter();
    while (hash.more()) {
      final int p=hash.next();
      final byte[] key=hash.key();
      for (int i=0; i < j; i++)       outy.write(key[i]);
      outy.write5(dr);
      outy.writeInt(hash.ns[p]);
      writeFTData(outz,hash.pre[p],hash.pos[p]);
      dr=outz.size();
      tr=(int)outy.size();
    }
    tree[j]=null;
  }
  tree=null;
  outx.write(j);
  outx.writeInt(tr);
  outx.close();
  outy.close();
  outz.close();
}
