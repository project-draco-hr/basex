{
  final String db=data.meta.name;
  final Prop pr=data.meta.prop;
  final DataOutput outx=new DataOutput(pr.dbfile(db,DATAFTX + 'x'));
  final DataOutput outy=new DataOutput(pr.dbfile(db,DATAFTX + 'y'));
  final DataOutput outz=new DataOutput(pr.dbfile(db,DATAFTX + 'z'));
  outx.write(isize);
  long dr=0;
  int tr=0;
  byte j=1;
  for (c=0; j < tree.length && c < ntok; j++) {
    final FTHash tre=tree[j];
    if (tre == null)     continue;
    outx.write(j);
    outx.writeInt(tr);
    if (scm == 0)     tre.init();
 else     tre.initIter();
    while (tre.more()) {
      final int p=tre.next();
      fc=0;
      final byte[] key=tre.key();
      for (int x=0; x != j; x++)       outy.write(key[x]);
      outy.write5(dr);
      final int ds=tre.ns[p];
      outy.writeInt(ds);
      final byte[] vpre=tre.pre[p];
      final byte[] vpos=tre.pos[p];
      writeFTData(outz,vpre,vpos);
      dr=outz.size();
      tr=(int)outy.size();
      c++;
    }
  }
  tree=null;
  outx.write(j);
  outx.writeInt(tr);
  outx.close();
  outy.close();
  outz.close();
}
