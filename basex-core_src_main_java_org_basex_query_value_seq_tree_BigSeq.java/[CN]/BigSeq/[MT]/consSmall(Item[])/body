{
  final int a=vals.length, b=left.length, n=a + b;
  if (n <= MAX_DIGIT) {
    return new BigSeq(concat(vals,left),middle,right,null);
  }
  if (a >= MIN_DIGIT && MIN_LEAF <= b && b <= MAX_LEAF) {
    return new BigSeq(vals,middle.cons(new LeafNode(left)),right,null);
  }
  final int mid=n / 2, move=mid - a;
  final Item[] newLeft=slice(vals,0,mid);
  System.arraycopy(left,0,newLeft,a,move);
  final LeafNode leaf=new LeafNode(slice(left,move,b));
  return new BigSeq(newLeft,middle.cons(leaf),right,null);
}
