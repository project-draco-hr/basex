{
  if (scanner.type == Type.L_BR_CLOSE) {
    scanner.more();
    final byte[] tag=consumeToken(Type.TAGNAME);
    skipSpace();
    if (tags.empty())     throw new BuildException(AFTERROOT,det());
    final byte[] open=tags.pop();
    if (!eq(open,tag))     throw new BuildException(CLOSINGTAG,det(),tag,open);
    builder.endElem();
    return consume(Type.R_BR);
  }
  consume(Type.L_BR);
  atts.reset();
  final byte[] tag=consumeToken(Type.TAGNAME);
  skipSpace();
  while (scanner.type != Type.R_BR && scanner.type != Type.CLOSE_R_BR) {
    final byte[] attName=consumeToken(Type.ATTNAME);
    skipSpace();
    consume(Type.EQ);
    skipSpace();
    consume(Type.QUOTE);
    byte[] attValue=EMPTY;
    if (scanner.type == Type.ATTVALUE) {
      attValue=scanner.token.finish();
      scanner.more();
    }
    consume(Type.QUOTE);
    if (startsWith(attName,XMLNSC)) {
      builder.startNS(local(attName),attValue);
    }
 else     if (eq(attName,XMLNS)) {
      builder.startNS(EMPTY,attValue);
    }
 else {
      atts.add(attName,attValue);
    }
    if (scanner.type != Type.R_BR && scanner.type != Type.CLOSE_R_BR) {
      consume(Type.WS);
    }
  }
  if (scanner.type == Type.CLOSE_R_BR) {
    builder.emptyElem(tag,atts);
    return scanner.more();
  }
  builder.startElem(tag,atts);
  tags.add(tag);
  return consume(Type.R_BR);
}
