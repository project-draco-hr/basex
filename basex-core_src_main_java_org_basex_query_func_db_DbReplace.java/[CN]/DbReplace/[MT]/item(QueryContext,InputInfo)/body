{
  final Data data=checkData(qc);
  final String path=path(1,qc);
  final Item item=toItem(exprs[2],qc);
  final Options opts=toOptions(3,Q_OPTIONS,new Options(),qc);
  final Updates updates=qc.resources.updates();
  final IntList docs=data.resources.docs(path);
  final IOFile bin=data.meta.binary(path);
  if (bin == null || bin.isDir())   throw BXDB_REPLACE_X.get(info,path);
  if (item instanceof Bin) {
    updates.add(new DBStore(data,path,item,info),qc);
  }
 else {
    if (bin.exists())     updates.add(new DBDelete(data,path,info),qc);
    updates.add(new DBAdd(data,checkInput(item,token(path)),opts,qc,info),qc);
  }
  final int ds=docs.size();
  for (int d=0; d < ds; d++)   updates.add(new DeleteNode(docs.get(d),data,info),qc);
  return null;
}
