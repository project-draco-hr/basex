{
  final CountDownLatch latch=new CountDownLatch(Math.max(context.soptions.get(StaticOptions.PARALLEL),1));
  final LockTester[] testers=(LockTester[])Array.newInstance(LockTester.class,(int)(latch.getCount() + 1));
  final int tl=testers.length;
  for (int t=0; t < tl - 1; t++) {
    testers[t]=new LockTester(null,objects,NONE,latch);
    testers[t].start();
  }
  assertTrue("Couldn't start maximum allowed number of parallel transactions!",latch.await(WAIT,TimeUnit.MILLISECONDS));
  final CountDownLatch latch2=new CountDownLatch(1);
  testers[tl - 1]=new LockTester(null,objects,NONE,latch2);
  testers[tl - 1].start();
  assertFalse("Shouldn't be able to start another parallel transaction yet!",latch2.await(WAIT,TimeUnit.MILLISECONDS));
  testers[0].release();
  assertTrue("New transaction should have started!",latch2.await(WAIT,TimeUnit.MILLISECONDS));
  for (int t=1; t < tl; t++)   testers[t].release();
}
