{
  final Node<N,E>[] res;
  final Node<Node<N,E>,E> node;
  if (pos < l) {
    res=child0.remove(null,child1,pos);
    node=res[1] == null ? new InnerNode2<>(res[2],child2) : new InnerNode3<>(res[1],res[2],child2);
  }
 else   if (pos < m) {
    res=child1.remove(child0,child2,pos - l);
    node=res[1] == null ? new InnerNode2<>(res[0],res[2]) : new InnerNode3<>(res[0],res[1],res[2]);
  }
 else {
    res=child2.remove(child1,null,pos - m);
    node=res[1] == null ? new InnerNode2<>(child0,res[0]) : new InnerNode3<>(child0,res[0],res[1]);
  }
  @SuppressWarnings("unchecked") final Node<Node<N,E>,E>[] out=(Node<Node<N,E>,E>[])res;
  out[0]=left;
  out[1]=node;
  out[2]=right;
  return out;
}
