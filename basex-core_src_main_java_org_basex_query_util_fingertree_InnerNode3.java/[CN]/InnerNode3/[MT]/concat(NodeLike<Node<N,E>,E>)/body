{
  if (other instanceof Node) {
    @SuppressWarnings("unchecked") final NodeLike<Node<N,E>,E>[] out=new NodeLike[]{this,other};
    return out;
  }
  final NodeLike<N,E> sub=((PartialInnerNode<N,E>)other).sub;
  final NodeLike<N,E>[] merged=child2.concat(sub);
  final Node<N,E> a=(Node<N,E>)merged[0], b=(Node<N,E>)merged[1];
  @SuppressWarnings("unchecked") final NodeLike<Node<N,E>,E>[] out=(NodeLike<Node<N,E>,E>[])merged;
  if (b == null) {
    out[0]=new InnerNode3<>(child0,child1,a);
  }
 else {
    out[0]=new InnerNode2<>(child0,child1);
    out[1]=new InnerNode2<>(a,b);
  }
  return out;
}
