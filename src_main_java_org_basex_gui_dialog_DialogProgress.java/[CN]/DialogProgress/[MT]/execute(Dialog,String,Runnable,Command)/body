{
  final GUI gui=dialog.gui;
  for (  final Command cmd : cmds) {
    final boolean newData=cmd.newData(gui.context);
    if (newData)     gui.notify.init();
    final DialogProgress wait;
    if (dialog.isVisible()) {
      wait=new DialogProgress(dialog,title,cmd);
    }
 else {
      wait=new DialogProgress(gui,title,cmd);
    }
    new Thread(){
      @Override public void run(){
        final Performance perf=new Performance();
        gui.updating=cmd.updating(gui.context);
        final boolean ok=cmd.run(gui.context);
        gui.updating=false;
        final String info=cmd.info();
        final String time=perf.toString();
        gui.info.setInfo(info,cmd,time,ok);
        gui.info.reset();
        gui.status.setText(Util.info(TIME_NEEDED_X,time));
        wait.dispose();
        if (!ok)         Dialog.error(gui,info.equals(INTERRUPTED) ? COMMAND_CANCELED : info);
      }
    }
.start();
    wait.setVisible(true);
    if (newData)     gui.notify.init();
 else     if (cmd.updating(gui.context))     gui.notify.update();
  }
  dialog.setEnabled(true);
  dialog.action(dialog);
  if (post != null)   post.run();
}
