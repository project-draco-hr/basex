{
  super(ii);
  final byte[] pic=p;
  int cp=picture(pic,df);
  if (cp < pic.length)   cp=format(pic,cp);
  if (cp < pic.length) {
    if (ch(pic,cp) != ',')     PICCOMP.thrw(info,pic);
    pres=concat(pres,substring(pic,cp));
  }
  final int w=lastIndexOf(pres,',');
  if (w != -1) {
    final byte[] wd=substring(pres,w + 1);
    pres=substring(pres,0,w);
    final Matcher m=WIDTH.matcher(string(wd));
    if (!m.find())     PICDATE.thrw(ii,wd);
    int i=toInt(m.group(1));
    if (i != Integer.MIN_VALUE)     min=i;
    final String mc=m.group(3);
    i=mc != null ? toInt(mc) : Integer.MIN_VALUE;
    if (i != Integer.MIN_VALUE)     max=i;
  }
  if (pres.length == 0)   pres=ONE;
  cs=cl(pres,0) < pres.length ? Case.STANDARD : (ch(pres,0) & ' ') == 0 ? Case.UPPER : Case.LOWER;
  primary=lc(pres);
  if (digit == -1)   digit=ch(primary,0);
}
