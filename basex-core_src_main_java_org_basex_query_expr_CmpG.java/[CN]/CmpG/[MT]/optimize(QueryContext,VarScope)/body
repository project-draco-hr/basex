{
  if (swap()) {
    op=op.swap();
    qc.compInfo(OPTSWAP,this);
  }
  final Expr e1=exprs[0], e2=exprs[1];
  final SeqType st1=e1.seqType(), st2=e2.seqType();
  atomic=st1.zeroOrOne() && !st1.mayBeArray() && st2.zeroOrOne()&& !st2.mayBeArray();
  Expr e=this;
  if (oneIsEmpty()) {
    e=optPre(Bln.FALSE,qc);
  }
 else   if (allAreValues()) {
    return preEval(qc);
  }
 else   if (e1.isFunction(Function.COUNT)) {
    e=compCount(op.op);
    if (e != this)     qc.compInfo(e instanceof Bln ? OPTPRE : OPTWRITE,this);
  }
 else   if (e1.isFunction(Function.POSITION)) {
    if (e2 instanceof RangeSeq && op.op == OpV.EQ) {
      final long p1=((Value)e2).itemAt(0).itr(info), p2=p1 + e2.size() - 1;
      e=Pos.get(p1,p2,info);
    }
 else {
      e=Pos.get(op.op,e2,e,info);
    }
    if (e != this)     qc.compInfo(OPTWRITE,this);
  }
 else   if (st1.eq(SeqType.BLN) && (op == OpG.EQ && e2 == Bln.FALSE || op == OpG.NE && e2 == Bln.TRUE)) {
    e=Function.NOT.get(null,info,e1);
    qc.compInfo(OPTWRITE,this);
  }
 else {
    e=CmpR.get(this);
    if (e == this)     e=CmpSR.get(this);
    if (e != this)     qc.compInfo(OPTWRITE,this);
  }
  if (e == this && atomic)   qc.compInfo(OPTATOMIC,this);
  return e;
}
