{
  final Comparator<Item> cmp=getComp(0,ctx);
  final long k=checkItr(expr[1],ctx);
  if (k < 1 || k > Integer.MAX_VALUE / 2)   return Empty.SEQ;
  final Iter iter=expr[2].iter(ctx);
  final MinHeap<Item,Item> heap=new MinHeap<Item,Item>((int)k,cmp);
  try {
    for (Item it; (it=iter.next()) != null; ) {
      heap.insert(it,it);
      if (heap.size() > k)       heap.removeMin();
    }
  }
 catch (  final QueryError e) {
    throw e.wrapped();
  }
  final Item[] arr=new Item[heap.size()];
  for (int i=arr.length; --i >= 0; )   arr[i]=heap.removeMin();
  return Seq.get(arr,arr.length);
}
