{
  final Item it=checkItem(expr[0],ctx);
  final ByteList bl=new ByteList();
  final InputStream is=it.input(input);
  try {
    try {
      for (int ch; (ch=is.read()) != -1; )       bl.add(ch);
    }
  finally {
      is.close();
    }
  }
 catch (  final IOException ex) {
    CONVERT.thrw(input,ex);
  }
  return new ValueIter(){
    final int bs=bl.size();
    int pos;
    @Override public Value value(){
      final long[] tmp=new long[bs - pos];
      for (int i=0; i < tmp.length; i++)       tmp[i]=bl.get(pos + i);
      return IntSeq.get(tmp,AtomType.BYT);
    }
    @Override public Item get(    final long i){
      return Int.get(bl.get((int)i),AtomType.BYT);
    }
    @Override public Item next(){
      return pos < size() ? get(pos++) : null;
    }
    @Override public boolean reset(){
      pos=0;
      return true;
    }
    @Override public long size(){
      return bs;
    }
  }
;
}
