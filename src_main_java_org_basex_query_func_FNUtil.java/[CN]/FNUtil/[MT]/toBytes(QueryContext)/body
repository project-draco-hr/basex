{
  final byte[] bytes=checkBin(expr[0],ctx);
  return new ValueIter(){
    final int bl=bytes.length;
    int pos;
    @Override public Value value(){
      final long[] tmp=new long[bl - pos];
      for (int i=0; i < tmp.length; i++)       tmp[i]=bytes[pos + i];
      return ItrSeq.get(tmp,AtomType.BYT);
    }
    @Override public Item get(    final long i){
      return Int.get(bytes[(int)i],AtomType.BYT);
    }
    @Override public Item next(){
      return pos < size() ? get(pos++) : null;
    }
    @Override public boolean reset(){
      pos=0;
      return true;
    }
    @Override public long size(){
      return bl;
    }
  }
;
}
