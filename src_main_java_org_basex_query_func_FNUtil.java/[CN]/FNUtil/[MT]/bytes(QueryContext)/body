{
  final byte[] bin=((B64)checkType(expr[0].item(ctx,input),AtomType.B64)).toJava();
  return new ValueIter(){
    int pos;
    @Override public Item next(){
      return pos < bin.length ? get(pos++) : null;
    }
    @Override public long size(){
      return bin.length;
    }
    @Override public boolean reset(){
      pos=0;
      return true;
    }
    @Override public Item get(    final long i){
      return new Itr(bin[(int)i],AtomType.BYT);
    }
    @Override public Value finish(){
      final Item[] bs=new Item[bin.length];
      for (int i=bs.length; --i >= 0; )       bs[i]=new Itr(bin[i],AtomType.BYT);
      return Seq.get(bs,bs.length);
    }
  }
;
}
