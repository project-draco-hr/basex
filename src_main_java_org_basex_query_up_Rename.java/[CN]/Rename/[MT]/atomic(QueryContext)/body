{
  final Iter t=expr[0].iter(ctx);
  final Item i=t.next();
  if (i == null)   Err.or(input,UPSEQEMP,Main.name(this));
  if (t.next() != null)   Err.or(input,UPWRTRGTYP);
  CFrag ex=null;
  if (i.type == Type.ELM) {
    ex=new CElem(input,expr[1],new Expr[0],new Atts());
  }
 else   if (i.type == Type.ATT) {
    ex=new CAttr(input,expr[1],new Expr[0],false);
  }
 else   if (i.type == Type.PI) {
    ex=new CPI(input,expr[1],Seq.EMPTY);
  }
 else {
    Err.or(input,UPWRTRGTYP);
  }
  final QNm rename=ex.atomic(ctx).qname();
  final Nod targ=(Nod)i;
  final Nod test=i.type == Type.ELM ? targ : i.type == Type.ATT ? targ.parent() : null;
  if (test != null) {
    final byte[] uri=test.uri(rename.pref(),ctx);
    if (uri != null && !eq(rename.uri.atom(),uri))     Err.or(input,UPNSCONFL);
  }
  ctx.updates.add(new RenamePrimitive(input,targ,rename),ctx);
  return Seq.EMPTY;
}
