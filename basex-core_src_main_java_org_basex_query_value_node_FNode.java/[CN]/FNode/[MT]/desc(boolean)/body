{
  return new BasicNodeIter(){
    private final Stack<BasicNodeIter> iters=new Stack<>();
    private ANode last;
    @Override public ANode next(){
      final BasicNodeIter iter=last != null ? last.children() : self ? self() : children();
      last=iter.next();
      if (last == null) {
        while (!iters.isEmpty()) {
          last=iters.peek().next();
          if (last != null)           break;
          iters.pop();
        }
      }
 else {
        iters.add(iter);
      }
      return last;
    }
  }
;
}
