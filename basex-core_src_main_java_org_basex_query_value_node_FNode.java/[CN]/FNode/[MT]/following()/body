{
  return new BasicNodeIter(){
    private BasicNodeIter iter;
    @Override public ANode next(){
      if (iter == null) {
        final ANodeList list=new ANodeList();
        ANode node=FNode.this, par=node.parent();
        while (par != null) {
          final BasicNodeIter i=par.children();
          for (ANode n; node.type != NodeType.ATT && (n=i.next()) != null && !n.is(node); )           ;
          for (ANode n; (n=i.next()) != null; ) {
            list.add(n.finish());
            addDesc(n.children(),list);
          }
          node=par;
          par=par.parent();
        }
        iter=list.iter();
      }
      return iter.next();
    }
  }
;
}
