{
  in=new BufferedInputStream(new FileInputStream(f));
  int major, minor, hflag, size, sync1, sync2, sync3, sync4;
  boolean exthea=false;
  boolean experi=false;
  boolean footer=false;
  boolean found=false;
  try {
    final long fileLen=f.length();
    file=f;
    final int first=read();
    if (first == 0x49 && read() == 0x44 && read() == 0x33 && (major=read()) < 0xFF && (minor=read()) < 0xFF && (hflag=read()) < 0xFF && (sync1=read()) < 0x80 && (sync2=read()) < 0x80 && (sync3=read()) < 0x80 && (sync4=read()) < 0x80) {
      found=true;
      builder.startElem(AUDIO,atts.set(TYPE,TYPEMP3));
      exthea=(hflag & 0x40) != 0;
      experi=(hflag & 0x20) != 0;
      footer=(hflag & 0x10) != 0;
      size=sync1 << 21 | sync2 << 14 | sync3 << 7 | sync4;
      final List<byte[]> frames=getID3V2(size);
      while (read() != 0xFF)       ;
      getTechInfo(builder,size);
      atts.reset();
      atts.add(ID3VERS,token("2." + major + '.'+ minor));
      atts.add(ID3FLAG_EXTHEA,token(exthea));
      atts.add(ID3FLAG_EXPERI,token(experi));
      atts.add(ID3FLAG_FOOTER,token(footer));
      builder.startElem(ID3,atts);
      for (int i=0; i < frames.size() - 1; i+=2) {
        builder.nodeAndText(frames.get(i),atts.reset(),frames.get(i + 1));
      }
      builder.endElem(ID3);
    }
 else     if (fileLen > 0x80) {
      found=true;
      builder.startElem(AUDIO,atts.set(TYPE,TYPEMP3));
      if (first != 0xFF)       while (read() != 0xFF)       ;
      getTechInfo(builder,0x80);
      in.close();
      final RandomAccessFile raf=new RandomAccessFile(f,"r");
      raf.seek(fileLen - 0x80);
      raf.read(id3v1);
      raf.close();
      if (startsWith(id3v1,HEADERID3V1)) {
        final byte[] title=getTag(id3v1,3,30);
        final byte[] artist=getTag(id3v1,33,30);
        final byte[] album=getTag(id3v1,63,30);
        final byte[] year=getTag(id3v1,93,4);
        final byte[] comment=getTag(id3v1,97,30);
        builder.startElem(ID3,atts.set(ID3VERS,new byte[]{'1'}));
        add(builder,ID3TITLE,title);
        add(builder,ID3ARTIST,artist);
        add(builder,ID3ALBUM,album);
        add(builder,ID3YEAR,year);
        add(builder,ID3COMMENT,comment);
        builder.endElem(ID3);
      }
    }
 else {
      Main.debug(ID3INVALID,file.getName());
    }
  }
 catch (  final MetaDataException ex) {
    Main.debug(ex);
  }
  if (found)   builder.endElem(AUDIO);
}
