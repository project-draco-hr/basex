{
  final TokenList tl=new TokenList();
  ANode n=checkNode(it);
  while (n.parent() != null) {
    int i=1;
    final TokenBuilder tb=new TokenBuilder();
    if (n.type == NodeType.ATT) {
      tb.add('@');
      final QNm qnm=n.qname();
      final byte[] uri=qnm.uri();
      if (uri.length != 0)       tb.add('"').add(uri).add("\":");
      tb.add(qnm.local());
    }
 else     if (n.type == NodeType.ELM) {
      final QNm qnm=n.qname();
      final AxisIter ai=n.precedingSibling();
      for (ANode fs; (fs=ai.next()) != null; )       if (fs.qname().eq(qnm))       i++;
      tb.addExt("\"%\":%[%]",qnm.uri(),qnm.local(),i);
    }
 else     if (n.type == NodeType.COM || n.type == NodeType.TXT) {
      final AxisIter ai=n.precedingSibling();
      for (ANode fs; (fs=ai.next()) != null; )       if (fs.type == n.type)       i++;
      tb.addExt(n.type() + "[%]",i);
    }
 else     if (n.type == NodeType.PI) {
      final QNm qnm=n.qname();
      final AxisIter ai=n.precedingSibling();
      for (ANode fs; (fs=ai.next()) != null; ) {
        if (fs.type == n.type && fs.qname().eq(qnm))         i++;
      }
      tb.addExt("%(\"%\")[%]",n.type.string(),qnm.local(),i);
    }
    tl.add(tb.finish());
    n=n.parent();
  }
  if (n.type != NodeType.DOC)   IDDOC.thrw(input);
  final TokenBuilder tb=new TokenBuilder();
  for (int i=tl.size() - 1; i >= 0; --i)   tb.add('/').add(tl.get(i));
  return Str.get(tb.isEmpty() ? Token.SLASH : tb.finish());
}
