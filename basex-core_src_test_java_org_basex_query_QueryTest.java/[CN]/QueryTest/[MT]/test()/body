{
  final StringBuilder sb=new StringBuilder();
  int fail=0;
  for (  final Object[] qu : queries) {
    final boolean correct=qu.length == 3;
    final String query=qu[correct ? 2 : 1].toString();
    final Value cmp=correct ? (Value)qu[1] : null;
    final QueryProcessor qp=new QueryProcessor(query,context);
    try {
      final Value val=qp.value();
      if (!correct || !Compare.deep(val,cmp,null)) {
        sb.append("[" + qu[0] + "] "+ query);
        String s=correct && cmp.size() != 1 ? "#" + cmp.size() : "";
        sb.append("\n[E" + s + "] ");
        if (correct) {
          final String cp=cmp.toString();
          sb.append('\'');
          sb.append(cp.length() > 1000 ? cp.substring(0,1000) + "..." : cp);
          sb.append('\'');
        }
 else {
          sb.append("error");
        }
        final TokenBuilder types=new TokenBuilder();
        for (        final Item it : val)         types.add(it.type.toString()).add(" ");
        s=val.size() == 1 ? "" : "#" + val.size();
        sb.append("\n[F" + s + "] '"+ val+ "', "+ types+ details()+ '\n');
        ++fail;
      }
    }
 catch (    final Exception ex) {
      final String msg=ex.getMessage();
      if (correct || msg == null || msg.contains("mailman")) {
        final String cp=correct && cmp.data() != null ? cmp.toString() : "()";
        sb.append("[" + qu[0] + "] "+ query+ "\n[E] "+ cp+ "\n[F] "+ (msg == null ? Util.className(ex) : msg.replaceAll("\r\n?|\n"," "))+ ' '+ details()+ '\n');
        ex.printStackTrace();
        ++fail;
      }
    }
 finally {
      qp.close();
    }
  }
  if (fail != 0)   fail(fail + " Errors. [E] = expected, [F] = found:\n" + sb.toString().trim());
}
