{
  boolean ok=true;
  for (int a=0; a < args.length; a++) {
    ok=false;
    if (args[a].startsWith("-")) {
      for (int i=1; i < args[a].length(); i++) {
        final char c=args[a].charAt(i);
        if (c == 'p') {
          if (++i == args[a].length()) {
            a++;
            i=0;
          }
          if (a == args.length)           break;
          final int p=Token.toInt(args[a].substring(i));
          if (p <= 0) {
            BaseX.errln(SERVERPORT + args[a].substring(i));
            break;
          }
          Prop.port=p;
          i=args[a].length();
          ok=true;
        }
 else         if (c == 'd') {
          Prop.debug=true;
          ok=true;
        }
 else         if (c == 'v') {
          verbose=true;
          ok=true;
        }
 else {
          break;
        }
      }
    }
 else     if (args[a].equals("stop")) {
      try {
        new ClientProcess("localhost",Prop.port,new Exit(),false).execute(null);
        BaseX.outln(SERVERSTOPPED);
      }
 catch (      final Exception ex) {
        if (ex instanceof IOException)         BaseX.errln(SERVERERR);
 else         BaseX.errln(ex.getMessage());
        BaseX.debug(ex);
      }
      return false;
    }
    if (!ok)     break;
  }
  if (!ok)   BaseX.errln(SERVERINFO);
  return ok;
}
