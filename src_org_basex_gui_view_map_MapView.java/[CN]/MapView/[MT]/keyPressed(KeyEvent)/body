{
  if (working)   return;
  super.keyPressed(e);
  if (mainRects == null || e.isControlDown() || e.isAltDown())   return;
  final int key=e.getKeyCode();
  final boolean shift=e.isShiftDown();
  final Context context=GUI.context;
  final Data data=context.data();
  final int size=data.size;
  final Nodes current=context.current();
  if (key == KeyEvent.VK_R) {
    final Random rnd=new Random();
    int pre=0;
    do {
      pre=rnd.nextInt(size);
    }
 while (data.kind(pre) != Data.ELEM || !ViewData.isLeaf(data,pre));
    ViewData.focusedPre=pre;
    notifySwitch(new Nodes(ViewData.focusedPre,data));
  }
 else   if (key == KeyEvent.VK_N || key == KeyEvent.VK_B) {
    int pre=(current.pre[0] + 1) % size;
    while (data.kind(pre) != Data.ELEM || !ViewData.isLeaf(data,pre))     pre=(pre + 1) % size;
    notifySwitch(new Nodes(pre,data));
  }
 else   if (key == KeyEvent.VK_P || key == KeyEvent.VK_Z) {
    int pre=(current.pre[0] == 0 ? size : current.pre[0]) - 1;
    while (data.kind(pre) != Data.ELEM || !ViewData.isLeaf(data,pre))     pre=(pre == 0 ? size : pre) - 1;
    notifySwitch(new Nodes(pre,data));
  }
 else   if (key == KeyEvent.VK_S && !slide) {
    slide=true;
    new Thread(){
      @Override public void run(){
        while (slide) {
          int pre=context.current().pre[0];
          if (slideForward) {
            pre=(pre + 1) % size;
            while (!ViewData.isLeaf(data,pre))             pre=(pre + 1) % size;
          }
 else {
            pre=(pre == 0 ? size : pre) - 1;
            while (!ViewData.isLeaf(data,pre))             pre=(pre == 0 ? size : pre) - 1;
          }
          notifySwitch(new Nodes(pre,data));
          Performance.sleep(slideSpeed);
        }
      }
    }
.start();
  }
  final boolean cursor=key == KeyEvent.VK_UP || key == KeyEvent.VK_DOWN || key == KeyEvent.VK_LEFT || key == KeyEvent.VK_RIGHT;
  if (!cursor)   return;
  if (focusedRect == null)   focusedRect=mainRects.get(0).clone();
  int o=GUIProp.fontsize + 4;
  if (key == KeyEvent.VK_UP) {
    mouseY=focusedRect.y + (shift ? focusedRect.h - GUIProp.fontsize : 0) - 1;
    if (shift)     mouseX=focusedRect.x + (focusedRect.w >> 1);
  }
 else   if (key == KeyEvent.VK_DOWN) {
    mouseY=focusedRect.y + (shift ? o : focusedRect.h + 1);
    if (shift)     mouseX=focusedRect.x + (focusedRect.w >> 1);
  }
 else   if (key == KeyEvent.VK_LEFT) {
    mouseX=focusedRect.x + (shift ? focusedRect.w - GUIProp.fontsize : 0) - 1;
    if (shift)     mouseY=focusedRect.y + (focusedRect.h >> 1);
  }
 else   if (key == KeyEvent.VK_RIGHT) {
    mouseX=focusedRect.x + (shift ? o : focusedRect.w + 1);
    if (shift)     mouseY=focusedRect.y + (focusedRect.h >> 1);
  }
  o=mainRects.get(0).w == getWidth() ? (o >> 1) + 1 : 0;
  mouseX=Math.max(o,Math.min(getWidth() - o - 1,mouseX));
  mouseY=Math.max(o << 1,Math.min(getHeight() - o - 1,mouseY));
  if (focus())   repaint();
}
