{
  super.keyPressed(e);
  if (gui.updating)   return;
  if (mainRects == null || e.isControlDown() || e.isAltDown())   return;
  final int key=e.getKeyCode();
  final boolean shift=e.isShiftDown();
  final Context context=gui.context;
  final Data data=context.data();
  final int size=data.meta.size;
  final Nodes current=context.current();
  if (key == KeyEvent.VK_R) {
    final Random rnd=new Random();
    int pre=0;
    do {
      pre=rnd.nextInt(size);
    }
 while (data.kind(pre) != Data.ELEM || !ViewData.isLeaf(data,pre));
    gui.focused=pre;
    gui.notify.jump(new Nodes(gui.focused,data));
  }
 else   if (key == KeyEvent.VK_N || key == KeyEvent.VK_B) {
    int pre=(current.nodes[0] + 1) % size;
    while (data.kind(pre) != Data.ELEM || !ViewData.isLeaf(data,pre))     pre=(pre + 1) % size;
    gui.notify.jump(new Nodes(pre,data));
  }
 else   if (key == KeyEvent.VK_P || key == KeyEvent.VK_Z) {
    int pre=(current.nodes[0] == 0 ? size : current.nodes[0]) - 1;
    while (data.kind(pre) != Data.ELEM || !ViewData.isLeaf(data,pre))     pre=(pre == 0 ? size : pre) - 1;
    gui.notify.jump(new Nodes(pre,data));
  }
 else   if (key == KeyEvent.VK_S && !slide) {
    slide=true;
    new Thread(){
      @Override public void run(){
        while (slide) {
          int pre=context.current().nodes[0];
          if (slideForward) {
            pre=(pre + 1) % size;
            while (!ViewData.isLeaf(data,pre))             pre=(pre + 1) % size;
          }
 else {
            pre=(pre == 0 ? size : pre) - 1;
            while (!ViewData.isLeaf(data,pre))             pre=(pre == 0 ? size : pre) - 1;
          }
          gui.notify.jump(new Nodes(pre,data));
          Performance.sleep(slideSpeed);
        }
      }
    }
.start();
  }
  final boolean cursor=key == KeyEvent.VK_UP || key == KeyEvent.VK_DOWN || key == KeyEvent.VK_LEFT || key == KeyEvent.VK_RIGHT;
  if (!cursor)   return;
  if (focused == null)   focused=mainRects.get(0).clone();
  int o=GUIProp.fontsize + 4;
  if (key == KeyEvent.VK_UP) {
    mouseY=focused.y + (shift ? focused.h - GUIProp.fontsize : 0) - 1;
    if (shift)     mouseX=focused.x + (focused.w >> 1);
  }
 else   if (key == KeyEvent.VK_DOWN) {
    mouseY=focused.y + (shift ? o : focused.h + 1);
    if (shift)     mouseX=focused.x + (focused.w >> 1);
  }
 else   if (key == KeyEvent.VK_LEFT) {
    mouseX=focused.x + (shift ? focused.w - GUIProp.fontsize : 0) - 1;
    if (shift)     mouseY=focused.y + (focused.h >> 1);
  }
 else   if (key == KeyEvent.VK_RIGHT) {
    mouseX=focused.x + (shift ? o : focused.w + 1);
    if (shift)     mouseY=focused.y + (focused.h >> 1);
  }
  o=mainRects.get(0).w == getWidth() ? (o >> 1) + 1 : 0;
  mouseX=Math.max(o,Math.min(getWidth() - o - 1,mouseX));
  mouseY=Math.max(o << 1,Math.min(getHeight() - o - 1,mouseY));
  if (focus())   repaint();
}
