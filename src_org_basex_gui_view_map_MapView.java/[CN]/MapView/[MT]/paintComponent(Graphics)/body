{
  final Data data=gui.context.data;
  final GUIProp gprop=gui.prop;
  if (data == null || mainRects == null || mainRects.size == 0) {
    super.paintComponent(g);
    refreshInit();
    return;
  }
  gui.painting=true;
  final boolean in=zoomStep > 0 && zoomIn;
  final Image img1=in ? zoomMap : mainMap;
  final Image img2=in ? mainMap : zoomMap;
  if (zoomStep > 0) {
    drawImage(g,img1,-zoomStep);
    drawImage(g,img2,zoomStep);
  }
 else {
    drawImage(g,mainMap,zoomStep);
  }
  if (focused != null && focused.pre >= data.meta.size)   focused=null;
  if (focused == null || mainRects.size == 1 && focused == mainRects.get(0)) {
    gui.painting=false;
    if (focused == null || !focused.thumb)     return;
  }
  if (gprop.num(GUIProp.MAPOFFSETS) == 0) {
    g.setColor(COLORS[32]);
    int pre=mainRects.size;
    int par=ViewData.parent(data,focused.pre);
    while (--pre >= 0) {
      final MapRect rect=mainRects.get(pre);
      if (rect.pre == par) {
        final int x=rect.x;
        final int y=rect.y;
        final int w=rect.w;
        final int h=rect.h;
        g.drawRect(x,y,w,h);
        g.drawRect(x - 1,y - 1,w + 2,h + 2);
        par=ViewData.parent(data,par);
      }
    }
  }
  if (selBox != null) {
    g.setColor(colormark3);
    g.drawRect(selBox.x,selBox.y,selBox.w,selBox.h);
    g.drawRect(selBox.x - 1,selBox.y - 1,selBox.w + 2,selBox.h + 2);
  }
 else {
    final int x=focused.x;
    final int y=focused.y;
    final int w=focused.w;
    final int h=focused.h;
    g.setColor(color6);
    g.drawRect(x,y,w,h);
    g.drawRect(x + 1,y + 1,w - 2,h - 2);
    g.setFont(font);
    smooth(g);
    if (data.kind(focused.pre) == Data.ELEM) {
      String tt=Token.string(ViewData.tag(gprop,data,focused.pre));
      if (tt.length() > 32)       tt=tt.substring(0,30) + DOTS;
      BaseXLayout.drawTooltip(g,tt,x,y,getWidth(),focused.level + 5);
    }
    if (focused.thumb) {
      focused.x+=3;
      focused.w-=3;
      final byte[] text=ViewData.content(data,focused.pre,false);
      final TokenList tl=MapRenderer.calculateToolTip(focused,Tokenizer.getInfo(text),mouseX,mouseY,getWidth(),g);
      final MapRect mr=new MapRect(getX(),getY(),getWidth(),getHeight());
      MapRenderer.drawToolTip(g,mouseX,mouseY,mr,tl,gprop.num(GUIProp.FONTSIZE));
      focused.x-=3;
      focused.w+=3;
    }
  }
  gui.painting=false;
}
