{
  byte[] pm=in.length != 0 ? mod() : def;
  if (pm == null)   return false;
  if (date) {
    final int w=lastIndexOf(pm,',');
    if (w != -1) {
      final byte[] wd=substring(pm,w + 1);
      pm=substring(pm,0,w);
      final Matcher match=WIDTH.matcher(string(wd));
      if (!match.find())       return false;
      int m=toInt(match.group(1));
      if (m != Integer.MIN_VALUE)       min=m;
      final String mc=match.group(3);
      m=mc != null ? toInt(mc) : Integer.MIN_VALUE;
      if (m != Integer.MIN_VALUE)       max=m;
    }
  }
  cs=pm.length > cl(pm,0) ? Case.STANDARD : (ch(pm,0) & ' ') != 0 ? Case.LOWER : Case.UPPER;
  pres=lc(pm);
  return true;
}
