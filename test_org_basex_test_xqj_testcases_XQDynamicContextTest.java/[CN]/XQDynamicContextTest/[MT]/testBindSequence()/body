{
  XQPreparedExpression xqpe;
  final XQExpression xqe=xqc.createExpression();
  final XQSequence xqs=xqc.createSequence(xqe.executeQuery("'Hello world!'"));
  xqe.close();
  xqs.beforeFirst();
  xqpe=xqc.prepareExpression("declare variable $v external; $v");
  xqpe.close();
  try {
    xqpe.bindSequence(new QName("v"),xqs);
    fail("A-XQDC-1.1: bindSequence() throws an XQException when the dynamic context is in closed state.");
  }
 catch (  final XQException e) {
  }
  xqs.beforeFirst();
  xqpe=xqc.prepareExpression("declare variable $v external; $v");
  try {
    xqpe.bindSequence(null,xqs);
    fail("A-XQDC-1.2: null argument is invalid and throws an XQException.");
  }
 catch (  final XQException e) {
  }
  xqpe.close();
  xqs.beforeFirst();
  xqpe=xqc.prepareExpression("declare variable $v external; $v");
  try {
    xqpe.bindSequence(new QName("foo"),xqs);
    fail("A-XQDC-1.5: The bound variable must be declared external in the prepared expression.");
  }
 catch (  final XQException e) {
  }
  xqpe.close();
  xqs.beforeFirst();
  xqpe=xqc.prepareExpression("declare variable $v as xs:decimal external; $v");
  try {
    xqpe.bindSequence(new QName("v"),xqs);
    xqpe.executeQuery().getSequenceAsString(null);
    fail("A-XQDC-1.6: The dynamic type of the bound value is not compatible with the static type of the variable and must fail.");
  }
 catch (  final XQException e) {
  }
  xqpe.close();
  xqs.beforeFirst();
  xqpe=xqc.prepareExpression("declare variable $v external; $v");
  try {
    xqpe.bindSequence(new QName("v"),xqs);
  }
 catch (  final XQException e) {
    fail("A-XQDC-1.7: bindSequence() failed with message: " + e.getMessage());
  }
  final XQSequence xqs2=xqpe.executeQuery();
  xqs2.next();
  assertEquals("A-XQDC-1.7: Successful bindXXX.","Hello world!",xqs2.getAtomicValue());
  xqpe.close();
  xqs.close();
  xqpe=xqc.prepareExpression("declare variable $v as xs:decimal external; $v");
  try {
    xqpe.bindSequence(new QName("v"),xqs);
    fail("A-XQDC-1.8: Passing a closed XQItem or XQSequence object as argument must result in an XQException.");
  }
 catch (  final XQException e) {
  }
  xqpe.close();
}
