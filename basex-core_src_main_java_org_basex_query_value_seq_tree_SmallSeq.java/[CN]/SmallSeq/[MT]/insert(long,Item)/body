{
  if (pos < 0)   throw new IndexOutOfBoundsException("negative index: " + pos);
  if (pos > elems.length)   throw new IndexOutOfBoundsException("position too big: " + pos);
  final int p=(int)pos, n=elems.length;
  final Item[] out=new Item[n + 1];
  System.arraycopy(elems,0,out,0,p);
  out[p]=val;
  System.arraycopy(elems,p,out,p + 1,n - p);
  if (n < MAX_SMALL)   return new SmallSeq(out,null);
  return new BigSeq(slice(out,0,MIN_DIGIT),FingerTree.<Item>empty(),slice(out,MIN_DIGIT,n + 1),null);
}
