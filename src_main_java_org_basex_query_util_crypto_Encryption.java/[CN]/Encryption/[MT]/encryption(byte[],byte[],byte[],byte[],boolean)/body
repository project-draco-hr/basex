{
  final boolean symmetric=eq(lc(s),SYM) || s.length == 0;
  final byte[] aa=a.length == 0 ? DES : a;
  final byte[] tivl=ALGE.get(lc(aa));
  if (!symmetric)   CRYPTO_ENCTYP.thrw(info,ec);
  if (tivl == null)   CRYPTO_INVALGO.thrw(info,s);
  final int ivl=toInt(tivl);
  byte[] t=null;
  try {
    if (ec)     t=encrypt(in,k,aa,ivl);
 else     t=decrypt(in,k,aa,ivl);
  }
 catch (  final NoSuchPaddingException e) {
    CRYPTO_NOPAD.thrw(info,e);
  }
catch (  final BadPaddingException e) {
    CRYPTO_BADPAD.thrw(info,e);
  }
catch (  final NoSuchAlgorithmException e) {
    CRYPTO_INVALGO.thrw(info,e);
  }
catch (  final InvalidKeyException e) {
    CRYPTO_KEYINV.thrw(info,e);
  }
catch (  final IllegalBlockSizeException e) {
    CRYPTO_ILLBLO.thrw(info,e);
  }
catch (  final InvalidAlgorithmParameterException e) {
    CRYPTO_INVALGO.thrw(info,e);
  }
  return Str.get(t);
}
