{
switch (cmd) {
case CREATE:
switch (consume(CmdCreate.class,cmd)) {
case DATABASE:
case DB:
      return new CreateDB(name(cmd),s ? remaining(null) : string(null));
case INDEX:
    return new CreateIndex(consume(CmdIndex.class,cmd));
case FS:
  return new CreateFS(name(cmd),string(cmd));
case MAB:
return new CreateMAB(string(cmd),name(null));
case USER:
return new CreateUser(name(cmd),string(null));
}
break;
case ALTER:
switch (consume(CmdAlter.class,cmd)) {
case DATABASE:
case DB:
return new AlterDB(name(cmd),name(cmd));
case USER:
return new AlterUser(name(cmd),string(null));
}
break;
case OPEN:
return new Open(string(cmd));
case CHECK:
return new Check(string(cmd));
case ADD:
String arg1=key(AS,null) ? string(cmd) : null;
String arg2=key(TO,null) ? string(cmd) : null;
return new Add(s ? remaining(cmd) : string(cmd),arg1,arg2);
case DELETE:
return new Delete(string(cmd));
case INFO:
switch (consume(CmdInfo.class,cmd)) {
case NULL:
return new Info();
case DATABASE:
case DB:
return new InfoDB();
case INDEX:
return new InfoIndex(consume(CmdIndexInfo.class,null));
case TABLE:
arg1=number(null);
arg2=arg1 != null ? number(null) : null;
if (arg1 == null) arg1=xquery(null);
return new InfoTable(arg1,arg2);
}
break;
case CLOSE:
return new Close();
case LIST:
return new List();
case DROP:
switch (consume(CmdDrop.class,cmd)) {
case DATABASE:
case DB:
return new DropDB(name(cmd));
case INDEX:
return new DropIndex(consume(CmdIndex.class,cmd));
case USER:
return new DropUser(name(cmd),key(ON,null) ? name(cmd) : null);
}
break;
case OPTIMIZE:
return new Optimize();
case EXPORT:
return new Export(string(cmd));
case XQUERY:
return new XQuery(xquery(cmd));
case RUN:
return new Run(string(cmd));
case FIND:
return new Find(string(cmd));
case CS:
return new Cs(xquery(cmd));
case GET:
return new Get(name(cmd));
case SET:
return new Set(name(cmd),string(null));
case PASSWORD:
return new Password(string(null));
case HELP:
String hc=name(null);
if (hc != null) {
qp=qm;
hc=consume(Cmd.class,cmd).toString();
}
return new Help(hc);
case EXIT:
case QUIT:
return new Exit();
case KILL:
return new Kill(name(cmd));
case BACKUP:
return new Backup(name(cmd));
case RESTORE:
return new Restore(name(cmd));
case SHOW:
switch (consume(CmdShow.class,cmd)) {
case DATABASES:
return new ShowDatabases();
case SESSIONS:
return new ShowSessions();
case USERS:
return new ShowUsers(key(ON,null) ? name(cmd) : null);
case BACKUPS:
return new ShowBackups();
default :
}
break;
case GRANT:
final CmdPerm perm=consume(CmdPerm.class,cmd);
if (perm == null) help(null,cmd);
final String db=key(ON,null) ? name(cmd) : null;
key(TO,cmd);
return db == null ? new Grant(perm,name(cmd)) : new Grant(perm,name(cmd),db);
default :
}
return null;
}
