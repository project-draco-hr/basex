{
  if (expr[0].e())   return Str.ZERO;
  long num=checkItr(expr[0],ctx);
  final byte[] pic=checkStr(expr[1],ctx);
  if (pic.length == 0 || num == 0)   return Str.get(token(num));
  final boolean sign=num < 0;
  if (sign)   num=-num;
  final int ch=cp(pic,0);
  Case cs=(ch & 0x20) != 0 ? Case.LOWER : Case.STANDARD;
  final TokenBuilder tb=new TokenBuilder();
  if ((ch & 0xDF) == 'A') {
    latin(tb,num);
  }
 else   if ((ch & 0xDF) == 'I') {
    roman(tb,num);
  }
 else   if ((ch & 0xDF) == 'W') {
    final boolean up=pic.length == 1 || pic[1] != 'w';
    if (up)     cs=Case.UPPER;
    word(tb,num,ord(pic,up ? 1 : 2));
  }
 else {
    number(tb,num,pic);
  }
  byte[] result=tb.finish();
  if (sign)   result=concat(new byte[]{'-'},result);
  if (cs == Case.LOWER)   result=lc(result);
  if (cs == Case.UPPER)   result=uc(result);
  return Str.get(result);
}
