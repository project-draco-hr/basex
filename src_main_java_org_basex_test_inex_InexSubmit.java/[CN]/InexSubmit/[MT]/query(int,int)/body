{
  final int size=qressizes[db * nqueries + qu];
  final double qtime=qt[db * nqueries + qu];
  qtimes[qu]+=qtime;
  if (size == 0)   return new ItemIter();
  final String que=XQM + "for $i score $s in " + queries.get(qu)+ " order by $s descending "+ "return (basex:sum-path($i), $s, base-uri($i))";
  final Command cmd=new XQuery(que);
  final ItemIter sq=new ItemIter();
  final StringTokenizer st=new StringTokenizer(session.execute(cmd)," ");
  int z=0;
  while (st.hasMoreTokens() && z < size) {
    final String p=st.nextToken();
    if (!st.hasMoreTokens())     break;
    final String s=st.nextToken();
    if (!st.hasMoreTokens())     break;
    String uri=st.nextToken();
    uri=uri.substring(uri.lastIndexOf('/') + 1,uri.indexOf(".xml") + 4);
    final String tmp=uri + ";" + p;
    final Str str=Str.get(tmp);
    str.score(Double.parseDouble(s));
    sq.add(str);
    z++;
  }
  Main.outln("Query % on %: % with size: %",qu + 1,databases.get(db),qtime,size);
  return sq;
}
