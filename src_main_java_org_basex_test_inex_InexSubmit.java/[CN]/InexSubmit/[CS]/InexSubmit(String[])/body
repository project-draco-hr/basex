{
  final Performance p=new Performance();
  Util.outln(Util.name(this));
  final BufferedReader br=new BufferedReader(new FileReader(QUERIES));
  queries=new StringList();
  tid=new StringList();
  String l;
  while ((l=br.readLine()) != null) {
    final int i1=l.indexOf(';');
    final int i2=l.indexOf(';',i1 + 1);
    final int i3=l.lastIndexOf(';');
    tid.add(l.substring(i1 + 1,i2));
    queries.add(l.substring(i3 + 1));
  }
  br.close();
  nqueries=queries.size();
  qtimes=new double[nqueries];
  results=new ItemIter[nqueries];
  qressizes=new int[10 * nqueries];
  qt=new double[10 * nqueries];
  if (!parseArguments(args))   return;
  final BufferedReader brt=new BufferedReader(new FileReader(TIMES));
  while ((l=brt.readLine()) != null) {
    final int index=l.indexOf(';');
    qt[c]=Double.parseDouble(l.substring(0,index));
    qressizes[c++]=Integer.parseInt(l.substring(index + 1));
  }
  brt.close();
  databases=new StringList();
  for (  final String s : List.list(ctx)) {
    if (s.startsWith(DBPREFIX))     databases.add(s);
  }
  test();
  openSubFile();
  for (int i=0; i < results.length; ++i) {
    createQueryEntryServer(i,results[i],1500);
  }
  closeSubFile();
  Util.outln("Total Time: " + p);
}
