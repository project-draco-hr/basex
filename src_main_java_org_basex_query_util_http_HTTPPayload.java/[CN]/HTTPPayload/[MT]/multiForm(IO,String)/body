{
  final byte[] b=boundary(ext);
  if (b == null)   throw new IOException("multipart/form-data: no boundary specified.");
  final byte[] boundary=concat(DASHES,b);
  final byte[] end=concat(CRLF,boundary), last=concat(boundary,DASHES);
  Map map=Map.EMPTY;
  final byte[] cont=in.read();
  final int cl=cont.length;
  String name=null, fn=null;
  for (int s=0, i; s < cl; s=i + 2) {
    i=indexOf(cont,CRLF,s);
    if (i == -1)     throw new IOException("multipart/form-data: CRLF expected.");
    final byte[] line=substring(cont,s,i);
    if (startsWith(line,boundary)) {
      if (eq(line,last))       break;
    }
 else     if (startsWith(line,CONTENT_DISPOSITION)) {
      name=!contains(line,token(NAME_IS)) ? null : string(line).replaceAll("^.*?" + NAME_IS + "\"|\".*","").replaceAll("\\[\\]","");
      fn=!contains(line,token(FILENAME_IS)) ? null : string(line).replaceAll("^.*" + FILENAME_IS + "\"|\"$","");
    }
 else     if (line.length == 0) {
      s=i + 2;
      i=indexOf(cont,end,s);
      if (i == -1)       throw new IOException("multipart/form-data: no closing boundary.");
      final Str key=Str.get(name);
      Value val=map.get(key,null);
      if (val == Empty.SEQ && fn != null)       val=Map.EMPTY;
      if (fn != null && val instanceof Map) {
        val=((Map)val).insert(Str.get(fn),new B64(substring(cont,s,i)),null);
      }
 else {
        val=Str.get(substring(cont,s,i));
      }
      map=map.insert(key,val,null);
    }
 else {
      Util.debug("multipart/form-data: ignored: %",line);
    }
  }
  return map;
}
