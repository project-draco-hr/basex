{
  return new Iter(){
    final Item c=ctx.item;
    Expr[] expr;
    Iter[] iter;
    Nod prev;
    int p;
    @Override public Nod next() throws QueryException {
      if (iter == null) {
        expr=step;
        if (root != null) {
          expr=new Expr[step.length + 1];
          expr[0]=root;
          System.arraycopy(step,0,expr,1,step.length);
        }
        iter=new Iter[expr.length];
        iter[0]=ctx.iter(expr[0]);
        prev=null;
        p=0;
      }
      while (p != -1) {
        final Item i=iter[p].next();
        if (i == null) {
          p--;
        }
 else {
          if (p == iter.length - 1) {
            if (!i.node())             Err.or(NODESPATH,this,i.type);
            final Nod n=(Nod)i;
            if (prev == null || !prev.is(n)) {
              prev=n;
              ctx.item=c;
              return n;
            }
          }
 else {
            p++;
            ctx.item=i;
            iter[p]=ctx.iter(expr[p]);
          }
        }
      }
      ctx.item=c;
      return null;
    }
    @Override public boolean reset(){
      ctx.item=c;
      iter=null;
      return true;
    }
  }
;
}
