{
  format=Format.getForId(buf.getShort());
  for (  final Format f : aFormats) {
    if (f.equals(format)) {
      final long c=buf.getInt() & 0xFFFFFFFFL;
      if (c > Integer.MAX_VALUE || c < 1) {
        err(o.deepFile,"Invalid item count (" + c + ")");
        return false;
      }
      if (defaultCount == -1)       count=(int)c;
 else       if (defaultCount != c) {
        final StringBuilder sb=new StringBuilder();
        sb.append("Invalid item count (expected: ");
        sb.append(defaultCount).append(", found: ");
        sb.append(c).append(")");
        err(o.deepFile,sb.toString());
        return false;
      }
 else       count=defaultCount;
      final int size=count * format.getSize();
      if (size <= 4)       inlined=true;
 else {
        try {
          o.bfc.position(buf.getInt());
          o.bfc.buffer(size);
        }
 catch (        final IOException e) {
          err(o.deepFile,e);
          return false;
        }
        inlined=false;
      }
      return true;
    }
  }
  final StringBuilder sb=new StringBuilder();
  sb.append("Invalid field format (expected: ");
  int i=0;
  final int numFormats=aFormats.length;
  sb.append(aFormats[i++]);
  for (final int max=numFormats - 1; i < max; i++)   sb.append(", ").append(aFormats[i]);
  if (i < numFormats)   sb.append(" or ").append(aFormats[i]);
  sb.append(", found: ").append(format).append(")");
  err(o.deepFile,sb.toString());
  return false;
}
