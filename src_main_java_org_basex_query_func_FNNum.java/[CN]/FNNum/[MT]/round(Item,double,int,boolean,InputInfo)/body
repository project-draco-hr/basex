{
  if (it.type == Type.DEC && prec >= 0) {
    final BigDecimal bd=it.dec(ii);
    final int m=h2e ? BigDecimal.ROUND_HALF_EVEN : bd.signum() > 0 ? BigDecimal.ROUND_HALF_UP : BigDecimal.ROUND_HALF_DOWN;
    return Dec.get(bd.setScale(prec,m));
  }
  double p=1;
  for (long i=prec; i > 0; i--)   p*=10;
  for (long i=prec; i < 0; ++i)   p/=10;
  double c=d;
  if (h2e) {
    c=p == 1 && (c % 2 == .5 || c % 2 == -1.5) ? c - .5 : Math.floor(c * p + .5) / p;
  }
 else   if (!Double.isNaN(d) && d != 0 && d >= Long.MIN_VALUE && d < Long.MAX_VALUE) {
    final double dp=d * p;
    c=(dp >= -.5d && dp < 0 ? -0d : Math.round(dp)) / p;
  }
  return num(it,d,c);
}
