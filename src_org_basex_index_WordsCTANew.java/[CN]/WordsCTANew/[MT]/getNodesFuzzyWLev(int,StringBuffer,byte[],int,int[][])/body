{
  int[][] d=dat;
  byte[] sbb=new byte[]{};
  byte[] tokt;
  int ol=0;
  int[] cne=getNodeEntry(nid);
  if (nid > 0) {
    if (cne[0] > 0) {
      sbb=new byte[cne[0]];
      for (int i=0; i < cne[0]; i++) {
        sbb[i]=(byte)cne[i + 1];
      }
      ol=sb.length();
      sb.append(new String(sbb));
    }
    tokt=sb.toString().getBytes();
    if (Fuzzy.calcEQ(tok,ol,tokt,e)) {
      d=FTUnion.calculateFTOr(d,getDataFromDataArray(cne[cne.length - 2],cne[cne.length - 1]));
    }
  }
  if (hasNextNodes(cne) && tok.length + e >= sb.length()) {
    for (int i=cne[0] + 1; i < cne.length - 2; i+=2) {
      d=FTUnion.calculateFTOr(d,getNodesFuzzyWLev(cne[i],sb,tok,e,d));
    }
  }
  sb.delete(sb.length() - sbb.length,sb.length());
  return d;
}
