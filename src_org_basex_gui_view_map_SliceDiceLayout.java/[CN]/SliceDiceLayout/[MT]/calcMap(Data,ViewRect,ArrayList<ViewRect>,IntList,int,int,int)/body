{
  if (ne - ns == 1) {
    final ViewRect t=new ViewRect(r.x,r.y,r.w,r.h,l.list[ns],r.level);
    final int x=t.x + layout.x;
    final int y=t.y + layout.y;
    final int w=t.w - layout.w;
    final int h=t.h - layout.h;
    mainRects.add(t);
    if (w > 0 && h > 0 && !ViewData.isLeaf(data,t.pre)) {
      final IntList ch=children(data,t.pre);
      if (ch.size >= 0)       calcMap(data,new ViewRect(x,y,w,h,l.list[ns],t.level + 1),mainRects,ch,0,ch.size - 1,level + 1);
    }
  }
 else {
    int nn=ne - ns;
    long parsize=1;
    int par;
    par=data.parent(l.list[ns],Data.ELEM);
    int parchilds;
    parchilds=l.list[ne] - l.list[ns];
    final boolean v=(level % 2) == 0 ? true : false;
    double xx=r.x;
    double yy=r.y;
    double ww, hh;
    if (data.fs != null && GUIProp.mapaggr) {
      parsize=Token.toLong(data.attValue(par + FSParser.SIZEOFFSET));
      hh=0;
      ww=0;
    }
 else {
      if (v) {
        ww=r.w;
        hh=(double)r.h / nn;
      }
 else {
        ww=(double)r.w / nn;
        hh=r.h;
      }
    }
    for (int i=0; i < l.size - 1; i++) {
      int[] liste=new int[1];
      liste[0]=l.list[i];
      if (data.fs != null && GUIProp.mapaggr) {
        long size=Token.toLong(data.attValue(data.sizeID,l.list[i]));
        int childs=l.list[i + 1] - l.list[i];
        double weight=calcWeight(size,childs,parsize,parchilds,data);
        if (Double.isNaN(weight))         System.out.println("[" + l.list[i] + "]"+ "("+ size+ ";"+ childs+ "/"+ parsize+ ";"+ parchilds+ ")"+ weight);
        if (v) {
          yy+=hh;
          hh=weight * r.h;
          ww=r.w;
        }
 else {
          xx+=ww;
          ww=weight * r.w;
          hh=r.h;
        }
        if (ww > 0 && hh > 0)         calcMap(data,new ViewRect((int)xx,(int)yy,(int)ww,(int)hh,0,r.level),mainRects,new IntList(liste),0,1,level);
      }
 else {
        if (ww > 0 && hh > 0) {
          if (v) {
            calcMap(data,new ViewRect((int)xx,(int)yy,(int)ww,(int)hh,0,r.level),mainRects,new IntList(liste),0,1,level);
            yy+=hh;
          }
 else {
            calcMap(data,new ViewRect((int)xx,(int)yy,(int)ww,(int)hh,0,r.level),mainRects,new IntList(liste),0,1,level);
            xx+=ww;
          }
        }
      }
    }
  }
}
