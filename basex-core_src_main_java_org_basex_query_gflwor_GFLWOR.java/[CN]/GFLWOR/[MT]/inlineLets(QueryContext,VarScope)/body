{
  boolean change=false, thisRound;
  do {
    thisRound=false;
    final ListIterator<Clause> iter=clauses.listIterator();
    while (iter.hasNext()) {
      final Clause c=iter.next();
      final int next=iter.nextIndex();
      if (c instanceof Let) {
        final Let lt=(Let)c;
        final Expr expr=lt.expr;
        if (expr.has(Flag.NDT))         continue;
        final VarUsage use=count(lt.var,next);
        if (use == VarUsage.NEVER) {
          ctx.compInfo(QueryText.OPTVAR,lt.var);
          iter.remove();
          change=true;
        }
 else         if (expr.isValue() || expr instanceof VarRef && !lt.var.checksType() || use == VarUsage.ONCE && !expr.has(Flag.CTX) && !expr.has(Flag.CNS) || expr instanceof AxisPath && ((AxisPath)expr).cheap()) {
          ctx.compInfo(QueryText.OPTINLINE,lt);
          inline(ctx,scp,lt.var,lt.inlineExpr(ctx,scp),next);
          thisRound=change=true;
          break;
        }
      }
    }
  }
 while (thisRound);
  return change;
}
