{
  super.paintComponent(g);
  g.setColor(new Color(90,90,150,90));
  final int w=getWidth();
  final int h=getHeight();
  if (w + h != viewDimension) {
    viewDimension=w + h;
    plotChanged=true;
  }
  plotWidth=w - 2 * XMARGIN;
  plotHeight=h - 2 * YMARGIN;
  g.setColor(GUIConstants.color2);
  g.fillRect(XMARGIN + NOVALUEBORDER,YMARGIN,plotWidth - NOVALUEBORDER,plotHeight - NOVALUEBORDER);
  drawXaxis(g);
  drawYaxis(g);
  if (scatterData.size == 0)   return;
  if (plotImg == null || plotChanged)   plotImg=createPlotImage();
  g.drawImage(plotImg,0,0,this);
  final Nodes marked=GUI.context.marked();
  if (marked.size() > 0) {
    final int[] pres=marked.pre;
    for (int i=0; i < marked.size(); i++) {
      final int prePos=scatterData.getPrePos(pres[i]);
      if (prePos > -1)       drawItem(g,scatterData.xAxis.co[prePos],scatterData.yAxis.co[prePos],false,true);
    }
  }
  if (focusedItem > -1) {
    drawItem(g,scatterData.xAxis.co[focusedItem],scatterData.yAxis.co[focusedItem],true,false);
  }
  if (valueFocused) {
    g.setColor(GUIConstants.color6);
    final String x=mouseX > XMARGIN + NOVALUEBORDER ? scatterData.xAxis.getValue(focusedValueX) : "";
    final String y=mouseY < h - YMARGIN - NOVALUEBORDER ? scatterData.yAxis.getValue(focusedValueY) : "";
    g.drawString("x  " + x,XMARGIN,h - 50);
    g.drawString("y  " + y,XMARGIN,h - 35);
  }
  plotChanged=false;
}
