{
  super.paintComponent(g);
  final Data data=GUI.context.data();
  if (data == null)   return;
  final int w=getWidth();
  final int h=getHeight();
  if (w < 250 || h < 250) {
    final String s="insufficient space for plot drawing";
    final int sw=BaseXLayout.width(g,s);
    g.setColor(Color.black);
    g.drawString(s,w / 2 - sw / 2,h / 2);
    return;
  }
  if (scatterData == null) {
    refreshInit();
    return;
  }
  g.setColor(new Color(90,90,150,90));
  if (w + h != viewDimension) {
    viewDimension=w + h;
    plotChanged=true;
  }
  plotWidth=w - (MARGINLEFT + MARGINRIGHT);
  plotHeight=h - (MARGINTOP + MARGINBOTTOM);
  g.setColor(new Color(90,90,90,40));
  g.fillRect(MARGINLEFT + NOVALUEBORDER,MARGINTOP,plotWidth - NOVALUEBORDER,plotHeight - NOVALUEBORDER);
  drawXaxis(g);
  drawYaxis(g);
  if (scatterData.size == 0)   return;
  if (plotImg == null || plotChanged)   plotImg=createPlotImage();
  g.drawImage(plotImg,0,0,this);
  if (markingChanged) {
    final Nodes marked=GUI.context.marked();
    if (marked.size() > 0 && !dragging) {
      tmpMarkedPos.reset();
      for (int i=0; i < marked.size(); i++) {
        final int prePos=scatterData.getPrePos(marked.nodes[i]);
        if (prePos > -1)         tmpMarkedPos.add(prePos);
      }
    }
    markingChanged=false;
  }
  final int[] ti=tmpMarkedPos.finish();
  for (int i=0; i < ti.length; i++) {
    drawItem(g,scatterData.xAxis.co[ti[i]],scatterData.yAxis.co[ti[i]],false,true);
  }
  if (focusedItem > -1 && !dragging) {
    drawItem(g,scatterData.xAxis.co[focusedItem],scatterData.yAxis.co[focusedItem],true,false);
  }
  if (valueFocused) {
    g.setColor(GUIConstants.color6);
    final String x=mouseX > MARGINLEFT + NOVALUEBORDER ? scatterData.xAxis.getValue(focusedValueX) : "";
    final String y=mouseY < h - MARGINBOTTOM - NOVALUEBORDER ? scatterData.yAxis.getValue(focusedValueY) : "";
    g.drawString("x  " + x,MARGINLEFT,MARGINTOP - 20);
    g.drawString("y  " + y,MARGINLEFT,MARGINTOP - 6);
  }
  if (dragging) {
    g.setColor(ScatterBoundingBox.back);
    final int selW=selectionBox.getWidth();
    final int selH=selectionBox.getHeight();
    final int x1=selectionBox.x1;
    final int y1=selectionBox.y1;
    final int x2=selectionBox.x2;
    final int y2=selectionBox.y2;
    g.fillRect(selW > 0 ? x1 : x1 + selW,selH > 0 ? y1 : y1 + selH,Math.abs(selW),Math.abs(selH));
    g.setColor(ScatterBoundingBox.frame);
    g.drawLine(x1,y1,x2,y1);
    g.drawLine(x1,y1,x1,y2);
    g.drawLine(x1,y2,x2,y2);
    g.drawLine(x2,y1,x2,y2);
  }
  plotChanged=false;
}
