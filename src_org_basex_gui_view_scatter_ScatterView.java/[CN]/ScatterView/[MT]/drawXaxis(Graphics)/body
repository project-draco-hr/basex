{
  final int h=getHeight();
  final int w=getWidth();
  g.setColor(GUIConstants.color1);
  g.drawLine(XMARGIN,h - YMARGIN,w - XMARGIN,h - YMARGIN);
  final boolean numeric=scatterData.xAxis.numeric;
  g.setFont(GUIConstants.font);
  g.setColor(GUIConstants.color1);
  final int textH=g.getFontMetrics().getHeight();
  final int pWidth=plotWidth - NOVALUEBORDER;
  final int nrCaptions=numeric ? (pWidth / (textH * 2 + CAPTIONWHITESPACE)) : scatterData.xAxis.nrCaptions;
  final double range=1.0d / (nrCaptions - 1);
  for (int i=0; i < nrCaptions; i++) {
    g.setColor(GUIConstants.color1);
    final int x1=XMARGIN + NOVALUEBORDER + ((int)((i * range) * pWidth));
    g.drawLine(x1,YMARGIN,x1,h - YMARGIN + 9);
    g.setColor(Color.black);
    String caption=new String();
    if (numeric) {
      final double value=scatterData.xAxis.min + (scatterData.xAxis.max - scatterData.xAxis.min) * range * i;
      caption=Double.toString(value);
    }
 else {
      caption=Token.string(scatterData.xAxis.cats[i]);
    }
    final int capW=BaseXLayout.width(g,caption);
    g.drawString(caption,x1 - capW / 2,h - YMARGIN + 25);
  }
}
