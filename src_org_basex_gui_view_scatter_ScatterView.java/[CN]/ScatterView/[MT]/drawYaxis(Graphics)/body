{
  final int h=getHeight();
  final int w=getWidth();
  g.setColor(GUIConstants.color1);
  g.drawLine(XMARGIN,YMARGIN,XMARGIN,getHeight() - YMARGIN);
  scatterData.yAxis.calcCaption(plotHeight - NOVALUEBORDER);
  final boolean numeric=scatterData.yAxis.numeric;
  g.setFont(GUIConstants.font);
  g.setColor(GUIConstants.color1);
  final int textH=g.getFontMetrics().getHeight();
  final int pHeight=plotHeight - NOVALUEBORDER;
  final int nrCaptions=numeric ? (pHeight / (textH + CAPTIONWHITESPACE)) : scatterData.yAxis.nrCaptions;
  final double range=1.0d / (nrCaptions - 1);
  for (int i=0; i < nrCaptions; i++) {
    g.setColor(GUIConstants.color1);
    final int y1=h - YMARGIN - NOVALUEBORDER- ((int)((i * range) * pHeight));
    g.drawLine(XMARGIN - 9,y1,w - XMARGIN,y1);
    g.setColor(Color.black);
    String caption=null;
    if (numeric) {
      final double value=scatterData.yAxis.min + (scatterData.yAxis.max - scatterData.yAxis.min) * range * i;
      caption=Double.toString(value);
    }
 else {
      caption=Token.string(scatterData.yAxis.cats[i]);
    }
    final int capW=BaseXLayout.width(g,caption);
    g.drawString(caption,XMARGIN - capW - 15,y1 + textH / 2 - 1);
  }
}
