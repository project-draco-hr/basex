{
  final int h=getHeight();
  final int w=getWidth();
  g.setColor(GUIConstants.color1);
  g.drawLine(MARGINLEFT,MARGINTOP,MARGINLEFT,getHeight() - MARGINBOTTOM);
  g.setFont(GUIConstants.font);
  g.setColor(GUIConstants.color1);
  final int textH=g.getFontMetrics().getHeight();
  final int pHeight=plotHeight - NOVALUEBORDER;
  final ScatterAxis axis=scatterData.yAxis;
  if (plotChanged)   axis.calcCaption(pHeight);
  final int nrCaptions=axis.nrCats != 1 ? axis.nrCaptions : 3;
  final double step=axis.captionStep;
  final double range=1.0d / (nrCaptions - 1);
  final int type=axis.numType;
  final boolean numeric=axis.numeric;
  for (int i=0; i < nrCaptions; i++) {
    g.setColor(GUIConstants.color1);
    final int y1=h - MARGINBOTTOM - NOVALUEBORDER- ((int)((i * range) * pHeight));
    g.drawLine(MARGINLEFT - 9,y1,w - MARGINRIGHT,y1);
    g.setColor(Color.black);
    String caption="";
    if (numeric) {
      final double min=axis.min;
      final double captionValue=i == nrCaptions - 1 ? axis.max : min + (i * step);
      if (type == ScatterAxis.TYPEINT)       caption=Integer.toString((int)captionValue);
 else       caption=Double.toString(captionValue);
    }
 else {
      if (axis.nrCats == 1) {
        if (i == 1)         caption=Token.string(axis.cats[0]);
      }
 else {
        caption=Token.string(axis.cats[i]);
      }
    }
    if (caption.length() > 22) {
      caption=caption.substring(0,20);
      caption+="...";
    }
    final int capW=BaseXLayout.width(g,caption);
    g.drawString(caption,MARGINLEFT - capW - 15,y1 + textH / 2 - 1);
  }
}
