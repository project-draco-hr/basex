{
  commands=cmds;
  gui=g;
  comp.addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    final MouseEvent e){
      if (!gui.updating && e.isPopupTrigger())       show(e.getComponent(),e.getX() - 10,e.getY() - 15);
    }
    @Override public void mouseReleased(    final MouseEvent e){
      mousePressed(e);
    }
  }
);
  comp.addKeyListener(new KeyAdapter(){
    @Override public void keyPressed(    final KeyEvent e){
      if (!gui.updating && CONTEXT.is(e)) {
        show(e.getComponent(),10,10);
      }
 else {
        for (        final GUICommand cmd : cmds) {
          if (cmd instanceof GUIPopupCmd) {
            for (            final BaseXKeys sc : ((GUIPopupCmd)cmd).shortcuts()) {
              if (sc.is(e)) {
                cmd.execute(g);
                e.consume();
                return;
              }
            }
          }
        }
      }
    }
  }
);
  final StringBuilder mnemCache=new StringBuilder();
  for (  final GUICommand cmd : cmds) {
    if (cmd == null) {
      addSeparator();
    }
 else {
      final String desc=cmd.label();
      final JMenuItem jmi=add(cmd.toggle() ? new JCheckBoxMenuItem(desc) : new JMenuItem(desc));
      jmi.addActionListener(new ActionListener(){
        @Override public void actionPerformed(        final ActionEvent e){
          if (!gui.updating)           cmd.execute(gui);
        }
      }
);
      BaseXLayout.setMnemonic(jmi,mnemCache);
      jmi.setAccelerator(BaseXLayout.keyStroke(cmd));
    }
  }
}
