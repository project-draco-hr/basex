{
  if (bl.all(true))   return true;
  boolean f=false;
  int i=x + 1;
  final int p1=calcPosition(p.list[x],dst ? dunit : wunit);
  while (i < p.size) {
    final int p2=calcPosition(p.list[i],dst ? dunit : wunit);
    if (dst) {
      final int d=Math.abs(p1 - p2) - 1;
      if (d >= mn && d <= mx && !bl.list[pp.list[i]]) {
        bl.list[pp.list[x]]=true;
        bl.list[pp.list[i]]=true;
        f|=checkDist(i,p,pp,mn,mx,bl,dst);
      }
    }
 else {
      final int d=Math.abs(p1 - p2);
      if (mn + d <= mx && !bl.list[pp.list[i]]) {
        bl.list[pp.list[x]]=true;
        bl.list[pp.list[i]]=true;
        f|=checkDist(i,p,pp,mn + d,mx,bl,dst);
      }
    }
    i++;
  }
  return f;
}
