{
  final int es=exprs.length;
  final FTIter[] ir=new FTIter[es];
  final FTNode[] it=new FTNode[es];
  for (int e=0; e < es; e++) {
    ir[e]=exprs[e].iter(qc);
    it[e]=ir[e].next();
  }
  return new FTIter(){
    @Override public FTNode next() throws QueryException {
      int p=-1;
      for (int i=0; i < es; ++i) {
        if (it[i] != null && (p == -1 || it[p].pre() > it[i].pre()))         p=i;
      }
      if (p == -1)       return null;
      final FTNode item=it[p];
      for (int i=0; i < es; ++i) {
        if (it[i] != null && p != i && item.pre() == it[i].pre()) {
          or(item,it[i]);
          it[i]=ir[i].next();
        }
      }
      it[p]=ir[p].next();
      return item;
    }
  }
;
}
