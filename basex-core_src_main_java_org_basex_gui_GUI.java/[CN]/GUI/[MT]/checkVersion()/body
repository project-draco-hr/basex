{
  if (Strings.contains(Prop.VERSION,' '))   return;
  new GUIWorker<Version>(){
    @Override protected Version doInBackground() throws Exception {
      final Version disk=new Version(gopts.get(GUIOptions.UPDATEVERSION));
      final Version used=new Version(Prop.VERSION);
      if (disk.compareTo(used) < 0) {
        writeVersion(used);
      }
 else {
        final String page=Token.string(new IOUrl(Prop.VERSION_URL).read());
        final Matcher m=Pattern.compile("^(Version )?([\\w\\d.]*?)( .*|$)",Pattern.DOTALL).matcher(page);
        if (m.matches()) {
          final Version latest=new Version(m.group(2));
          if (disk.compareTo(latest) < 0)           return latest;
        }
      }
      return null;
    }
    @Override protected void done(    final Version latest){
      if (BaseXDialog.confirm(GUI.this,Util.info(H_NEW_VERSION,Prop.NAME,latest))) {
        BaseXDialog.browse(GUI.this,Prop.UPDATE_URL);
      }
 else {
        writeVersion(latest);
      }
    }
    private void writeVersion(    final Version version){
      gopts.set(GUIOptions.UPDATEVERSION,version.toString());
      gopts.write();
    }
  }
.execute();
}
