{
  final ANode node=checkNode(expr[0],ctx);
  final Item opt=expr.length > 1 ? expr[1].item(ctx,info) : null;
  final TokenMap map=new FuncParams(Q_OPTIONS,info).parse(opt);
  final ArrayOutput ao=new ArrayOutput();
  final SerializerProp props=new SerializerProp();
  if (map.contains(UNESCAPE))   props.set(S_JSON_UNESCAPE,string(map.get(UNESCAPE)));
  if (map.contains(SPEC))   props.set(S_JSON_SPEC,string(map.get(SPEC)));
  props.set(S_JSON_FORMAT,map.contains(FORMAT) ? string(map.get(FORMAT)) : ml ? "jsonml" : "json");
  try {
    final Serializer ser=JsonSerializer.get(ao,props);
    ser.serialize(node);
    ser.close();
  }
 catch (  final SerializerException ex) {
    throw ex.getCause(info);
  }
catch (  final IOException ex) {
    SERANY.thrw(info,ex);
  }
  return Str.get(delete(ao.toArray(),'\r'));
}
