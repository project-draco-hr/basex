{
  final byte[] input=checkStr(expr[0],ctx);
  final Item opt=expr.length > 1 ? expr[1].item(ctx,info) : null;
  final TokenMap map=new FuncParams(Q_OPTIONS,info).parse(opt);
  final boolean unesc=!map.contains(UNESCAPE) || eq(map.get(UNESCAPE),TRUE);
  final Spec spec;
  final byte[] sp=map.get(SPEC);
  if (sp != null) {
    Spec spc=null;
    for (    final Spec s : Spec.values())     if (eq(sp,s.desc))     spc=s;
    if (spc == null)     BXJS_CONFIG.thrw(info,"Unknown spec '" + string(sp) + "'");
    spec=spc;
  }
 else {
    spec=Spec.RFC4627;
  }
  final byte[] form=map.get(FORMAT);
  final JsonConverter conv=JsonConverter.get(form,spec,unesc,info);
  return conv.convert(string(input)).item(ctx,info);
}
