{
  final QueryParser qp=parseQuery(io);
  final FElem module=elem("module",null);
  if (mod != null) {
    module.add("prefix",mod.string());
    module.add("uri",mod.uri());
  }
  if (main != null) {
    final TokenMap doc=main.doc();
    if (doc != null) {
      for (      final byte[] key : doc) {
        final FElem elem=eq(key,DOC_TAGS) ? elem(string(key),module) : elem("tag",module).add("name",key);
        add(elem,doc.get(key),ctx);
      }
    }
  }
  for (  final StaticVar sv : qp.vars) {
    variable(sv,module);
  }
  for (  final StaticFunc sf : qp.funcs) {
    final SeqType[] types=new SeqType[sf.args.length];
    for (int t=0; t < types.length; t++)     types[t]=sf.args[t].declType;
    function(sf.name,types,sf.declType,sf,module);
  }
  return module;
}
