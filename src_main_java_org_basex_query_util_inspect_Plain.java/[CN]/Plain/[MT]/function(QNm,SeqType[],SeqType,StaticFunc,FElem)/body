{
  final FElem function=elem("function",parent);
  if (fname != null) {
    function.add("name",fname.string());
    if (fname.uri().length != 0)     function.add("uri",fname.uri());
  }
  final TokenMap doc=sf != null ? sf.doc() : null;
  QNm[] names=null;
  if (sf != null) {
    names=new QNm[sf.args.length];
    for (int n=0; n < names.length; n++)     names[n]=sf.args[n].name;
  }
  for (int a=0; a < types.length; a++) {
    final FElem parameter=elem("parameter",function);
    if (names != null) {
      final byte[] name=names[a].string();
      final byte[] uri=names[a].uri();
      parameter.add("name",name);
      if (uri.length != 0)       parameter.add("uri",uri);
      if (doc != null) {
        for (        final byte[] key : doc) {
          if (!eq(key,DOC_PARAM))           continue;
          final byte[] val=doc.get(key);
          final int vl=val.length;
          for (int v=0; v < vl; v++) {
            if (!ws(val[v]))             continue;
            if (eq(replaceAll(substring(val,0,v),"^\\$",""),name)) {
              add(parameter,trim(substring(val,v + 1,vl)),ctx);
            }
            break;
          }
        }
      }
    }
    type(types[a],parameter);
  }
  if (sf != null) {
    for (int a=0; a < sf.ann.size(); a++) {
      final FElem annotation=elem("annotation",function);
      annotation.add("name",sf.ann.names[a].string());
      annotation.add("uri",sf.ann.names[a].uri());
    }
  }
  if (doc != null) {
    for (    final byte[] key : doc) {
      if (eq(key,DOC_PARAM,DOC_RETURN))       continue;
      final FElem elem=eq(key,DOC_TAGS) ? elem(string(key),function) : elem("tag",function).add("name",key);
      add(elem,doc.get(key),ctx);
    }
  }
  final FElem returnn=type(ret,elem("return",function));
  if (doc != null) {
    for (    final byte[] key : doc) {
      if (!eq(key,DOC_RETURN))       continue;
      returnn.add(doc.get(key));
      break;
    }
  }
  return function;
}
