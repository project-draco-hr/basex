{
  final byte[][] date=split(token(mCurrLine),' ');
  try {
    final int off=contains(date[0],',') ? 1 : 0;
    final byte[] day=date[off + 0];
    byte[] mon=date[off + 1];
    final byte[] yea=date[off + 2];
    final byte[][] tim=split(date[off + 3],':');
    for (int i=0; i < MMONTHS.length; i++) {
      if (eq(mon,MMONTHS[i])) {
        mon=token(i);
        break;
      }
    }
    final GregorianCalendar cal=new GregorianCalendar(toInt(yea),toInt(mon),toInt(day),toInt(tim[0]),toInt(tim[1]),toInt(tim[2]));
    final long min=cal.getTimeInMillis() / 60000;
    listener.startNode(EMLDATE,new byte[][]{EMLTIME,token(min)});
    listener.endNode(EMLDATE);
  }
 catch (  final Exception e) {
    BaseX.debug("EMLExtractor.getDate: " + mCurrLine);
  }
}
