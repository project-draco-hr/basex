{
  final Constr c=new Constr(info,sc).add(qc,exprs[1]);
  final ANodeList cList=c.children, aList=c.atts;
  if (c.errAtt != null)   throw UPNOATTRPER_X.get(info,c.errAtt);
  if (c.duplAtt != null)   throw UPATTDUPL_X.get(info,c.duplAtt);
  final Iter t=qc.iter(exprs[0]);
  final Item i=t.next();
  if (i == null)   throw UPSEQEMP_X.get(info,Util.className(this));
  final boolean loc=before || after;
  if (!(i instanceof ANode))   throw (loc ? UPTRGTYP2_X : UPTRGTYP_X).get(info,i);
  final Item i2=t.next();
  if (i2 != null)   throw (loc ? UPTRGSNGL2_X : UPTRGSNGL_X).get(info,ValueBuilder.concat(i,i2));
  final ANode n=(ANode)i;
  final ANode par=n.parent();
  if (loc) {
    if (n.type == NodeType.ATT || n.type == NodeType.DOC)     throw UPTRGTYP2_X.get(info,n);
    if (par == null)     throw UPPAREMPTY_X.get(info,n);
  }
 else {
    if (n.type != NodeType.ELM && n.type != NodeType.DOC)     throw UPTRGTYP_X.get(info,n);
  }
  NodeUpdate up;
  DBNode dbn;
  final Updates updates=qc.updates();
  if (!aList.isEmpty()) {
    final ANode targ=loc ? par : n;
    if (targ.type != NodeType.ELM)     throw (loc ? UPATTELM_X : UPATTELM2_X).get(info,targ);
    dbn=updates.determineDataRef(targ,qc);
    up=new InsertAttribute(dbn.pre(),dbn.data(),info,checkNS(aList,targ));
    updates.add(up,qc);
  }
  if (!cList.isEmpty()) {
    dbn=updates.determineDataRef(n,qc);
    if (before)     up=new InsertBefore(dbn.pre(),dbn.data(),info,cList);
 else     if (after)     up=new InsertAfter(dbn.pre(),dbn.data(),info,cList);
 else     if (first)     up=new InsertIntoAsFirst(dbn.pre(),dbn.data(),info,cList);
 else     if (last)     up=new InsertIntoAsLast(dbn.pre(),dbn.data(),info,cList);
 else     up=new InsertInto(dbn.pre(),dbn.data(),info,cList);
    updates.add(up,qc);
  }
  return null;
}
