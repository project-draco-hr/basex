{
  final Value v=initial(qc);
  if (v != null && v.isEmpty() || emptyPath(v))   return optPre(qc);
  for (  final Expr step : steps)   if (step.isEmpty())   return optPre(qc);
  Expr e=mergeSteps(qc);
  if (e != this)   return e.optimize(qc,scp);
  if (v != null && v.type == NodeType.DOC) {
    e=index(qc,v);
    if (e != this)     return e.optimize(qc,scp);
    e=children(qc,v);
    if (e != this)     return e.optimize(qc,scp);
  }
  if (root == null && steps.length == 1 && steps[0] instanceof Step) {
    final Step step=(Step)steps[0];
    if (step.axis == ATTR && step.test.kind == Kind.URI_NAME) {
      step.seqType(SeqType.NOD_ZO);
    }
  }
  final Path path=get(info,root,steps);
  path.size=path.size(qc);
  path.seqType=SeqType.get(steps[steps.length - 1].seqType().type,path.size);
  return path;
}
