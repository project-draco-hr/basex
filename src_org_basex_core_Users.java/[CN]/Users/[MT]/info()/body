{
  final int size=users.size();
  final TokenBuilder tb=new TokenBuilder();
  if (size != 0) {
    final int sz=file == null ? 3 : 5;
    final int[] ind=new int[sz];
    for (    final User u : users)     ind[0]=Math.max(ind[0],u.name.length());
    for (int u=0; u < sz; u++) {
      ind[u]=Math.max(ind[u],USERHEAD[u].length()) + 2;
      tb.add(ind[u],USERHEAD[u]);
    }
    tb.add(NL);
    for (int u=0; u < sz; u++) {
      for (int i=0; i < ind[u]; i++)       tb.add('-');
    }
    tb.add(NL);
    for (int i=0; i < size; i++) {
      final User user=users.get(i);
      tb.add(ind[0],user.name);
      tb.add(ind[1],user.perm(User.READ) ? "X" : "");
      tb.add(ind[2],user.perm(User.WRITE) ? "X" : "");
      if (file != null) {
        tb.add(ind[3],user.perm(User.CREATE) ? "X" : "");
        tb.add(ind[4],user.perm(User.ADMIN) ? "X" : "");
      }
      tb.add(NL);
    }
    tb.add(NL);
  }
  tb.add(size + " Users registered.");
  return tb.toString();
}
