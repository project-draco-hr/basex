{
  final Data data=gui.context.data;
  final Nodes marked=gui.context.marked;
  final int kind=data.kind(pre);
  final boolean elem=kind == Data.ELEM || kind == Data.DOC;
  Color col=Color.black;
  Font fnt=font;
  if (marked.find(pre) >= 0) {
    col=colormark3;
    fnt=bfont;
  }
  if (y < -lineH)   return;
  g.setColor(color2);
  g.drawLine(2,y + boxMargin - 1,totalW - 5,y + boxMargin - 1);
  final byte[] name=ViewData.content(data,pre,false);
  int p=gui.context.focused;
  while (p > pre)   p=ViewData.parent(data,p);
  if (pre == p) {
    g.setColor(color3);
    g.fillRect(0,y - boxW - boxMargin,totalW,lineH + 1);
  }
  int xx=x;
  if (elem) {
    final boolean large=gui.gprop.num(GUIProp.FONTSIZE) > 20;
    final int yy=y - boxW - (large ? 6 : 3);
    Image box=opened[pre] ? openedBox : closedBox;
    g.drawImage(box,xx - lineH,yy,this);
  }
  g.setFont(fnt);
  g.setColor(col);
  final int yy=y;
  int tw=totalW + 6;
  final int fsz=gui.gprop.num(GUIProp.FONTSIZE);
  BaseXLayout.chopString(g,name,xx,yy - fsz,tw - xx - 10,fsz);
  if (gui.context.focused == pre) {
    g.setColor(color5);
    g.drawRect(1,yy - boxW - boxMargin,totalW - 3,lineH + 1);
    g.drawRect(2,yy - boxW - boxMargin + 1,totalW - 5,lineH - 1);
  }
}
