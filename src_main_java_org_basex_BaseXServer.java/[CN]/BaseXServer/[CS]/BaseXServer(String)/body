{
  super(args);
  if (!success)   return;
  final int port=context.prop.num(Prop.SERVERPORT);
  if (service) {
    Util.outln(start(port));
    return;
  }
  log=new Log(context,quiet);
  stop=stopFile(port);
  Runtime.getRuntime().addShutdownHook(new Thread(){
    @Override public void run(){
      log.write(SERVERSTOPPED);
      log.close();
      Util.outln(SERVERSTOPPED);
    }
  }
);
  try {
    server=new ServerSocket(port);
    new Thread(this).start();
    do     Performance.sleep(100);
 while (!running);
    Util.outln(CONSOLE,SERVERMODE,console ? CONSOLE2 : SERVERSTART);
    if (commands != null)     execute(commands);
    if (console)     quit(console());
  }
 catch (  final Exception ex) {
    log.write(ex.getMessage());
    Util.errln(Util.server(ex));
  }
}
