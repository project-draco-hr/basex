{
  final Args arg=new Args(args,this,SERVERINFO,Util.info(CONSOLE,SERVERMODE));
  boolean daemon=false;
  while (arg.more()) {
    if (arg.dash()) {
      final char c=arg.next();
      if (c == 'c') {
        commands=arg.remaining();
      }
 else       if (c == 'd') {
        context.prop.set(Prop.DEBUG,true);
      }
 else       if (c == 'D') {
        daemon=true;
      }
 else       if (c == 'e') {
        context.prop.set(Prop.EVENTPORT,arg.num());
      }
 else       if (c == 'i') {
        console=true;
      }
 else       if (c == 'p') {
        context.prop.set(Prop.SERVERPORT,arg.num());
      }
 else       if (c == 's') {
        service=!daemon;
      }
 else       if (c == 'z') {
        quiet=true;
      }
 else {
        arg.check(false);
      }
    }
 else {
      arg.check(false);
      if (arg.string().equalsIgnoreCase("stop")) {
        stop(context.prop.num(Prop.SERVERPORT),context.prop.num(Prop.EVENTPORT));
        Performance.sleep(1000);
        return false;
      }
    }
  }
  if (context.prop.num(Prop.SERVERPORT) == context.prop.num(Prop.EVENTPORT)) {
    arg.check(error(null,SERVERPORTS));
  }
  return arg.finish();
}
