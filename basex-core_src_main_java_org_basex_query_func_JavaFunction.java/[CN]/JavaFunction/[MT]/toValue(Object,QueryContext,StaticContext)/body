{
  if (obj == null)   return Empty.SEQ;
  if (obj instanceof Value)   return (Value)obj;
  if (obj instanceof Iter)   return ((Iter)obj).value();
  final Type type=type(obj);
  if (type != null)   return type.cast(obj,qc,sc,null);
  if (obj instanceof byte[])   return BytSeq.get((byte[])obj);
  if (obj instanceof long[])   return IntSeq.get((long[])obj,AtomType.ITR);
  if (obj instanceof char[])   return Str.get(new String((char[])obj));
  if (obj instanceof boolean[])   return BlnSeq.get((boolean[])obj);
  if (obj instanceof double[])   return DblSeq.get((double[])obj);
  if (obj instanceof float[])   return FltSeq.get((float[])obj);
  if (!obj.getClass().isArray())   return new Jav(obj,qc);
  final int s=Array.getLength(obj);
  if (s == 0)   return Empty.SEQ;
  if (obj instanceof String[]) {
    final String[] r=(String[])obj;
    final byte[][] b=new byte[r.length][];
    for (int v=0; v < s; v++)     b[v]=token(r[v]);
    return StrSeq.get(b);
  }
  if (obj instanceof char[][]) {
    final char[][] r=(char[][])obj;
    final byte[][] b=new byte[r.length][];
    for (int v=0; v < s; v++)     b[v]=token(new String(r[v]));
    return StrSeq.get(b);
  }
  if (obj instanceof short[]) {
    final short[] r=(short[])obj;
    final long[] b=new long[r.length];
    for (int v=0; v < s; v++)     b[v]=r[v];
    return IntSeq.get(b,AtomType.SHR);
  }
  if (obj instanceof int[]) {
    final int[] r=(int[])obj;
    final long[] b=new long[r.length];
    for (int v=0; v < s; v++)     b[v]=r[v];
    return IntSeq.get(b,AtomType.INT);
  }
  final Object[] objs=(Object[])obj;
  final ValueBuilder vb=new ValueBuilder();
  for (  final Object o : objs)   vb.add(toValue(o,qc,sc));
  return vb.value();
}
