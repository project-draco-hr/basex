{
  final String name=Strings.camelCase(string(qname.local()));
  final String uri=string(qname.uri());
  final boolean java=uri.startsWith(JAVAPREF);
  String path=uri;
  if (java) {
    path=uri.substring(JAVAPREF.length());
  }
 else {
    final String uriPath=ModuleLoader.uri2path(path);
    if (uriPath != null)     path=ModuleLoader.capitalize(uriPath).replace('/','.').substring(1);
  }
  final ModuleLoader modules=qc.resources.modules();
  final Object jm=modules.findImport(path);
  if (jm != null) {
    final Method mth=moduleMethod(jm,path,name,args.length,qc,ii);
    if (mth != null)     return new JavaModuleFunc(sc,ii,jm,mth,args);
  }
  if (!qc.context.user().has(Perm.ADMIN))   return null;
  try {
    final Class<?> clazz=modules.findClass(path);
    if (name.equals(NEW) || exists(clazz,name))     return new JavaFunc(sc,ii,clazz,name,args);
  }
 catch (  final ClassNotFoundException ex) {
  }
catch (  final Throwable th) {
    throw JAVAINIT_X.get(ii,th);
  }
  if (java)   throw FUNCJAVA_X.get(ii,path);
  return null;
}
