{
  final XQuery query=new XQuery("\n" + "        <result> { \n" + "            unordered ( \n"+ "                for $seller in $users//user_tuple, \n"+ "                    $buyer in $users//user_tuple, \n"+ "                    $item in $items//item_tuple, \n"+ "                    $highbid in $bids//bid_tuple \n"+ "                where $seller/name = \"Tom Jones\" \n"+ "                  and $seller/userid = $item/offered_by \n"+ "                  and contains(exactly-one($item/description), \"Bicycle\") \n"+ "                  and $item/itemno = $highbid/itemno \n"+ "                  and $highbid/userid = $buyer/userid \n"+ "                  and $highbid/bid = max( $bids//bid_tuple [itemno = $item/itemno]/bid ) \n"+ "                return <jones_bike> { $item/itemno } { $item/description } \n"+ "                        <high_bid>{ $highbid/bid }</high_bid> \n"+ "                        <high_bidder>{ $buyer/name }</high_bidder> \n"+ "                       </jones_bike> ) \n"+ "        } </result>\n"+ "     ",ctx);
  try {
    query.bind("$users",node(file("docs/users.xml")));
    query.bind("$items",node(file("docs/items.xml")));
    query.bind("$bids",node(file("docs/bids.xml")));
    result=new QT3Result(query.value());
  }
 catch (  final Throwable trw) {
    result=new QT3Result(trw);
  }
 finally {
    query.close();
  }
  test(assertSerialization("<result><jones_bike><itemno>1001</itemno><description>Red Bicycle</description><high_bid><bid>55</bid></high_bid><high_bidder><name>Mary Doe</name></high_bidder></jones_bike></result>",false));
}
