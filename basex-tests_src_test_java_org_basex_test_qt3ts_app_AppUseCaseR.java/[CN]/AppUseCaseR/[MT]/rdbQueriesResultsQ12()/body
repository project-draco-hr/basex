{
  final XQuery query=new XQuery("\n" + "        declare function local:bid_summary() as element()* { \n" + "            for $i in distinct-values($bids//itemno) \n"+ "            let $b := $bids//bid_tuple[itemno = $i] \n"+ "            return <bid_count> \n"+ "                        <itemno>{ $i }</itemno> \n"+ "                        <nbids>{ count($b) }</nbids> \n"+ "                   </bid_count> };\n"+ "        <result> { \n"+ "            let $bid_counts := local:bid_summary(), \n"+ "                $maxbids := max($bid_counts/nbids), \n"+ "                $maxitemnos := $bid_counts[nbids = $maxbids] \n"+ "                for $item in $items//item_tuple, \n"+ "                    $bc in $bid_counts \n"+ "                where $bc/nbids = $maxbids and $item/itemno = $bc/itemno \n"+ "                return <popular_item> { $item/itemno } { $item/description } \n"+ "                        <bid_count>{ $bc/nbids/text() }</bid_count> \n"+ "                       </popular_item> \n"+ "        } </result>\n"+ "      ",ctx);
  try {
    query.bind("$users",node(file("docs/users.xml")));
    query.bind("$items",node(file("docs/items.xml")));
    query.bind("$bids",node(file("docs/bids.xml")));
    result=new QT3Result(query.value());
  }
 catch (  final Throwable trw) {
    result=new QT3Result(trw);
  }
 finally {
    query.close();
  }
  test(assertSerialization("<result><popular_item><itemno>1001</itemno><description>Red Bicycle</description><bid_count>5</bid_count></popular_item><popular_item><itemno>1002</itemno><description>Motorcycle</description><bid_count>5</bid_count></popular_item></result>",false));
}
