{
  boolean plaintext=false;
  do {
    String type="";
    if (mCurrLine == null)     break;
    final Matcher m=KEYPAT.matcher(mCurrLine);
    if (m.matches()) {
      type=m.group(1).toLowerCase();
      mCurrLine=m.group(2).trim();
    }
    if (type.equals("content-transfer-encoding")) {
      getEncoding();
    }
 else     if (type.equals("content-type")) {
      String mimeString=mCurrLine.split(";")[0].toLowerCase();
      MimeType mime=null;
      if (mimeString.startsWith("multipart")) {
        mContentType=mimeString;
        if (mimeString.startsWith("multipart/related"))         multipartRelated();
        break;
      }
      mime=MimeType.getItem(mimeString);
      if (mime != null) {
        for (        MetaType mt : mime.getMetaTypes()) {
          fsparser.metaEvent(meta.setMetaType(mt));
          if (mt == MetaType.TEXT)           plaintext=true;
        }
        fsparser.metaEvent(meta.setMimeType(mime));
        if (plaintext) {
          getCharset();
          if (mBodyCharset.length() != 0)           fsparser.metaEvent(meta.setString(StringField.ENCODING,mBodyCharset));
        }
 else {
          fsparser.metaEvent(meta.setString(StringField.ENCODING,mTransferEncoding));
        }
      }
    }
  }
 while (readLine() && mCurrLine.length() != 0);
  if (!plaintext)   return false;
  return true;
}
