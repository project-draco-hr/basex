{
  name=string(attribute("Root",user,NAME));
  perm=attribute(name,user,PERMISSION,Perm.values());
  if (!global)   return;
  for (  final ANode password : children(user,PASSWORD)) {
    final Algorithm algo=attribute(name,password,ALGORITHM,Algorithm.values());
    final EnumMap<Code,String> ec=new EnumMap<>(Code.class);
    for (    final ANode code : children(password,null)) {
      ec.put(value(name,code.qname().id(),algo.codes),string(code.string()));
    }
    for (    final Code code : algo.codes) {
      if (ec.get(code) == null)       throw new BaseXException(name + ", " + algo+ ": "+ code+ " missing.");
    }
    passwords.put(algo,ec);
  }
  for (  final Algorithm algo : Algorithm.values()) {
    if (passwords.get(algo) == null)     throw new BaseXException(name + ": " + algo+ " missing.");
  }
}
