{
  final int ixv=2 * v, llv=ixv + 1, idx=nextIndex++;
  while (list.size() <= llv)   list.add(-1);
  list.set(ixv,idx);
  list.set(llv,idx);
  stack.push(v);
  inStack.set(v);
  for (  int w : adjacentTo(v)) {
    final int ixw=2 * w, llw=ixw + 1;
    if (list.size() <= ixw || list.get(ixw) < 0) {
      tarjan(w);
      list.set(llv,Math.min(list.get(llv),list.get(llw)));
    }
 else     if (inStack.get(w)) {
      list.set(llv,Math.min(list.get(llv),list.get(ixw)));
    }
  }
  if (list.get(llv) == list.get(ixv)) {
    int w;
    int[] out=null;
    do {
      w=stack.pop();
      inStack.clear(w);
      out=out == null ? new int[]{w} : Array.add(out,w);
    }
 while (w != v);
    result.add(out);
  }
}
