{
  final double sc=scm > 0 ? (Math.log(ftc.score) - min) / (max - min) : -1;
  final int size=ftc.pre.size();
  return new FTIndexIterator(){
    final FTMatches all=new FTMatches(toknum);
    int pre, c;
    @Override public synchronized boolean more(){
      if (c == size)       return false;
      all.reset(toknum);
      pre=ftc.pre.get(ftc.order[c]);
      all.or(ftc.pos.get(ftc.order[c++]));
      while (c < size && pre == ftc.pre.get(ftc.order[c])) {
        all.or(ftc.pos.get(ftc.order[c++]));
      }
      return true;
    }
    @Override public synchronized FTMatches matches(){
      return all;
    }
    @Override public synchronized int next(){
      return pre;
    }
    @Override public synchronized int size(){
      return size;
    }
    @Override public synchronized double score(){
      return sc;
    }
    @Override public String toString(){
      return Integer.toString(size);
    }
  }
;
}
