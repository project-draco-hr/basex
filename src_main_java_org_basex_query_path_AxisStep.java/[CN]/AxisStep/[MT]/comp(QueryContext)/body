{
  if (!test.comp(ctx))   return Empty.SEQ;
  final Data data=ctx.resource.data();
  ctx.leaf=false;
  if (data != null && test.test == Name.NAME && test.type != NodeType.ATT) {
    final byte[] ln=((NameTest)test).ln;
    ctx.leaf=axis.down && data.meta.uptodate && data.ns.size() == 0 && data.tags.stat(data.tags.id(ln)).leaf;
  }
  final Value cv=ctx.value;
  final Type ct=cv != null ? cv.type : null;
  if (ct == NodeType.DOC) {
    cv.type=NodeType.ELM;
  }
 else   if (ct == AtomType.SEQ) {
    ctx.value=null;
  }
  final Expr e=super.comp(ctx);
  if (ct != null) {
    cv.type=ct;
  }
 else {
    ctx.value=cv;
  }
  ctx.leaf=false;
  if (e != this || e instanceof IterStep)   return e;
  if (!uses(Use.POS))   return new IterStep(input,axis,test,pred);
  if (this instanceof IterPosStep)   return this;
  return iterable() ? new IterPosStep(this) : this;
}
