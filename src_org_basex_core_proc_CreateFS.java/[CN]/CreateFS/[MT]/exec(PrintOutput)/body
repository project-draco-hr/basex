{
  prop.set(Prop.CHOP,true);
  prop.set(Prop.ENTITY,true);
  final String path;
  try {
    final File f=new File(args[0]).getCanonicalFile();
    if (!f.exists())     return error(FILEWHICH,f.getAbsolutePath());
    path=f.getCanonicalPath();
  }
 catch (  IOException ex) {
    return error(ex.getMessage());
  }
  final String db=args[1];
  if (!prop.is(Prop.FSTRAVERSAL))   return build(new FSParser(path,prop),db);
  FSTraversalParser parser=new FSTraversalParser(path,context,db);
  progress(parser);
  parser.parse();
  final Optimize opt=new Optimize();
  progress(opt);
  opt.execute(context);
  new Open(db).execute(context);
  return info(DBCREATED,db,perf);
}
