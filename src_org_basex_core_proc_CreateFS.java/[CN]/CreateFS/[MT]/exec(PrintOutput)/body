{
  prop.set(Prop.CHOP,true);
  prop.set(Prop.ENTITY,true);
  final String path;
  try {
    final File f=new File(args[0]).getCanonicalFile();
    if (!f.exists())     return error(FILEWHICH,f.getAbsolutePath());
    path=f.getCanonicalPath();
  }
 catch (  final IOException ex) {
    return error(ex.getMessage());
  }
  final String db=args[1];
  final FSParser parser=new FSParser(path,context,db);
  progress(parser);
  parser.parse();
  final Optimize opt=new Optimize();
  progress(opt);
  if (!opt.execute(context,out))   return error(opt.info());
  final Proc pr=new Open(db);
  return pr.execute(context,out) ? info(DBCREATED,db,perf) : error(pr.info());
}
