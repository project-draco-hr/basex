{
  return new Iter(){
    final Item c=ctx.item;
    Expr[] expr;
    Iter[] iter;
    Nod prev;
    int p;
    @Override public Nod next() throws QueryException {
      if (iter == null) {
        final int o=root != null ? 1 : 0;
        expr=new Expr[step.length + o];
        expr[0]=root;
        Array.copy(step,expr,o);
        iter=new Iter[expr.length];
        iter[0]=ctx.iter(expr[0]);
      }
      while (p != -1) {
        final Item i=iter[p].next();
        if (i == null) {
          p--;
        }
 else {
          if (p == iter.length - 1) {
            if (!i.node())             Err.or(NODESPATH,this,i.type);
            final Nod n=(Nod)i;
            if (prev == null || !prev.is(n)) {
              prev=n;
              return n;
            }
          }
 else {
            p++;
            ctx.item=i;
            iter[p]=ctx.iter(expr[p]);
          }
        }
      }
      ctx.item=c;
      return null;
    }
  }
;
}
