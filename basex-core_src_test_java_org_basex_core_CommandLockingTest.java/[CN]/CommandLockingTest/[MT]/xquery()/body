{
  ckDBs(new XQuery("collection('" + NAME + "')"),false,NAME_LIST);
  ckDBs(new XQuery("collection()"),false,COLL_LIST);
  ckDBs(new XQuery("<a/>/count(collection())"),false,COLL_LIST);
  ckDBs(new XQuery("doc('" + NAME + "')"),false,NAME_LIST);
  ckDBs(new XQuery("doc-available('" + NAME + "/foo.xml')"),false,NAME_LIST,null);
  ckDBs(new XQuery("parse-xml('<foo/>')"),true,NONE);
  ckDBs(new XQuery("parse-xml-fragment('<foo/>')"),true,NONE);
  ckDBs(new XQuery("put(<foo/>, '" + NAME + "')"),true,NONE);
  ckDBs(new XQuery("put(., '" + NAME + "')"),true,CTX_LIST);
  ckDBs(new XQuery("root()"),false,CTX_LIST);
  ckDBs(new XQuery("root(.)"),false,CTX_LIST);
  ckDBs(new XQuery("root(./test)"),false,CTX_LIST);
  ckDBs(new XQuery("serialize('<foo/>')"),true,NONE);
  ckDBs(new XQuery("unparsed-text('" + FILE + "')"),false,NONE);
  ckDBs(new XQuery("unparsed-text-available('" + FILE + "')"),false,NONE);
  ckDBs(new XQuery("unparsed-text-lines('" + FILE + "')"),false,NONE);
  ckDBs(new XQuery("uri-collection('" + NAME + "')"),false,NAME_LIST);
  ckDBs(new XQuery("uri-collection()"),false,COLL_LIST);
  for (  final String fn : new String[]{"data","string","number","string-length","normalize-space","document-uri","nilled","node-name","local-name","name","namespace-uri","root","base-uri","generate-id","has-children","path"}) {
    ckDBs(new XQuery(fn + "()"),false,CTX_LIST);
    ckDBs(new XQuery("doc('" + NAME + "')/"+ fn+ "()"),false,NAME_LIST,NAME_CTX);
  }
  for (  final String fn : new String[]{"data","string","number","string-length","normalize-space","document-uri","nilled","node-name","local-name","name","namespace-uri","root","base-uri","generate-id","has-children","path"}) {
    ckDBs(new XQuery(fn + "(doc('" + NAME+ "'))"),false,NAME_LIST);
  }
  ckDBs(new XQuery("."),false,CTX_LIST);
  ckDBs(new XQuery("error()"),false,NONE);
  ckDBs(new XQuery("error(xs:QName('foo'))"),false,NONE);
  ckDBs(new XQuery("error(xs:QName('foo'), 'bar')"),false,NONE);
  ckDBs(new XQuery("error(xs:QName('foo'), 'bar', <batz/>)"),false,NONE);
  ckDBs(new XQuery("random:integer()"),false,NONE);
  ckDBs(new XQuery("declare function local:a($a) {" + "if($a = 0) then $a else local:a($a idiv 2) };" + "local:a(5)"),false,NONE);
  ckDBs(new XQuery("declare function local:a($a) {" + "if($a = 0) then collection() else local:a($a idiv 2) };" + "local:a(5)"),false,COLL_LIST);
  ckDBs(new XQuery("declare function local:a($a) {" + "if($a = 0) then doc('" + NAME + "') else local:a($a idiv 2) };"+ "local:a(5)"),false,NAME_LIST);
  XQuery query=new XQuery("import module namespace qm='java:org.basex.query.func.QueryModuleTest';" + "qm:readLock()");
  query.execute(context);
  ckDBs(query,false,MODULE_LIST);
  query=new XQuery("import module namespace qm='java:org.basex.query.func.QueryModuleTest';" + "qm:writeLock()");
  query.execute(context);
  ckDBs(query,true,MODULE_LIST);
}
