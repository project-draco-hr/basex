{
  final Item it=expr.item(ctx,info);
  if (it == null)   return null;
  final Type ip=it.type;
  if (!ip.isNumberOrUntyped())   throw numberError(this,it);
  final double d=it.dbl(info);
  if (ip.isUntyped())   return Dbl.get(minus ? -d : d);
  if (!minus)   return it;
switch ((AtomType)ip) {
case DBL:
    return Dbl.get(-d);
case FLT:
  return Flt.get(-it.flt(info));
case DEC:
return Dec.get(it.dec(info).negate());
default :
final long l=it.itr(info);
if (l == Long.MIN_VALUE) throw RANGE.get(info,it);
return Int.get(-l);
}
}
