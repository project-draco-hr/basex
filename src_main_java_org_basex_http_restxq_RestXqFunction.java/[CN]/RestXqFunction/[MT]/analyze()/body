{
  final EnumSet<HTTPMethod> mth=EnumSet.noneOf(HTTPMethod.class);
  boolean found=false;
  for (int a=0, as=function.ann.size(); a < as; a++) {
    final QNm name=function.ann.names[a];
    final Value value=function.ann.values[a];
    final byte[] local=name.local();
    final byte[] uri=name.uri();
    final boolean rexq=eq(uri,QueryText.RESTXQURI);
    if (rexq) {
      if (eq(PATH,local)) {
        if (segments != null)         error(ANN_TWICE,"%",name.string());
        segments=HTTPContext.toSegments(toString(value,name));
        for (        final String s : segments) {
          if (s.trim().startsWith("{"))           checkVariable(s,AtomType.AAT);
        }
      }
 else       if (eq(CONSUMES,local)) {
        strings(value,name,consumes);
      }
 else       if (eq(PRODUCES,local)) {
        strings(value,name,produces);
      }
 else       if (eq(QUERY_PARAM,local)) {
        queryParams.add(param(value,name));
      }
 else       if (eq(FORM_PARAM,local)) {
        formParams.add(param(value,name));
      }
 else       if (eq(HEADER_PARAM,local)) {
        headerParams.add(param(value,name));
      }
 else       if (eq(COOKIE_PARAM,local)) {
        cookieParams.add(param(value,name));
      }
 else       if (eq(SESSION_ID,local)) {
        if (sessionID != null)         error(ANN_TWICE,"%",name.string());
        sessionID=checkVariable(toString(value,name));
      }
 else       if (eq(REQUEST,local)) {
        if (request != null)         error(ANN_TWICE,"%",name.string());
        request=checkVariable(toString(value,name));
      }
 else       if (eq(RESPONSE,local)) {
        if (response != null)         error(ANN_TWICE,"%",name.string());
        response=checkVariable(toString(value,name));
      }
 else {
        final HTTPMethod m=HTTPMethod.get(string(local));
        if (m == null)         error(ANN_UNKNOWN,"%",name.string());
        if (!value.isEmpty()) {
          if (requestBody != null)           error(ANN_TWICE,"%",name.string());
          if (m != POST && m != PUT)           error(METHOD_VALUE,m);
          requestBody=checkVariable(toString(value,name));
        }
        if (mth.contains(m))         error(ANN_TWICE,"%",name.string());
        mth.add(m);
      }
    }
 else     if (eq(uri,QueryText.OUTPUTURI)) {
      final String key=string(local);
      final String val=toString(value,name);
      if (output.get(key) == null)       error(UNKNOWN_SER,key);
      output.set(key,val);
    }
    found|=rexq;
  }
  if (!mth.isEmpty())   methods=mth;
  if (found) {
    if (segments == null)     error(ANN_MISSING,PATH);
    for (    final Var v : function.args) {
      if (!v.declared)       error(VAR_UNDEFINED,v.name.string());
    }
  }
  return found;
}
