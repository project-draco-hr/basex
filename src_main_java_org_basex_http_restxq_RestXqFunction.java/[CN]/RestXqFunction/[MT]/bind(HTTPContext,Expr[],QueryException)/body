{
  if (path != null) {
    for (int s=0; s < path.size; s++) {
      final Matcher m=TEMPLATE.matcher(path.segment[s]);
      if (!m.find())       continue;
      final QNm qnm=new QNm(token(m.group(1)),context);
      bind(qnm,arg,new Atm(http.segment(s)));
    }
  }
  final String ct=http.contentType();
  IOContent body=null;
  if (requestBody != null) {
    body=cache(http,null);
    try {
      body.name(http.method + IO.XMLSUFFIX);
      new IOFile("c:/temp/cache").write(body.read());
      final String ext=http.contentTypeExt();
      bind(requestBody,arg,HTTPPayload.item(body,context.context.prop,ct,ext));
    }
 catch (    final IOException ex) {
      error(INPUT_CONV,ex);
    }
  }
  final Map<String,String[]> params=http.params();
  for (  final RestXqParam rxp : queryParams) {
    final ValueBuilder vb=new ValueBuilder();
    final String[] strings=params.get(rxp.key);
    if (strings != null)     for (    final String v : params.get(rxp.key))     vb.add(new Atm(v));
    bind(rxp,arg,vb.value());
  }
  if (!formParams.isEmpty()) {
    if (MimeTypes.APP_FORM.equals(ct)) {
      body=cache(http,body);
      addParams(body.toString(),params);
    }
    for (    final RestXqParam rxp : formParams) {
      final ValueBuilder vb=new ValueBuilder();
      final String[] strings=params.get(rxp.key);
      if (strings != null)       for (      final String v : params.get(rxp.key))       vb.add(new Atm(v));
      bind(rxp,arg,vb.value());
    }
  }
  for (  final RestXqParam rxp : headerParams) {
    final TokenList tl=new TokenList();
    final Enumeration<?> en=http.req.getHeaders(rxp.key);
    while (en.hasMoreElements()) {
      for (      final String s : en.nextElement().toString().split(", *"))       tl.add(s);
    }
    bind(rxp,arg,StrSeq.get(tl));
  }
  final Cookie[] ck=http.req.getCookies();
  for (  final RestXqParam rxp : cookieParams) {
    Value val=Empty.SEQ;
    if (ck != null) {
      for (      final Cookie c : ck) {
        if (rxp.key.equals(c.getName()))         val=Str.get(c.getValue());
      }
    }
    bind(rxp,arg,val);
  }
  final Map<String,Value> errs=new HashMap<String,Value>();
  if (err != null) {
    final Value[] values=Catch.values(err);
    for (int v=0; v < Catch.NAMES.length; v++) {
      errs.put(string(Catch.NAMES[v].local()),values[v]);
    }
  }
  for (  final RestXqParam rxp : errorParams) {
    bind(rxp,arg,errs.get(rxp.key));
  }
}
