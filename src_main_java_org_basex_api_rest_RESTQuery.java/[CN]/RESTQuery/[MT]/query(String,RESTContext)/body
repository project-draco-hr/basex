{
  if (item != null) {
    final boolean mm=ctx.session.execute(new Get(Prop.MAINMEM)).split(Text.COLS)[1].equals(Text.TRUE);
    ctx.session.execute(new Set(Prop.MAINMEM,true));
    ctx.session.create(Util.name(RESTQuery.class),new ArrayInput(item));
    if (!mm)     ctx.session.execute(new Set(Prop.MAINMEM,false));
  }
 else {
    open(ctx);
  }
  final Session session=ctx.session;
  session.execute(new Set(Prop.SERIALIZER,serial(ctx)));
  session.setOutputStream(ctx.out);
  try {
    final Query qu=session.query(in);
    for (    final Entry<String,String[]> e : variables.entrySet()) {
      final String[] val=e.getValue();
      if (val.length == 2)       qu.bind(e.getKey(),val[0],val[1]);
      if (val.length == 1)       qu.bind(e.getKey(),val[0]);
    }
    initResponse(new SerializerProp(qu.options()),ctx);
    qu.execute();
  }
 catch (  final IOException ex) {
    final String m1=Util.message(ex);
    final String m2=m1.replaceAll(STOPPED + ".*" + NL,"");
    throw m1.equals(m2) ? ex : new IOException(m2,ex.getCause());
  }
}
