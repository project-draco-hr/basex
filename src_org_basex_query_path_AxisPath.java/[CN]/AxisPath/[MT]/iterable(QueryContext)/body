{
  if (root == null || root.uses(Use.VAR,ctx) || root.duplicates(ctx))   return false;
  int i=0;
  while (true) {
switch (step[i].axis) {
case ANC:
case ANCORSELF:
      return false;
case DESC:
case DESCORSELF:
case FOLL:
case PREC:
    return ++i == step.length;
case CHILD:
case FOLLSIBL:
case PRECSIBL:
  do {
    if (++i == step.length)     return true;
    final Axis a=step[i].axis;
    if (a != Axis.ATTR && a != Axis.CHILD && a != Axis.PARENT && a != Axis.SELF)     break;
  }
 while (true);
return i + 1 == step.length && (step[i].axis == Axis.DESC || step[i].axis == Axis.DESCORSELF);
case ATTR:
case PARENT:
case SELF:
if (++i == step.length) return true;
}
}
}
