{
  FTArrayExpr[] indexExprs=new FTArrayExpr[exprs.length];
  int j=0;
  int i=0;
  for (; i != exprs.length && j < exprs.length; i++) {
    indexExprs[j]=exprs[i].indexEquivalent(ctx,curr);
    if (indexExprs[j] == null)     return null;
    if (i > 0 && indexExprs[j - 1] instanceof FTIndex && indexExprs[j] instanceof FTUnaryNotExprs) {
      FTUnaryNotExprs e=(FTUnaryNotExprs)indexExprs[j];
      FTArrayExpr[] ex=new FTArrayExpr[e.exprs.length + 1];
      ex[0]=indexExprs[j - 1];
      System.arraycopy(e.exprs,0,ex,1,e.exprs.length);
      e.exprs=ex;
      if (exprs.length == 2) {
        return e;
      }
 else {
        indexExprs[j - 1]=e;
        j--;
      }
    }
    j++;
  }
  if (j != i) {
    FTArrayExpr[] ie=new FTArrayExpr[j];
    System.arraycopy(indexExprs,0,ie,0,j);
    indexExprs=ie;
  }
  ctx.compInfo(OPTAND4);
  return new FTIntersection(indexExprs,false);
}
