{
  running=true;
  while (running) {
    try {
      final Socket s=socket.accept();
      if (stop.exists()) {
        if (!stop.delete()) {
          context.log.writeServer(ERROR_C + Util.info(FILE_NOT_DELETED_X,stop));
        }
        quit();
      }
 else {
        final long ka=context.mprop.num(MainProp.KEEPALIVE) * 1000L;
        if (ka > 0) {
          final long ms=System.currentTimeMillis();
          for (          final ClientListener cs : context.sessions) {
            if (ms - cs.last > ka)             cs.quit();
          }
        }
        final ClientListener cl=new ClientListener(s,context,this);
        final long to=context.mprop.num(MainProp.KEEPALIVE) * 1000L;
        if (to > 0) {
          cl.auth.schedule(new TimerTask(){
            @Override public void run(){
              cl.quitAuth();
            }
          }
,to);
          auth.add(cl);
        }
        cl.start();
      }
    }
 catch (    final SocketException ex) {
      break;
    }
catch (    final Throwable ex) {
      Util.errln(ex);
      context.log.writeError(ex);
      break;
    }
  }
}
