{
  try {
    if (paramType.equals(BOOL)) {
      if (isNull)       stmt.setNull(index,Types.BOOLEAN);
 else       stmt.setBoolean(index,Boolean.parseBoolean(value));
    }
 else     if (paramType.equals(DATE)) {
      if (isNull)       stmt.setNull(index,Types.DATE);
 else       stmt.setDate(index,Date.valueOf(value));
    }
 else     if (paramType.equals(DOUBLE)) {
      if (isNull)       stmt.setNull(index,Types.DOUBLE);
 else       stmt.setDouble(index,Double.parseDouble(value));
    }
 else     if (paramType.equals(FLOAT)) {
      if (isNull)       stmt.setNull(index,Types.FLOAT);
 else       stmt.setFloat(index,Float.parseFloat(value));
    }
 else     if (paramType.equals(INT)) {
      if (isNull)       stmt.setNull(index,Types.INTEGER);
 else       stmt.setInt(index,Integer.parseInt(value));
    }
 else     if (paramType.equals(SHORT)) {
      if (isNull)       stmt.setNull(index,Types.SMALLINT);
 else       stmt.setShort(index,Short.parseShort(value));
    }
 else     if (paramType.equals(STRING)) {
      if (isNull)       stmt.setNull(index,Types.VARCHAR);
 else       stmt.setString(index,value);
    }
 else     if (paramType.equals(TIME)) {
      if (isNull)       stmt.setNull(index,Types.TIME);
 else       stmt.setTime(index,Time.valueOf(value));
    }
 else     if (paramType.equals(TIMESTAMP)) {
      if (isNull)       stmt.setNull(index,Types.TIMESTAMP);
 else       stmt.setTimestamp(index,Timestamp.valueOf(value));
    }
 else {
    }
  }
 catch (  final SQLException ex) {
    throw SQLEXC.thrw(input,ex.getMessage());
  }
}
