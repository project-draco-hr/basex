{
  final File file=new File(fn);
  try {
    final StringBuilder user=new StringBuilder();
    if (file.exists()) {
      final BufferedReader br=new BufferedReader(new FileReader(file));
      String line=null;
      while ((line=br.readLine()) != null)       if (line.equals(PROPUSER))       break;
      while ((line=br.readLine()) != null) {
        user.append(line);
        user.append(NL);
      }
      br.close();
    }
    final BufferedWriter bw=new BufferedWriter(new FileWriter(file));
    bw.write(PROPHEADER + NL);
    for (    final Field f : fields) {
      final String name=f.getName();
      if (name.equals("SKIP"))       break;
      if (Modifier.isFinal(f.getModifiers()))       continue;
      if (f.get(null) instanceof String[]) {
        final String[] str=(String[])f.get(null);
        bw.write(name + " = " + str.length+ NL);
        for (int i=0; i < str.length; i++) {
          if (str[i] != null)           bw.write(name + (i + 1) + " = "+ str[i]+ NL);
        }
      }
 else       if (f.get(null) instanceof int[]) {
        final int[] num=(int[])f.get(null);
        for (int i=0; i < num.length; i++) {
          bw.write(name + i + " = "+ num[i]+ NL);
        }
      }
 else {
        bw.write(name + " = " + f.get(null)+ NL);
      }
    }
    bw.write(NL + PROPUSER + NL);
    bw.write(user.toString());
    bw.close();
  }
 catch (  final Exception ex) {
    BaseX.errln("% could not be written.",fn);
    ex.printStackTrace();
  }
}
