{
  boolean opt=false;
  final int sl=steps.length;
  final ExprList stps=new ExprList(sl);
  for (int s=0; s < sl; s++) {
    final Expr step=steps[s];
    if (s < sl - 1 && step instanceof Step && steps[s + 1] instanceof Step) {
      final Step curr=(Step)step, next=(Step)steps[s + 1];
      if (curr.simple(DESCORSELF,false)) {
        if (next.axis == CHILD && !next.has(Flag.FCS)) {
          next.axis=DESC;
          opt=true;
          continue;
        }
        if (next.axis == ATTR && !next.has(Flag.FCS)) {
          curr.test=new NameTest(false);
          opt=true;
        }
      }
    }
    stps.add(step);
  }
  if (opt) {
    qc.compInfo(OPTDESC);
    return get(info,root,stps.finish());
  }
  return this;
}
