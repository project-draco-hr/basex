{
  curr=f;
  builder.startElem(FILE,atts(f,false));
  if (f.canRead()) {
    if (Prop.fsmeta && f.getName().indexOf('.') != -1) {
      final String name=f.getName();
      final int dot=name.lastIndexOf('.');
      final byte[] suffix=lc(token(name.substring(dot + 1)));
      final AbstractExtractor index=meta.get(suffix);
      if (index != null && f.length() != 0) {
        try {
          index.extract(builder,f);
        }
 catch (        final MetaDataException ex) {
          BaseX.debug(ex);
        }
      }
    }
    if (Prop.fscont && f.isFile()) {
      final int size=BufferInput.read(f,cache);
      int s=-1;
      while (++s < size) {
        final byte b=cache[s];
        if (b >= 0 && b < ' ' && !ws(b))         break;
      }
      if (s == size) {
        while (--s >= 0 && cache[s] <= 0x20 && cache[s] >= 0)         ;
        if (++s != 0) {
          builder.nodeAndText(CONTENT,atts.reset(),Array.finish(cache,s));
        }
      }
    }
  }
  builder.endElem(FILE);
  sizeStack[lvl]+=f.length();
}
