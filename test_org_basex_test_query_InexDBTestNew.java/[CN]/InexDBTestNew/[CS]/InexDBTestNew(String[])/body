{
  if (!parseArguments(args))   return;
  String l;
  final BufferedReader brt=new BufferedReader(new FileReader("times"));
  while ((l=brt.readLine()) != null) {
    final int index=l.indexOf(';');
    qt[c]=Double.parseDouble(l.substring(0,index));
    qressizes[c++]=Integer.parseInt(l.substring(index + 1));
  }
  brt.close();
  final BufferedReader br=new BufferedReader(new FileReader(QUERIES));
  queries=new StringList();
  final IntList tidl=new IntList();
  while ((l=br.readLine()) != null) {
    final int i=l.indexOf(';');
    tidl.add(Integer.parseInt(l.substring(0,i)));
    int j=l.indexOf(';',i + 1);
    j=l.indexOf(';',j + 1);
    queries.add(l.substring(j + 1));
  }
  br.close();
  qtimes=new double[queries.size()];
  results=new SeqIter[queries.size()];
  tid=tidl.finish();
  databases=new StringList();
  for (  final String s : List.list(ctx)) {
    if (s.startsWith(DBPREFIX))     databases.add(s);
  }
  BaseX.outln(BaseX.name(InexDBTest.class) + " [" + CLIENTMODE+ "]");
  final Performance p=new Performance();
  test();
  System.out.println("Total Time: " + p.getTimer());
  openSubFile();
  for (int i=0; i < results.length; i++) {
    createQueryEntryServer(i,results[i],1500);
  }
  closeSubFile();
}
