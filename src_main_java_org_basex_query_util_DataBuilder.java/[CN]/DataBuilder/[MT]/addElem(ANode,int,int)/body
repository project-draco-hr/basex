{
  final int ms=data.meta.size;
  data.nspaces.open();
  final Atts ns=nd.nsScope();
  final boolean ne=ns.size() > 0;
  for (int a=0, as=ns.size(); a < as; a++)   data.nspaces.add(ns.name(a),ns.string(a),ms);
  final QNm q=nd.qname();
  final byte[] uri=q.uri();
  final int u=uri.length != 0 ? data.nspaces.addURI(uri) : 0;
  final int tn=data.tagindex.index(q.string(),null,false);
  final int s=size(nd,false);
  data.elem(pre - par,tn,size(nd,true),s,u,ne);
  data.insert(ms);
  int p=pre + 1;
  AxisIter ai=nd.attributes();
  for (ANode ch; (ch=ai.next()) != null; )   p=addNode(ch,p,pre);
  ai=nd.children();
  for (ANode ch; (ch=ai.next()) != null; )   p=addNode(ch,p,pre);
  data.nspaces.close(ms);
  if (s != p - pre)   data.size(ms,Data.ELEM,p - pre);
  return p;
}
