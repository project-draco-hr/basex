{
  if (node.type != NodeType.ELM)   return node;
  final MemData md=new MemData(ctx.context.prop);
  final DataBuilder db=new DataBuilder(md);
  db.build(node);
  boolean del=true;
  for (int pre=0; pre < md.meta.size; pre++) {
    final int kind=md.kind(pre);
    if (kind != Data.ELEM && kind != Data.ATTR)     continue;
    final byte[] uri=md.nspaces.uri(md.uri(pre,kind));
    if (uri == null || !eq(uri,ns))     continue;
    final byte[] name=md.name(pre,kind);
    if (prefix(name).length == 0) {
      if (kind == Data.ELEM) {
        md.update(pre,kind,name,EMPTY);
        md.nsFlag(pre,false);
      }
    }
 else {
      del=false;
    }
  }
  if (del)   md.nspaces.delete(ns);
  return new DBNode(md,0);
}
