{
  final XQuery query=new XQuery("\n" + "        <result> { \n" + "            for $u in $users//user_tuple \n"+ "            order by $u/name \n"+ "            return <user> { $u/name } { \n"+ "                for $b in distinct-values($bids//bid_tuple [userid = $u/userid]/itemno) \n"+ "                for $i in $items//item_tuple[itemno = $b] \n"+ "                let $descr := $i/description/text() \n"+ "                order by exactly-one($descr) \n"+ "                return <bid_on_item>{ $descr }</bid_on_item> } </user> \n"+ "        } </result>\n"+ "      ",ctx);
  try {
    query.bind("$users",node(file("docs/users.xml")));
    query.bind("$items",node(file("docs/items.xml")));
    query.bind("$bids",node(file("docs/bids.xml")));
    result=new QT3Result(query.value());
  }
 catch (  final Throwable trw) {
    result=new QT3Result(trw);
  }
 finally {
    query.close();
  }
  test(assertSerialization("<result><user><name>Dee Linquent</name><bid_on_item>Motorcycle</bid_on_item><bid_on_item>Racing Bicycle</bid_on_item></user><user><name>Jack Sprat</name><bid_on_item>Old Bicycle</bid_on_item><bid_on_item>Racing Bicycle</bid_on_item></user><user><name>Mary Doe</name><bid_on_item>Motorcycle</bid_on_item><bid_on_item>Red Bicycle</bid_on_item></user><user><name>Rip Van Winkle</name></user><user><name>Roger Smith</name><bid_on_item>Motorcycle</bid_on_item><bid_on_item>Old Bicycle</bid_on_item><bid_on_item>Racing Bicycle</bid_on_item><bid_on_item>Red Bicycle</bid_on_item></user><user><name>Tom Jones</name><bid_on_item>Motorcycle</bid_on_item><bid_on_item>Tricycle</bid_on_item></user></result>",false));
}
