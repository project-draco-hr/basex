{
  final Data d=c.data;
  final int[] roots=c.current.nodes;
  final int rc=roots.length;
  final double width=sW / (double)rc;
  for (int r=0; r < rc; r++) {
    int root=roots[r];
    if (root > 0) {
    }
    rectsPerLevel=new ArrayList<RectangleCache[]>();
    bigRectangle=new boolean[maxLevel];
    for (int i=0; i < maxLevel; i++) {
      int[] currLine=nodesPerLevel.get(i);
      int lS=currLine.length;
      double w=width / lS;
      if (w < 2) {
        bigRectangle[i]=true;
        rectsPerLevel.add(bigRectangle(width));
      }
 else {
        bigRectangle[i]=false;
        rectsPerLevel.add(normalRectangle(g,d,i,w,lS));
      }
    }
    rectsPerLevel.trimToSize();
  }
}
