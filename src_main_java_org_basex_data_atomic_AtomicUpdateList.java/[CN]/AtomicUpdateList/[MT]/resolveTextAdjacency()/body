{
  final AtomicUpdateList allMerges=new AtomicUpdateList(data);
  final IntSet s=new IntSet();
  for (  final BasicUpdate u : updStructural) {
    final DataClip insseq=u.getInsertionData();
    final int newLocation=u.location + u.accumulatedShifts - u.shifts;
    final int beforeNewLocation=newLocation - 1;
    if (insseq != null) {
      final int followingNode=newLocation + insseq.size();
      final int beforeFollowingNode=followingNode - 1;
      if (!s.contains(beforeFollowingNode)) {
        final AtomicUpdateList merges=necessaryMerges(beforeFollowingNode);
        merges.mergeNodes();
        allMerges.merge(merges);
        s.add(beforeFollowingNode);
      }
    }
    if (!s.contains(beforeNewLocation)) {
      final AtomicUpdateList merges=necessaryMerges(beforeNewLocation);
      merges.mergeNodes();
      allMerges.merge(merges);
      s.add(beforeNewLocation);
    }
  }
  allMerges.updateDistances();
  allMerges.clear();
}
