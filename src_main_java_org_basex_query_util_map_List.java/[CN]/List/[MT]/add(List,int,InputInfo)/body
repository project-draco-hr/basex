{
  if (hash == o.hash) {
    Item[] ks=keys;
    Value[] vs=values;
    outer:     for (int i=0; i < size; i++) {
      final Item ok=o.keys[i];
      for (      final Item k : keys)       if (ok.eq(ii,k))       continue outer;
      ks=Array.add(ks,ok);
      vs=Array.add(vs,o.values[i]);
    }
    return ks == keys ? this : new List(hash,ks,vs);
  }
  final TrieNode[] ch=new TrieNode[KIDS];
  final int k=key(hash,l), ok=key(o.hash,l);
  final int nu;
  if (k == ok) {
    ch[k]=add(o,l + 1,ii);
    nu=1 << k;
  }
 else {
    ch[k]=this;
    ch[ok]=o;
    nu=1 << k | 1 << ok;
  }
  return new Branch(ch,nu,size + o.size);
}
