{
  return new NodeIter(){
    final boolean r=root != null;
    final int sz=steps.length + (r ? 1 : 0);
    final Expr[] exprs=r ? new ExprList(sz).add(root).add(steps).finish() : steps;
    final Iter[] iter=new Iter[sz];
    ANode last;
    int pos=-1;
    @Override public ANode next() throws QueryException {
      final QueryFocus qf=qc.focus;
      if (pos == -1) {
        iter[++pos]=qc.iter(exprs[0]);
        focus.value=qf.value;
      }
      qc.focus=focus;
      try {
        while (true) {
          final Item it=iter[pos].next();
          if (it == null) {
            if (--pos == -1)             return null;
          }
 else           if (pos < sz - 1) {
            if (pos++ == 0 && r && !(it instanceof ANode))             throw PATHNODE_X_X_X.get(info,steps[0],it.type,it);
            focus.value=it;
            iter[pos]=qc.iter(exprs[pos]);
          }
 else {
            final ANode n=(ANode)it;
            if (last == null || !last.is(n)) {
              last=n;
              return n;
            }
          }
        }
      }
  finally {
        qc.focus=qf;
      }
    }
  }
;
}
