{
  if (ftp == null) {
    final int bl=value.length;
    if (cdata.isEmpty() || elems.isEmpty() || !cdata.contains(elems.peek())) {
      for (int k=0; k < bl; k+=cl(value,k))       encode(cp(value,k));
    }
 else {
      print(CDATA_O);
      int c=0;
      final int vl=value.length;
      for (int k=0; k < vl; k+=cl(value,k)) {
        final int ch=cp(value,k);
        if (ch == ']') {
          ++c;
        }
 else {
          if (c > 1 && ch == '>') {
            print(CDATA_C);
            print(CDATA_O);
          }
          c=0;
        }
        printChar(ch);
      }
      print(CDATA_C);
    }
  }
 else {
    final FTLexer lex=new FTLexer().all().init(value);
    while (lex.hasNext()) {
      final FTSpan span=lex.next();
      if (!span.del && ftp.contains(span.pos))       print((char)TokenBuilder.MARK);
      final byte[] text=span.text;
      final int tl=text.length;
      for (int t=0; t < tl; t+=cl(text,t))       encode(cp(text,t));
    }
  }
  sep=false;
}
