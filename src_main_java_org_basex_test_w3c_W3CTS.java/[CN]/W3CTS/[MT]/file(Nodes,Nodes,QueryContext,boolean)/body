{
  final TokenBuilder tb=new TokenBuilder();
  for (int c=0; c < nod.size(); c++) {
    final byte[] nm=data.atom(nod.nodes[c]);
    String src=srcs.get(string(nm));
    if (tb.size() != 0)     tb.add(", ");
    tb.add(nm);
    Expr expr=null;
    if (src == null) {
      final NodIter col=new NodIter();
      for (      final byte[] cl : colls.get(string(nm))) {
        col.add(ctx.doc(cl,true,false));
      }
      ctx.addColl(col,nm);
      expr=Uri.uri(nm);
    }
 else {
      FunDef def=FunDef.DOC;
      if (!first) {
        def=FunDef.DB;
        src=IO.get(src).dbname();
      }
      expr=Fun.create(def,Str.get(src));
    }
    if (var != null) {
      final Var v=new Var(new QNm(data.atom(var.nodes[c])),true);
      ctx.vars.addGlobal(v.bind(expr,ctx));
    }
  }
  return tb.finish();
}
