{
  final Table t=new Table();
  t.description=PACKAGES_X;
  t.header.add(NAME);
  t.header.add(VERSINFO);
  t.header.add(TYPE);
  t.header.add(PATH);
  final Repo repo=context.repo.reset();
  final TokenMap pkg=repo.pkgDict();
  for (  final byte[] p : pkg) {
    if (p != null)     t.contents.add(entry(string(Package.name(p)),string(Package.version(p)),EXPATH,string(pkg.get(p))));
  }
  for (  final IOFile ch : repo.path().children()) {
    final String n=ch.name();
    if (!ch.isDir()) {
      t.contents.add(entry(n.replaceAll("\\..*","").replace('/','.'),"-",INTERNAL,n));
    }
 else     if (n.indexOf('-') == -1) {
      for (      final String s : ch.descendants()) {
        t.contents.add(entry(n + '.' + s.replaceAll("\\..*","").replace('/','.'),"-",INTERNAL,n + '/' + s));
      }
    }
  }
  return t.sort();
}
