{
  final TokenList tokens=index.tokens;
  final IntArrayList next=index.next;
  if (root != null)   root[rp]=next.get(0)[1] + offset;
  int s=siz;
  final int il=next.size();
  for (int i=1; i < il; ++i) {
    final int[] nxt=next.get(i);
    final int lp=nxt[nxt.length - 1] >= 0 ? 0 : -1;
    outA.write1(tokens.get(nxt[0]).length);
    outA.writeBytes(tokens.get(nxt[0]));
    final int jl=nxt.length - 2 + lp;
    for (int j=1; j < jl; ++j) {
      outA.write4(nxt[j] + offset);
      outA.write1(tokens.get(next.get(nxt[j])[0])[0]);
    }
    outA.write4(nxt[jl]);
    if (lp == 0 || nxt[jl] == 0 && nxt[jl + 1] == 0) {
      outA.write5(nxt[jl + 1]);
    }
 else {
      final int n=nxt.length - 2;
      outA.write5((long)nxt[n] << 16 + (-nxt[n + 1] & 0xFFFF));
    }
    outC.write4(s);
    s+=tokens.get(nxt[0]).length + (nxt.length - 3 + lp) * 5 + 10;
  }
  offset+=next.size() - 1;
  return s;
}
