{
  super.compile(ctx,scp);
  if (swap()) {
    op=op.swap();
    ctx.compInfo(OPTSWAP,this);
  }
  final Expr e1=expr[0];
  final Expr e2=expr[1];
  type=SeqType.get(AtomType.BLN,e1.size() == 1 && e2.size() == 1 ? Occ.ONE : Occ.ZERO_ONE);
  Expr e=this;
  if (oneIsEmpty()) {
    e=optPre(null,ctx);
  }
 else   if (allAreValues()) {
    e=preEval(ctx);
  }
 else   if (e1.isFunction(Function.COUNT)) {
    e=compCount(op);
    if (e != this)     ctx.compInfo(e instanceof Bln ? OPTPRE : OPTWRITE,this);
  }
 else   if (e1.isFunction(Function.POSITION)) {
    e=Pos.get(op,e2,e,info);
    if (e != this)     ctx.compInfo(OPTWRITE,this);
  }
 else   if (e1.type().eq(SeqType.BLN) && (op == OpV.EQ && e2 == Bln.FALSE || op == OpV.NE && e2 == Bln.TRUE)) {
    e=Function.NOT.get(null,info,e1);
  }
  return e;
}
