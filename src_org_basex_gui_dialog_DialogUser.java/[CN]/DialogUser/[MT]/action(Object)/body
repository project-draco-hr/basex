{
  boolean ok=true;
  String msg=null;
  try {
    final Object di=databases.getSelectedItem();
    final String db=di == null ? null : di.toString();
    if (cmp instanceof Object[]) {
      final Object[] o=(Object[])cmp;
      final CmdPerm perm=CmdPerm.values()[((Integer)o[2]) - 1];
      final String uname=table.getModel().getValueAt((Integer)o[1],0).toString();
      ok=sess.execute(o[0] == Boolean.TRUE ? new Grant(perm,uname,db) : new Revoke(perm,uname,db));
      msg=sess.info();
      setData();
    }
 else     if (cmp == create || cmp == user || cmp == pass) {
      final String u=user.getText();
      final String p=new String(pass.getPassword());
      ok=sess.execute(new CreateUser(u,p));
      msg=sess.info();
      setData();
      user.setText("");
      pass.setText("");
      user.requestFocusInWindow();
    }
 else     if (cmp == drop) {
      String msg2="";
      final int[] rows=table.getSelectedRows();
      if (Dialog.confirm(this,Main.info(DRQUESTION,rows.length))) {
        for (        final int r : rows) {
          ok=sess.execute(new DropUser(table.data.value(r,0),db));
          if (msg == null)           msg=sess.info();
 else           if (msg2.isEmpty())           msg2=" (...)";
          if (!ok)           break;
        }
        msg+=msg2;
        setData();
      }
    }
 else     if (cmp == alter) {
      final DialogPass dp=new DialogPass(dia.gui);
      if (dp.ok()) {
        ok=sess.execute(new AlterUser(table.getValueAt(table.getSelectedRow(),0).toString(),dp.pass()));
        msg=sess.info();
      }
    }
 else     if (cmp == add) {
      final String us=addUser.getSelectedItem().toString();
      for (int r=0; r < users.contents.size(); r++) {
        if (!users.value(r,0).equals(us))         continue;
        for (int c=1; c <= 2; c++) {
          final String o=users.value(r,c);
          final String right=CmdPerm.values()[c - 1].toString();
          ok=sess.execute(o.equals("X") ? new Grant(right,us,db) : new Revoke(right,us,db));
          msg=sess.info();
          if (!ok)           break;
        }
      }
      setData();
      addUser.requestFocusInWindow();
    }
 else     if (cmp == databases) {
      setData();
    }
  }
 catch (  final IOException ex) {
    Main.debug(ex);
    if (ex instanceof BindException)     msg=SERVERBIND;
 else     if (ex instanceof LoginException)     msg=SERVERLOGIN;
 else     msg=ex.getMessage();
  }
  final boolean valname=user.getText().matches("[\\w]*");
  final boolean valpass=new String(pass.getPassword()).matches("[\\w]*");
  boolean newname=true;
  for (int r=0; r < users.contents.size(); r++)   newname&=!users.value(r,0).equals(user.getText());
  alter.setEnabled(table.getSelectedRows().length == 1);
  create.setEnabled(valname && valpass && newname&& !user.getText().isEmpty()&& pass.getPassword().length != 0);
  add.setEnabled(addUser.getSelectedIndex() > 0);
  addUser.setEnabled(addUser.getSelectedIndex() > -1);
  boolean valdrop=true;
  for (  final int r : table.getSelectedRows()) {
    valdrop&=!table.data.value(r,0).equals(ADMIN);
  }
  drop.setEnabled(valdrop && table.getSelectedRows().length > 0);
  valdrop|=table.getSelectedRows().length == 1;
  Icon icon=ok ? Icon.OK : Icon.ERR;
  if (msg == null && !(valname && valpass && newname&& valdrop)) {
    msg=!newname ? Main.info(USERKNOWN,user.getText()) : !valdrop ? USERADMIN : Main.info(INVALID,!valname ? SERVERUSER : SERVERPW);
    icon=Icon.WARN;
  }
  info.setText(msg,icon);
}
