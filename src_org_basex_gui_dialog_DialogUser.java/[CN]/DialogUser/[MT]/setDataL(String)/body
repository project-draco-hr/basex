{
  CachedOutput co=new CachedOutput();
  if (!sess.execute(new ShowUsers(db),co))   throw new IOException(sess.info());
  final String users=co.toString();
  co=new CachedOutput();
  if (!sess.execute(new ShowUsers(),co))   throw new IOException(sess.info());
  data=new Table(users);
  removeUser.removeAllItems();
  addUser.removeAllItems();
  tempP.clear();
  final Table data2=new Table(co.toString());
  final StringList tmp1=new StringList();
  for (  final TokenList l : data.contents)   tmp1.add(Token.string(l.get(0)));
  final StringList tmp2=new StringList();
  for (  final TokenList l : data2.contents)   tmp2.add(Token.string(l.get(0)));
  final StringList tmp3=new StringList();
  final StringList tmp4=new StringList();
  for (  final String s : tmp2) {
    if (s.equals(ADMIN))     continue;
    if (!tmp1.contains(s)) {
      tmp3.add(s);
      for (      final TokenList l : data2.contents) {
        if (Token.string(l.get(0)).equals(s)) {
          final StringList tmp=new StringList();
          tmp.add(s);
          tmp.add(Token.string(l.get(1)));
          tmp.add(Token.string(l.get(2)));
          tempP.add(tmp);
        }
      }
    }
 else {
      tmp4.add(s);
    }
  }
  addUser.addItem(numberof(USERS,tmp3.size()));
  removeUser.addItem(numberof(USERS,tmp4.size()));
  for (  final String s : tmp3) {
    addUser.addItem(s);
  }
  for (  final String s : tmp4) {
    removeUser.addItem(s);
  }
  removeUser.setSelectedIndex(0);
  addUser.setSelectedIndex(0);
  ((TableModel)table.getModel()).fireTableChanged(null);
}
