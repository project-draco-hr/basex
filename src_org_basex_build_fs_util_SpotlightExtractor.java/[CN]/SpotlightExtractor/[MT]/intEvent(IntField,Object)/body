{
  long value;
  if (o instanceof Integer)   value=(Integer)o;
 else   if (o instanceof Long)   value=(Long)o;
 else   if (o instanceof Double)   value=((Double)o).longValue();
 else   if (o instanceof Short)   value=(Short)o;
 else   if (o instanceof Byte)   value=(Byte)o;
 else   if (o instanceof Float)   value=((Float)o).longValue();
 else   if (o instanceof String) {
    final byte[] a=((String)o).getBytes();
    int i=0;
    final int len=a.length;
    while (i < len && a[i] >= '0' && a[i] <= '9')     i++;
    value=Token.toLong(a,0,i);
    if (value == Long.MIN_VALUE) {
      BaseX.debug("SpotlightExtractor: invalid value for int field: %",(String)o);
      return;
    }
  }
 else {
    BaseX.debug("SpotlightExtractor: unsupported data type: %",o.getClass().getName());
    return;
  }
  if (value > Integer.MAX_VALUE)   meta.setLong(field,value);
 else   if (value > Short.MAX_VALUE)   meta.setInt(field,(int)value);
 else   meta.setShort(field,(short)value);
  parser.metaEvent(meta);
}
