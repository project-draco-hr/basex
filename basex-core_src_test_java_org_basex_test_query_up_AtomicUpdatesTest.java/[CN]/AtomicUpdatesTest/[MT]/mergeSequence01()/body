{
  final String doc="<a><b/></a>";
  AtomicUpdateCache l=atomics(doc);
  final MemData m=new MemData(l.data);
  l.addInsert(3,2,clipE(m,"<c/>",false),false);
  l.addInsert(3,2,clipE(m,"<d/>",false),false);
  assertEquals(2,l.updatesSize());
  query(transform(doc,"insert node <c/> into $input/b,insert node <d/> into $input/b"),"<a><b><c/><d/></b></a>");
  l=atomics(doc);
  l.addDelete(2);
  l.addInsert(3,1,clipE(m,"<d/>",false),false);
  assertEquals(1,l.updatesSize());
  query(transform(doc,"insert node <d/> into $input,delete node $input/b"),"<a><d/></a>");
  l=atomics("<a><b/><c/></a>");
  l.addDelete(2);
  l.addDelete(3);
  l.addInsert(4,1,clipE(m,"<d/>",false),false);
  assertEquals(2,l.updatesSize());
  query(transform("<a><b/><c/></a>","insert node <d/> into $input," + "delete node $input/c,delete node $input/b"),"<a><d/></a>");
  l=atomics(doc);
  l.addInsert(2,1,clipE(m,"<d/>",false),false);
  l.addDelete(2);
  assertEquals(1,l.updatesSize());
  query(transform(doc,"insert node <d/> into $input,delete node $input/b"),"<a><d/></a>");
}
