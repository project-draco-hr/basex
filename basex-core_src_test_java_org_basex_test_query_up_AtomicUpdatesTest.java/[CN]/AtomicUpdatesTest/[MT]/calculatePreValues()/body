{
  final String doc="<n1>" + "<n2/><n3/><n4/><n5/><n6/><n7/><n8/><n9/><n10/><n11/>" + "</n1>";
  AtomicUpdateCache l=atomics(doc);
  l.addDelete(3);
  l.applyUpdates();
  assertEquals(2,l.calculatePreValue(2,false));
  assertEquals(3,l.calculatePreValue(3,false));
  assertEquals(3,l.calculatePreValue(4,false));
  assertEquals(4,l.calculatePreValue(5,false));
  assertEquals(2,l.calculatePreValue(2,true));
  assertEquals(4,l.calculatePreValue(3,true));
  assertEquals(5,l.calculatePreValue(4,true));
  assertEquals(6,l.calculatePreValue(5,true));
  l=atomics(doc);
  l.addDelete(3);
  l.addDelete(5);
  l.addDelete(7);
  l.applyUpdates();
  assertEquals(2,l.calculatePreValue(2,false));
  assertEquals(3,l.calculatePreValue(3,false));
  assertEquals(3,l.calculatePreValue(4,false));
  assertEquals(4,l.calculatePreValue(5,false));
  assertEquals(4,l.calculatePreValue(6,false));
  assertEquals(5,l.calculatePreValue(7,false));
  assertEquals(5,l.calculatePreValue(8,false));
  assertEquals(2,l.calculatePreValue(2,true));
  assertEquals(4,l.calculatePreValue(3,true));
  assertEquals(6,l.calculatePreValue(4,true));
  assertEquals(8,l.calculatePreValue(5,true));
  assertEquals(9,l.calculatePreValue(6,true));
  assertEquals(10,l.calculatePreValue(7,true));
  assertEquals(11,l.calculatePreValue(8,true));
  l=atomics(doc);
  final MemData m=new MemData(l.data);
  l.addInsert(3,1,clipE(m,"<dummy3/>",true),false);
  l.addInsert(3,1,clipE(m,"<dummy4/>",true),false);
  l.addDelete(3);
  l.applyUpdates();
  assertEquals(1,l.calculatePreValue(1,false));
  assertEquals(2,l.calculatePreValue(2,false));
  assertEquals(5,l.calculatePreValue(3,false));
  assertEquals(7,l.calculatePreValue(4,false));
  assertEquals(8,l.calculatePreValue(5,false));
  assertEquals(9,l.calculatePreValue(6,false));
  assertEquals(1,l.calculatePreValue(1,true));
  assertEquals(2,l.calculatePreValue(2,true));
  assertEquals(3,l.calculatePreValue(3,true));
  assertEquals(4,l.calculatePreValue(4,true));
  assertEquals(3,l.calculatePreValue(5,true));
  assertEquals(4,l.calculatePreValue(6,true));
}
