{
  final Performance perf=Prop.debug ? new Performance() : null;
  final String f=text ? DATATXT : DATAATV;
  final Runtime rt=Runtime.getRuntime();
  final long maxMem=(long)(rt.maxMemory() * 0.9);
  final int type=text ? Data.TEXT : Data.ATTR;
  int cf=0;
  int cc=0;
  for (pre=0; pre < total; pre++) {
    if ((pre & 0x0FFF) == 0) {
      checkStop();
      if (rt.totalMemory() - rt.freeMemory() > maxMem) {
        if (cc >= 0)         throw new IOException(PROCOUTMEM);
        write(f + cf);
        index=new ValueTree();
        Performance.gc(1);
        cc=50;
        cf++;
      }
 else {
        cc--;
      }
    }
    if (data.kind(pre) != type)     continue;
    final byte[] tok=data.text(pre,text);
    if (tok.length <= MAXLEN && !ws(tok))     index.index(tok,pre);
  }
  if (cf == 0) {
    writeSingle(f);
  }
 else {
    write(f + cf);
    index=null;
    cf++;
    final int size=merge(cf);
    final DataAccess da=new DataAccess(data.meta.file(f + 'l'));
    da.writeInt(size);
    da.close();
    DropDB.delete(data.meta.name,f + "\\d+." + IO.BASEXSUFFIX,data.meta.prop);
  }
  if (perf != null) {
    Performance.gc(4);
    Main.debug((text ? "Texts" : "Attributes") + ": " + perf+ " ("+ Performance.getMem()+ ")");
  }
  return new Values(data,text);
}
