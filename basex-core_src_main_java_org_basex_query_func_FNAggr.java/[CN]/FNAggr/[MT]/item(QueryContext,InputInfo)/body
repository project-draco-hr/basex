{
  final Iter iter=qc.iter(exprs[0]);
switch (func) {
case COUNT:
    long c=iter.size();
  if (c == -1) {
    do {
      qc.checkStop();
      ++c;
    }
 while (iter.next() != null);
  }
return Int.get(c);
case MIN:
return minmax(iter,OpV.GT,qc);
case MAX:
return minmax(iter,OpV.LT,qc);
case SUM:
if (exprs[0] instanceof RangeSeq) {
final RangeSeq rs=(RangeSeq)exprs[0];
final long s=rs.itemAt(0).itr(ii);
if (s == 0 || s == 1) {
final long n=rs.size();
return Int.get(n < 3037000500L ? n * (n + 1) / 2 : BigInteger.valueOf(n).multiply(BigInteger.valueOf(n + 1)).divide(BigInteger.valueOf(2)).longValue());
}
}
Item it=iter.next();
return it != null ? sum(iter,it,false) : exprs.length == 2 ? exprs[1].item(qc,info) : Int.get(0);
case AVG:
it=iter.next();
return it == null ? null : sum(iter,it,true);
default :
return super.item(qc,ii);
}
}
