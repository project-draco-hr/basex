{
  final Expr e=exprs[0];
  if (e.has(Flag.NDT) || e.has(Flag.UPD) || e instanceof VarRef)   return this;
  final long c=e.size();
switch (func) {
case COUNT:
    if (c >= 0)     return Int.get(c);
  if (e instanceof FNMap) {
    final FNMap f=(FNMap)e;
    if (f.func == Function._MAP_KEYS)     return Function._MAP_SIZE.get(sc,info,f.exprs);
  }
break;
case SUM:
if (c == 0) return exprs.length == 2 ? exprs[1] : Int.get(0);
final Type a=e.seqType().type, b=exprs.length == 2 ? exprs[1].seqType().type : a;
if (a.isNumberOrUntyped() && b.isNumberOrUntyped()) seqType=Calc.type(a,b).seqType();
break;
default :
break;
}
return this;
}
