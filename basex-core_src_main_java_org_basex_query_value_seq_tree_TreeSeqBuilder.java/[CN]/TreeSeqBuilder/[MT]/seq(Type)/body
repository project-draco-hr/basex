{
  final int n=inLeft + inRight;
  final int start=(mid - inLeft + CAP) % CAP;
  if (n < 2)   throw new AssertionError("At least 2 items expected");
  if (n <= TreeSeq.MAX_SMALL)   return new SmallSeq(items(start,n),ret);
  final int ll=tree.isEmpty() ? n / 2 : inLeft;
  return new BigSeq(items(start,ll),tree.freeze(),items(start + ll,n - ll),ret);
}
