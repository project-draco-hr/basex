{
  execute(new Close());
  query(_DB_CREATE.args(NAME));
  query(_DB_EXISTS.args(NAME),true);
  query(_DB_CREATE.args(NAME,"<dummy/>","t1.xml"));
  query(_DB_OPEN.args(NAME) + "/root()","<dummy/>");
  query(_DB_CREATE.args(NAME," document { <dummy/> }","t2.xml"));
  query(_DB_OPEN.args(NAME) + "/root()","<dummy/>");
  query(_DB_CREATE.args(NAME,"\"<dummy/>\"","t1.xml"));
  query(_DB_OPEN.args(NAME) + "/root()","<dummy/>");
  query(_DB_CREATE.args(NAME,"<dummy/>","t1.xml"));
  query(_DB_CREATE.args(NAME,"<dummy/>","t1.xml"));
  query(_DB_OPEN.args(NAME) + "/root()","<dummy/>");
  error(_DB_CREATE.args(NAME) + ',' + _DB_CREATE.args(NAME),BXDB_ONCE_X_X);
  query(_DB_CREATE.args(NAME,XML,"in/"));
  query(COUNT.args(COLLECTION.args(NAME + "/in/input.xml") + "/html"),"1");
  query(_DB_CREATE.args(NAME,FLDR,"test/dir"));
  query(COUNT.args(COLLECTION.args(NAME + "/test/dir")),XMLFILES);
  query(_DB_CREATE.args(NAME,"(<a/>,<b/>)","('1.xml','2.xml')"));
  query(_DB_CREATE.args(NAME,"(<a/>,'" + XML + "')","('1.xml','2.xml')"));
  error(_DB_CREATE.args(NAME,"()","1.xml"),BXDB_CREATEARGS_X_X);
  error(_DB_CREATE.args(NAME,"(<a/>,<b/>)","1.xml"),BXDB_CREATEARGS_X_X);
  query("for $i in 1 to 5 return " + _DB_CREATE.args(" '" + NAME + "' || $i"));
  query("for $i in 1 to 5 return " + _DB_DROP.args(" '" + NAME + "' || $i"));
  error(_DB_CREATE.args(""),BXDB_NAME_X);
  query(_DB_DROP.args(NAME));
  error(_DB_CREATE.args(NAME) + ',' + _DB_DROP.args(NAME),BXDB_WHICH_X);
  query(_DB_CREATE.args(NAME,"<a/>","a.xml"));
  query("insert node <dummy/> into " + _DB_OPEN.args(NAME));
  query(_DB_CREATE.args(NAME,"<dummy/>","t1.xml") + ", insert node <dummy/> into " + _DB_OPEN.args(NAME)+ ','+ _DB_DROP.args(NAME));
  query(_DB_OPEN.args(NAME) + "/root()","<dummy/>");
  query(_DB_DROP.args(NAME));
  for (  final boolean b : new boolean[]{false,true}) {
    query(_DB_CREATE.args(NAME,"()","()"," map { '" + lc(MainOptions.UPDINDEX) + "':"+ b+ "() }"));
    query(_DB_INFO.args(NAME) + "//" + lc(MainOptions.UPDINDEX)+ "/text()",b);
  }
  assertEquals(context.options.get(MainOptions.UPDINDEX),false);
  final String[] numberOptions=lc(MainOptions.MAXCATS,MainOptions.MAXLEN,MainOptions.SPLITSIZE);
  final String[] boolOptions=lc(MainOptions.TEXTINDEX,MainOptions.ATTRINDEX,MainOptions.TOKENINDEX,MainOptions.FTINDEX,MainOptions.STEMMING,MainOptions.CASESENS,MainOptions.DIACRITICS);
  final String[] stringOptions=lc(MainOptions.LANGUAGE,MainOptions.STOPWORDS);
  for (  final String option : numberOptions) {
    query(_DB_CREATE.args(NAME,"()","()"," map { '" + option + "':1 }"));
  }
  for (  final String option : boolOptions) {
    for (    final boolean v : new boolean[]{true,false}) {
      query(_DB_CREATE.args(NAME,"()","()"," map { '" + option + "':"+ v+ "() }"));
    }
  }
  for (  final String option : stringOptions) {
    query(_DB_CREATE.args(NAME,"()","()"," map { '" + option + "':'' }"));
  }
  query(_DB_CREATE.args(NAME," '<a> </a>'","a.xml"," map { '" + lc(MainOptions.CHOP) + "':true() }"));
  query(_DB_OPEN.args(NAME),"<a/>");
  query(_DB_CREATE.args(NAME," '<a> </a>'","a.xml"," map { '" + lc(MainOptions.CHOP) + "':false() }"));
  query(_DB_OPEN.args(NAME),"<a> </a>");
  error(_DB_CREATE.args(NAME,"()","()"," map { 'xyz':'abc' }"),BASX_OPTIONS_X);
  error(_DB_CREATE.args(NAME,"()","()"," map { '" + lc(MainOptions.MAXLEN) + "':-1 }"),BASX_VALUE_X_X);
  error(_DB_CREATE.args(NAME,"()","()"," map { '" + lc(MainOptions.MAXLEN) + "':'a' }"),BASX_VALUE_X_X);
  error(_DB_CREATE.args(NAME,"()","()"," map { '" + lc(MainOptions.TEXTINDEX) + "':'nope' }"),BASX_VALUE_X_X);
}
