{
  if ((resultWordA == null && resultWordB == null) || resultWordA == null) {
    return null;
  }
  if (resultWordB == null) {
    return resultWordA;
  }
  int i=0;
  int k=0;
  int count=0;
  final int[][] maxResult=new int[2][resultWordA[0].length];
  for (; i < resultWordA[0].length; i++) {
    while (k < resultWordB[0].length && resultWordA[0][i] > resultWordB[0][k]) {
      k++;
    }
    if (k == resultWordB[0].length) {
      break;
    }
    if (resultWordA[0][i] == resultWordB[0][k]) {
      while (i < resultWordA[0].length - 1 && resultWordA[0][i] == resultWordA[0][i + 1]) {
        i++;
      }
      while (k < resultWordB[0].length - 1 && resultWordB[0][k] == resultWordB[0][k + 1]) {
        k++;
      }
      k++;
    }
 else {
      maxResult[0][count]=resultWordA[0][i];
      maxResult[1][count]=resultWordA[1][i];
      count++;
    }
  }
  int[][] result;
  if (i == resultWordA[0].length) {
    if (count == 0) {
      return null;
    }
    result=new int[2][count];
    System.arraycopy(maxResult[0],0,result[0],0,count);
    System.arraycopy(maxResult[1],0,result[1],0,count);
  }
 else {
    result=new int[2][count + resultWordA[0].length - i];
    System.arraycopy(maxResult[0],0,result[0],0,count);
    System.arraycopy(maxResult[1],0,result[1],0,count);
    System.arraycopy(resultWordA[0],i,result[0],count,resultWordA[0].length - i);
    System.arraycopy(resultWordA[1],i,result[1],count,resultWordA[0].length - i);
  }
  return result;
}
