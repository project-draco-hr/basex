{
  final byte[] nm=name.ln();
  final Levenshtein ls=new Levenshtein();
  for (int k=1; k < size; ++k) {
    final byte[] ln=substring(keys[k],indexOf(keys[k],'}') + 1);
    if (eq(nm,ln)) {
      qp.error(FUNSIMILAR,name,keys[k]);
    }
 else     if (ls.similar(nm,ln,0)) {
      qp.error(FUNSIMILAR,name,ln);
    }
  }
}
