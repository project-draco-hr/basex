{
  BigDecimal d=days;
  BigDecimal t=d.add(BD36525).multiply(BD4).divideToIntegralValue(BD146097).subtract(BigDecimal.ONE);
  BigDecimal y=BD100.multiply(t);
  d=d.subtract(BD36524.multiply(t).add(t.divideToIntegralValue(BD4)));
  t=d.add(BD366).multiply(BD4).divideToIntegralValue(BD1461).subtract(BigDecimal.ONE);
  y=y.add(t);
  d=d.subtract(BD365.multiply(t).add(t.divideToIntegralValue(BD4)));
  final BigDecimal m=BD5.multiply(d).add(BD2).divideToIntegralValue(BD153);
  d=d.subtract(BD153.multiply(m).add(BD2).divideToIntegralValue(BD5));
  long mm=m.longValue();
  if (mm > 9) {
    mm-=12;
    y=y.add(BigDecimal.ONE);
  }
  return new long[]{y.subtract(BigDecimal.valueOf(ADD_NEG)).longValue(),mm + 2,d.longValue()};
}
