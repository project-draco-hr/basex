{
  if (par < 0)   return;
  int l=par + d.size(par,d.kind(par));
  int p=first == -1 ? par + 1 : first - 1;
  while (p < l) {
    final int k=d.kind(p);
    if (k == Data.ELEM)     p+=d.size(p,k);
 else     if (p < l - 1 && k == Data.TEXT && UpdatePrimitive.mergeTexts(d,p,p + 1))     --l;
 else     ++p;
  }
}
