{
  super.check();
  int p=nodes.size() - 1;
  int par=-1;
  while (p >= 0) {
    if (par == nodes.get(p) && --p < 0)     break;
    int pre=nodes.get(p);
    final int k=d.kind(pre);
    if (k == Data.ATTR) {
      par=d.parent(pre,k);
      final IntList il=new IntList();
      while (p >= 0 && (pre=nodes.get(p)) > par) {
        il.add(pre);
        --p;
      }
      if (par != -1)       il.add(par);
      checkNames(il.toArray());
    }
 else {
      if (k == Data.ELEM)       checkNames(pre);
      --p;
    }
  }
}
