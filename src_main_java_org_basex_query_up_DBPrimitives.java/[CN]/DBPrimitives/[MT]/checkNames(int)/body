{
  final NamePool pool=new NamePool();
  final IntList il=new IntList();
  for (  final int pre : pres) {
    final NodePrimitives ups=op.get(pre);
    if (ups != null)     for (    final UpdatePrimitive up : ups)     up.update(pool);
    if (d.kind(pre) == Data.ATTR) {
      il.add(pre);
    }
 else {
      final int ps=pre + d.attSize(pre,Data.ELEM);
      for (int p=pre + 1; p < ps; ++p) {
        final byte[] nm=d.name(p,Data.ATTR);
        if (!il.contains(p)) {
          final QNm name=new QNm(nm);
          final byte[] uri=d.ns.uri(d.ns.uri(nm,p));
          if (uri != null)           name.uri(uri);
          pool.add(name,NodeType.ATT);
        }
      }
    }
  }
  final QNm dup=pool.duplicate();
  if (dup != null)   UPATTDUPL.thrw(null,dup);
  if (!pool.nsOK())   UPNSCONFL2.thrw(null);
}
