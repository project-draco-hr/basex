{
  final int l=nodes.size();
  int ni=0;
  int c=0;
  while (ni < l - 1) {
    final int pre=nodes.get(ni++);
    if (op.get(pre).updatesDestroyIdentity()) {
      final int followingAxisPre=pre + d.size(pre,d.kind(pre));
      while (ni < l && nodes.get(ni) < followingAxisPre) {
        nodes.set(-1,ni++);
        c++;
      }
    }
  }
  if (c == 0)   return;
  final IntList newNodes=new IntList(nodes.size() - c);
  for (int i=0; i < nodes.size(); i++) {
    final int pre=nodes.get(i);
    if (pre != -1)     newNodes.add(pre);
  }
  nodes=newNodes;
}
