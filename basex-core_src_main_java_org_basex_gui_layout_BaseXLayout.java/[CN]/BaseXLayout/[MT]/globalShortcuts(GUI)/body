{
  if (keys == null) {
    keys=new KeyAdapter(){
      @Override public void keyPressed(      final KeyEvent e){
        if (gui.context.data() != null) {
          if (GOBACK.is(e)) {
            GUICommands.C_GOBACK.execute(gui);
          }
 else           if (GOFORWARD.is(e)) {
            GUICommands.C_GOFORWARD.execute(gui);
          }
 else           if (GOUP.is(e)) {
            GUICommands.C_GOUP.execute(gui);
          }
 else           if (GOHOME.is(e)) {
            GUICommands.C_GOHOME.execute(gui);
          }
        }
        if (INPUTBAR.is(e))         gui.input.requestFocusInWindow();
        if (PROJECT.is(e) || FILTER.is(e)) {
          if (!gui.gopts.get(GUIOptions.SHOWPROJECT)) {
            gui.gopts.invert(GUIOptions.SHOWPROJECT);
            gui.editor.project();
          }
          gui.editor.focus(FILTER.is(e));
        }
        final int fs=gui.gopts.get(GUIOptions.FONTSIZE);
        int nfs=fs;
        if (INCFONT1.is(e) || INCFONT2.is(e)) {
          nfs=fs + 1;
        }
 else         if (DECFONT.is(e)) {
          nfs=Math.max(1,fs - 1);
        }
 else         if (NORMFONT.is(e)) {
          nfs=13;
        }
        if (fs != nfs) {
          gui.gopts.set(GUIOptions.FONTSIZE,nfs);
          gui.updateLayout();
        }
      }
    }
;
  }
  return keys;
}
