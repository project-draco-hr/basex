{
  if (left.length < 4) {
    final Node<N,E>[] newLeft=slice(left,-1,left.length);
    newLeft[0]=fst;
    return new Deep<>(newLeft,leftSize + fst.size(),middle,right,size + fst.size());
  }
  final Node<N,E>[] newLeft=slice(left,-1,1);
  newLeft[0]=fst;
  final FingerTree<Node<N,E>,E> mid=middle.cons(new InnerNode3<>(left[1],left[2],left[3]));
  return Deep.get(newLeft,mid,right,size + fst.size());
}
