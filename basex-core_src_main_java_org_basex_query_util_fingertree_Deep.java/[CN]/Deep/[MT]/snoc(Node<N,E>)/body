{
  if (right.length < 4) {
    final Node<N,E>[] newRight=slice(right,0,right.length + 1);
    newRight[right.length]=lst;
    return new Deep<>(left,leftSize,middle,newRight,size + lst.size());
  }
  final FingerTree<Node<N,E>,E> mid=middle.snoc(new InnerNode3<>(right[0],right[1],right[2]));
  final Node<N,E>[] newRight=slice(right,3,5);
  newRight[1]=lst;
  return new Deep<>(left,leftSize,mid,newRight,size + lst.size());
}
