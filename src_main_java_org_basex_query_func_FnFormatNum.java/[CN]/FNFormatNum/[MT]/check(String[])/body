{
  for (  final String pat : patterns) {
    boolean frac=false, pas=false, act=false;
    boolean dig=false, opt1=false, opt2=false;
    int pc=0, pm=0;
    for (int i=0; i < pat.length(); i++) {
      final char ch=pat.charAt(i);
      final boolean a=ACTIVE.indexOf(ch) != -1;
      final boolean p=PASSIVE.indexOf(ch) != -1;
      if (ch == DECIMAL) {
        if (frac)         errPic(pat);
        frac=true;
      }
 else       if (ch == GROUP) {
        if (i > 0 && pat.charAt(i - 1) == DECIMAL || i + 1 < pat.length() && pat.charAt(i + 1) == DECIMAL)         errPic(pat);
      }
 else       if (ch == PERCENT) {
        pc++;
      }
 else       if (ch == PERMILLE) {
        pm++;
      }
 else       if (ch == OPTIONAL) {
        if (!frac) {
          if (dig)           errPic(pat);
          opt1=true;
        }
 else {
          opt2=true;
        }
      }
 else       if (DIGITS.indexOf(ch) != -1) {
        if (frac && opt2)         errPic(pat);
        dig=true;
      }
 else       if (ch != MINUS) {
        errPic(pat);
      }
      if (a && pas && act)       errPic(pat);
      if (act)       pas|=p;
      act|=a;
    }
    if (pc > 1 || pm > 1 || pc + pm > 1)     errPic(pat);
    if (!opt1 && !opt2 && !dig)     errPic(pat);
  }
}
