{
  if (expr.length == 0)   return listDBs(ctx);
  final Data data=data(0,ctx);
  final String path=string(expr.length == 1 ? EMPTY : checkStr(expr[1],ctx));
  final IntList il=data.resources.docs(path);
  final TokenList tl=data.resources.binaries(path);
  return new Iter(){
    final int is=il.size(), ts=tl.size();
    int ip, tp;
    @Override public ANode get(    final long i) throws QueryException {
      if (i < is) {
        final byte[] pt=data.text(il.get((int)i),true);
        return resource(pt,false,0,APP_XML,data.meta.time);
      }
      if (i < is + ts) {
        final byte[] pt=tl.get((int)i - is);
        final IO io=data.meta.binary(string(pt));
        return resource(pt,true,io.length(),token(MimeTypes.get(io.path())),io.timeStamp());
      }
      return null;
    }
    @Override public ANode next() throws QueryException {
      return ip < is ? get(ip++) : tp < ts ? get(ip + tp++) : null;
    }
    @Override public boolean reset(){
      ip=0;
      tp=0;
      return true;
    }
    @Override public long size(){
      return ip + is;
    }
  }
;
}
