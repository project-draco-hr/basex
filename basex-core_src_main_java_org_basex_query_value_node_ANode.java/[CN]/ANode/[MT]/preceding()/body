{
  return new BasicNodeIter(){
    /** 
 * Iterator. 
 */
    private BasicNodeIter iter;
    @Override public ANode next(){
      if (iter == null) {
        final ANodeList list=new ANodeList();
        ANode n=ANode.this;
        ANode p=n.parent();
        while (p != null) {
          if (n.type != NodeType.ATT) {
            final ANodeList tmp=new ANodeList();
            for (            final ANode c : p.children()) {
              if (c.is(n))               break;
              tmp.add(c.finish());
              addDesc(c.children(),tmp);
            }
            for (int t=tmp.size() - 1; t >= 0; t--)             list.add(tmp.get(t));
          }
          n=p;
          p=p.parent();
        }
        iter=list.iter();
      }
      return iter.next();
    }
  }
;
}
