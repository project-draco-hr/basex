{
  if (where != null) {
    final ForLet f=fl[fl.length - 1];
    if (f instanceof For && f.standard() && where.removable(f.var,ctx)) {
      if (!where.returned(ctx).num) {
        ctx.compInfo(OPTWHERE);
        final Expr w=where.remove(f.var);
        if (f.expr instanceof AxisPath) {
          f.expr=((AxisPath)f.expr).addPred(w);
        }
 else {
          fl[fl.length - 1].expr=new Pred(f.expr,w);
        }
        where=null;
      }
    }
  }
  final Expr ex=super.comp(ctx);
  if (ex != this)   return ex;
  for (int f=0; f != fl.length; f++) {
    if (fl[f].var.expr != null) {
      ctx.compInfo(OPTVAR,fl[f].var);
      fl=Array.delete(fl,f--);
    }
  }
  if (fl.length == 0) {
    ctx.compInfo(OPTFLWOR);
    return where != null ? new If(where,ret,Seq.EMPTY) : ret;
  }
  if (where == null && fl.length == 1 && fl[0].standard() && ret instanceof VarCall) {
    final Var v=((VarCall)ret).var;
    if (v.type == null && fl[0].var.eq(v)) {
      ctx.compInfo(OPTFLWOR);
      return fl[0].expr.comp(ctx);
    }
  }
  return this;
}
