{
  if (e < 7) {
    for (int i=s; i < e + s; i++)     for (int j=i; j > s && d(o,j - 1,j) > 0; j--)     s(o,j,j - 1);
    return;
  }
  int m=s + (e >> 1);
  if (e > 7) {
    int l=s;
    int n=s + e - 1;
    if (e > 40) {
      final int k=e >>> 3;
      l=m(o,l,l + k,l + (k << 1));
      m=m(o,m - k,m,m + k);
      n=m(o,n - (k << 1),n - k,n);
    }
    m=m(o,l,m,n);
  }
  final Item[] im=new Item[ob.length];
  for (int k=0; k < ob.length; k++)   im[k]=ob[k].item(o[m]);
  int a=s, b=a, c=s + e - 1, d=c;
  while (true) {
    while (b <= c) {
      final int h=d(o,b,im);
      if (h > 0)       break;
      if (h == 0)       s(o,a++,b);
      b++;
    }
    while (c >= b) {
      final int h=d(o,c,im);
      if (h < 0)       break;
      if (h == 0)       s(o,c,d--);
      c--;
    }
    if (b > c)     break;
    s(o,b++,c--);
  }
  int k;
  final int n=s + e;
  k=Math.min(a - s,b - a);
  s(o,s,b - k,k);
  k=Math.min(d - c,n - d - 1);
  s(o,b,n - k,k);
  if ((k=b - a) > 1)   sort(o,s,k);
  if ((k=d - c) > 1)   sort(o,n - k,k);
}
