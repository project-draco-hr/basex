{
  DropDB.drop(name,context);
  context.mprop.dbpath(name).md();
  final IO file=parser.src;
  final MetaData md=new MetaData(name,context);
  md.original=file != null ? file.path() : "";
  md.filesize=file != null ? file.length() : 0;
  md.time=file != null ? file.timeStamp() : System.currentTimeMillis();
  md.dirty=true;
  final Runtime rt=Runtime.getRuntime();
  int bs=(int)Math.min(md.filesize,Math.min(1 << 22,rt.maxMemory() - rt.freeMemory() >> 2));
  bs=Math.max(IO.BLOCKSIZE,bs - bs % IO.BLOCKSIZE);
  tout=new DataOutput(new TableOutput(md,DATATBL));
  xout=new DataOutput(md.dbfile(DATATXT),bs);
  vout=new DataOutput(md.dbfile(DATAATV),bs);
  sout=new DataOutput(md.dbfile(DATATMP),bs);
  final Names tags=new Names(md);
  final Names atts=new Names(md);
  parse(md,tags,atts);
  close();
  final TableAccess ta=new TableDiskAccess(md);
  ta.writeLock(true);
  final DataInput in=new DataInput(md.dbfile(DATATMP));
  for (; spos < ssize; ++spos)   ta.write4(in.readNum(),8,in.readNum());
  ta.close();
  in.close();
  md.dbfile(DATATMP).delete();
  return new DiskData(md,tags,atts,path,ns);
}
