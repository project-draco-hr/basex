{
  if (consume('#')) {
    final TokenBuilder ent=new TokenBuilder();
    int ch=nextChar();
    ent.add(ch);
    int b=10;
    if (ch == 'x') {
      b=0x10;
      ent.add(ch=nextChar());
    }
    int n=0;
    do {
      final boolean m=ch >= '0' && ch <= '9';
      final boolean h=b == 0x10 && (ch >= 'a' && ch <= 'f' || ch >= 'A' && ch <= 'F');
      if (!m && !h) {
        completeRef(ent);
        return QUESTION;
      }
      n*=b;
      n+=ch & 0x0F;
      if (!m)       n+=9;
      ent.add(ch=nextChar());
    }
 while (ch != ';');
    if (!valid(n))     return QUESTION;
    ent.reset();
    ent.add(n);
    return ent.finish();
  }
  final byte[] name=name(false);
  if (!consume(';'))   return QUESTION;
  if (!e)   return concat(AMPER,name,SEMI);
  byte[] en=ents.get(name);
  if (en == null)   en=getEntity(name);
  return en == null ? QUESTION : en;
}
