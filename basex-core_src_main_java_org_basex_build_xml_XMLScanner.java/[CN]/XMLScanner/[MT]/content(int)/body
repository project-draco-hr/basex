{
  type=Type.TEXT;
  boolean f=true;
  int c=ch;
  while (c != 0) {
    if (c == '<') {
      if (!f && !isCDATA()) {
        text=false;
        prev(1);
        return;
      }
      cDATA();
    }
 else {
      if (c == '&') {
        final byte[] r=ref(true);
        if (r.length == 1)         token.add(r);
 else         if (!input.add(r,false))         throw error(RECENT);
      }
 else {
        if (c == ']') {
          if (consume() == ']') {
            if (consume() == '>')             throw error(CONTCDATA);
            prev(1);
          }
          prev(1);
        }
        token.add(c);
      }
    }
    c=consume();
    f=false;
  }
  if (!fragment) {
    if (!ws(token.toArray()))     throw error(AFTERROOT);
    type=Type.EOF;
  }
}
