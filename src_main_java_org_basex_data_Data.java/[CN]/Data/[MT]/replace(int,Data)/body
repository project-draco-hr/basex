{
  final int dsize=d.meta.size;
  buffer(dsize);
  int dpre=-1;
  final int rkind=kind(rpre);
  while (++dpre != dsize) {
    final int dkind=d.kind(dpre);
    final int dpar=d.parent(dpre,dkind);
    final int pre=rpre + dpre;
    final int dis=dpar >= 0 ? dpre - dpar : pre - parent(rpre,rkind);
switch (dkind) {
case DOC:
      doc(pre,d.size(dpre,dkind),d.text(dpre,true));
    meta.ndocs++;
  break;
case ELEM:
byte[] nm=d.name(dpre,dkind);
elem(dis,tags.index(nm,null,false),d.attSize(dpre,dkind),d.size(dpre,dkind),ns.uri(nm,true),false);
break;
case TEXT:
case COMM:
case PI:
text(pre,dis,d.text(dpre,true),dkind);
break;
case ATTR:
nm=d.name(dpre,dkind);
attr(pre,dis,atts.index(nm,null,false),d.text(dpre,false),ns.uri(nm,false),false);
break;
}
}
final int rsize=size(rpre,rkind);
final int rpar=parent(rpre,rkind);
final int diff=dsize - rsize;
table.replace(rpre,buffer(),rsize);
buffer(1);
if (diff == 0) return;
int p=rpar;
while (p >= 0) {
final int k=kind(p);
size(p,k,size(p,k) + diff);
p=parent(p,k);
}
updateDist(rpre + dsize,diff);
}
