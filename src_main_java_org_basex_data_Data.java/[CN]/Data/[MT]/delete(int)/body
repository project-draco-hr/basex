{
  meta.update();
  int k=kind(pre);
  int s=size(pre,k);
  final boolean empty=pre == 0 && s == meta.size;
  if (!empty)   docindex.delete(pre,s);
  if (meta.updindex) {
    indexDelete(pre,s);
  }
  if (k != DOC && k != ELEM)   delete(pre,k != ATTR);
  ns.delete(pre,s);
  int par=pre;
  if (k == ATTR) {
    par=parent(par,ATTR);
    attSize(par,ELEM,attSize(par,ELEM) - 1);
    size(par,ELEM,size(par,ELEM) - 1);
    k=kind(par);
  }
  while (par > 0 && k != DOC) {
    par=parent(par,k);
    k=kind(par);
    size(par,k,size(par,k) - s);
  }
  int p=pre;
  if (empty) {
    ++p;
    --s;
  }
 else   if (kind(p) == DOC) {
    --meta.ndocs;
  }
  if (meta.updindex) {
    idmap.delete(pre,id(pre),-s);
  }
  table.delete(pre,s);
  updateDist(p,-s);
  ns.update(pre,s,false,null);
  if (empty) {
    doc(1,EMPTY);
    table.set(0,buffer());
    if (meta.updindex)     idmap.insert(0,id(0),1);
  }
}
