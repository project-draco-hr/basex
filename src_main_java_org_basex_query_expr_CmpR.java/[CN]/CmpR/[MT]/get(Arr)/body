{
  if (!(ex instanceof CmpG || ex instanceof CmpV) || !ex.exprAndItem(true))   return ex;
  final Expr e=ex.expr[0];
  final double d=((Item)ex.expr[1]).dbl(ex.input);
switch (ex instanceof CmpG ? ((CmpG)ex).cmp.cmp : ((CmpV)ex).cmp) {
case EQ:
    return new CmpR(ex.input,e,d,true,d,true);
case GE:
  return new CmpR(ex.input,e,d,true,Double.POSITIVE_INFINITY,true);
case GT:
return new CmpR(ex.input,e,d,false,Double.POSITIVE_INFINITY,true);
case LE:
return new CmpR(ex.input,e,Double.NEGATIVE_INFINITY,true,d,true);
case LT:
return new CmpR(ex.input,e,Double.NEGATIVE_INFINITY,true,d,false);
default :
}
return ex;
}
