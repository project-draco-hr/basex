{
  final List<NodeUpdate> l=new ArrayList<>();
  Collections.addAll(l,order);
  final List<NodeUpdate> l2=new ArrayList<>();
  for (  final NodeUpdate p : order)   l2.add(0,p);
  final NodeUpdateComparator c=new NodeUpdateComparator();
  Collections.sort(l,c);
  Collections.sort(l2,c);
  final int s=order.length;
  for (int i=0; i < s; i++) {
    final NodeUpdate p=l.get(s - i - 1);
    final NodeUpdate p2=l2.get(s - i - 1);
    if (!p.equals(order[i]) || !p2.equals(order[i]))     fail("Unexpected order of updates at position: " + i);
  }
}
