{
  StreamingOutput so=null;
  if (isQuery) {
    final Document pvDoc=(Document)input;
    so=new StreamingOutput(){
      @Override public void write(      final OutputStream out){
        final Context ctx=new Context();
        if (!new Open(resource).exec(ctx))         throw new WebApplicationException(Response.Status.NOT_FOUND);
        final Map<String,String> params=getParams(pvDoc);
        query(params.get("query"),out,ctx,params.get("wrap"),params.get("output"),params.get("start"),params.get("count"));
        ctx.close();
      }
    }
;
  }
 else {
    final InputStream inputStream=(InputStream)input;
    final Context ctx=new Context();
    try {
      if (new Open(resource).exec(ctx)) {
        final SAXSource saxSource=new SAXSource(new InputSource(inputStream));
        final Parser parser=new SAXWrapper(saxSource,ctx.prop);
        ctx.data.insert(ctx.data.meta.size,-1,new MemBuilder(parser).build(new Date() + ".xml"));
      }
    }
 catch (    final IOException exce) {
      throw new WebApplicationException(exce);
    }
 finally {
      try {
        ctx.close();
      }
 catch (      final Exception ex) {
      }
    }
  }
  return Response.ok(so).build();
}
