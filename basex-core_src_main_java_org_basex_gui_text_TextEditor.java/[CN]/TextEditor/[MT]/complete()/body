{
  if (selected())   return;
  final boolean space=pos > 0 && ws(text[pos - 1]);
  if (space)   pos--;
  for (int s=0; s < REPLACE.size(); s+=2) {
    final String key=REPLACE.get(s);
    if (!find(key))     continue;
    String value=REPLACE.get(s + 1);
    final int p=pos - key.length(), cursor=value.indexOf('_');
    if (cursor != -1)     value=value.replace("_","");
    final int ind=open();
    if (ind != 0) {
      final StringBuilder spaces=new StringBuilder();
      for (int i=0; i < ind; i++)       spaces.append(' ');
      value=new TokenBuilder().addSep(value.split("\n"),"\n" + spaces).toString();
    }
    replace(p,pos + (space ? 1 : 0),value);
    pos(cursor != -1 ? p + cursor : pos);
  }
  int p=pos;
  while (--p >= 0 && XMLToken.isChar(text[p]))   ;
  ++p;
  final String key=Token.string(text,p,pos - p);
  final byte[] value=XMLToken.getEntity(token(key));
  if (value != null) {
    replace(p,pos + (space ? 1 : 0),string(value));
    return;
  }
  if (space)   pos++;
}
