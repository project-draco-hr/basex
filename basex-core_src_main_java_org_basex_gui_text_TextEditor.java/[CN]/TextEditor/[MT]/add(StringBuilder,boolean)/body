{
  if (sb.length() == 0)   return 0;
  int move=0;
  if (!selected && gopts.get(GUIOptions.AUTO)) {
    final char ch=sb.charAt(0);
    final int next=pos + 1 < size() ? text[pos + 1] : 0;
    final int curr=pos < size() ? text[pos] : 0;
    final int prev=pos > 0 ? text[pos - 1] : 0;
    final int pprv=pos > 1 ? text[pos - 2] : 0;
    final int open=OPENING.indexOf(ch);
    if (open != -1) {
      if (!XMLToken.isChar(curr)) {
        sb.append(CLOSING.charAt(open));
        move=1;
      }
    }
 else     if (CLOSING.indexOf(ch) != -1) {
      if (ch == curr) {
        sb.setLength(0);
        move=1;
      }
      close();
    }
 else     if (ch == '"' || ch == '\'') {
      if (ch == curr)       sb.setLength(0);
 else       if (!XMLToken.isNCChar(prev))       sb.append(ch);
      move=1;
    }
 else     if (ch == '>') {
      closeElem(sb);
      move=1;
    }
 else     if (ch == ':') {
      if (prev == '(') {
        sb.append(":");
        if (curr != ')')         sb.append(')');
        move=1;
      }
    }
 else     if (ch == '~') {
      if (prev == ':' && pprv == '(') {
        sb.append("\n : \n ");
        if (curr != ':') {
          sb.append(':');
          if (curr != ')')           sb.append(')');
        }
 else         if (next != ')') {
          sb.append(')');
        }
        move=5;
      }
    }
 else     if (ch == '-') {
      if (prev == '-' && pprv == '!' && pos > 2 && text[pos - 3] == '<') {
        sb.append("  -->\n");
        move=2;
      }
    }
 else     if (ch == '?') {
      if (prev == '<') {
        sb.append(" ?>\n");
        move=1;
      }
    }
  }
  add(sb.toString());
  return move;
}
