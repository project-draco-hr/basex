{
  final DataOutput outl=new DataOutput(data.meta.file(name + 'l'));
  final DataOutput outr=new DataOutput(data.meta.file(name + 'r'));
  outl.write4(index.size());
  index.init();
  while (index.more()) {
    outr.write5(outl.size());
    final int i=index.next();
    final byte[] pres=index.pres.get(i);
    final int is=Num.size(pres);
    if (all) {
      int v=0;
      for (int ip=4; ip < is; ip+=Num.len(pres,ip))       ++v;
      outl.writeNum(v);
      for (int ip=4, o=0; ip < is; ip+=Num.len(pres,ip)) {
        final int p=Num.read(pres,ip);
        outl.writeNum(p - o);
        o=p;
      }
    }
 else {
      final byte[] tmp=new byte[4 + is];
      Num.size(tmp,4);
      for (int ip=4, o=0; ip < is; ip+=Num.len(pres,ip)) {
        final int p=Num.read(pres,ip);
        Num.add(tmp,p - o);
        o=p;
      }
      outl.write(tmp,0,Num.size(tmp));
    }
  }
  outl.close();
  outr.close();
  if (!all) {
    final DataOutput outt=new DataOutput(data.meta.file(name + 't'));
    index.init();
    while (index.more())     outt.writeToken(index.tokens.get(index.next()));
    outt.close();
  }
}
