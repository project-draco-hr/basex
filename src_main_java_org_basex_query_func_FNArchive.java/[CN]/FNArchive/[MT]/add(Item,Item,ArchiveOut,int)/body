{
  final String name=string(entry.string(info));
  if (name.isEmpty())   ARCH_EMPTY.thrw(info);
  final ZipEntry ze=new ZipEntry(name);
  String en=null;
  byte[] lvl=null;
  if (entry instanceof ANode) {
    final ANode el=(ANode)entry;
    lvl=el.attribute(Q_LEVEL);
    final byte[] mod=el.attribute(Q_LAST_MOD);
    if (mod != null) {
      try {
        ze.setTime(new Int(new Dtm(mod,info)).itr());
      }
 catch (      final QueryException qe) {
        ARCH_DATETIME.thrw(info,mod);
      }
    }
    final byte[] enc=el.attribute(Q_ENCODING);
    if (enc != null) {
      en=string(enc);
      if (!Charset.isSupported(en))       ARCH_ENCODING.thrw(info,enc);
    }
  }
  byte[] val=checkStrBin(con);
  if (con instanceof AStr && en != null && en != Token.UTF8)   val=encode(val,en);
  try {
    out.level(lvl == null ? level : toInt(lvl));
  }
 catch (  final IllegalArgumentException ex) {
    ARCH_LEVEL.thrw(info,lvl);
  }
  out.write(ze,val);
}
