{
  final Resources res=node.data.resources;
  final TokenBoolMap tbm=res.children(node.subfolder(),false);
  final int ts=tbm.size();
  final TreeLeaf[] leaves=new TreeLeaf[ts];
  for (int t=0; t < ts; t++) {
    leaves[t]=new TreeLeaf(tbm.key(t + 1),node.subfolder(),tbm.value(t + 1),node.tree,node.data);
  }
  Arrays.sort(leaves,new Comparator<TreeLeaf>(){
    @Override public int compare(    final TreeLeaf l1,    final TreeLeaf l2){
      final byte[] n1=l1.name;
      final byte[] n2=l2.name;
      return Prop.WIN ? diff(lc(n1),lc(n2)) : diff(n1,n2);
    }
  }
);
  return leaves;
}
