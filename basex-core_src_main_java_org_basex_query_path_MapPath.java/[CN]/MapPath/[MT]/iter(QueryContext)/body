{
  return new Iter(){
    final boolean r=root != null;
    final int sz=steps.length + (r ? 1 : 0);
    final Expr[] expr=r ? new ExprList(sz).add(root).add(steps).finish() : steps;
    final Iter[] iter=new Iter[sz];
    final Value[] values=new Value[sz];
    int pos=-1;
    @Override public Item next() throws QueryException {
      final Value cv=qc.value;
      int p=pos;
      if (p == -1) {
        values[++p]=cv;
        iter[p]=qc.iter(expr[0]);
      }
      try {
        qc.value=values[p];
        while (true) {
          final Item it=iter[p].next();
          if (it == null) {
            iter[p]=null;
            if (--p == -1) {
              pos=p;
              return null;
            }
          }
 else           if (p < sz - 1) {
            qc.value=it;
            values[++p]=it;
            iter[p]=qc.iter(expr[p]);
          }
 else {
            pos=p;
            return it;
          }
        }
      }
  finally {
        qc.value=cv;
      }
    }
    @Override public boolean reset(){
      pos=-1;
      return true;
    }
  }
;
}
