{
  byte[] cont=null;
  final boolean pub=consume(PUBLIC);
  if (pub || consume(SYSTEM)) {
    checkS();
    if (pub) {
      pubidLit();
      if (f)       checkS();
    }
    final int qu=consume();
    if (qu == '\'' || qu == '"') {
      int ch;
      final TokenBuilder tok=new TokenBuilder();
      while ((ch=nextChar()) != qu)       tok.add(ch);
      if (!f)       return null;
      final String name=string(tok.finish());
      if (!dtd && r)       return cont;
      final TextInput tin=input;
      try {
        final IO file=input.input().merge(name);
        cont=file.read();
        input=new TextInput(new IOContent(cont,name));
      }
 catch (      final IOException ex) {
        Util.debug(ex);
        throw error(NOT_PARSED_X,name);
      }
      if (consume(XDECL)) {
        check(XML);
        s();
        if (version())         checkS();
        s();
        if (encoding() == null)         error(TEXTENC);
        ch=nextChar();
        if (s(ch))         ch=nextChar();
        if (ch != '?' || nextChar() != '>')         error(DECLWRONG);
        cont=Arrays.copyOfRange(cont,input.pos(),cont.length);
      }
      s();
      if (r) {
        extSubsetDecl();
        if (!consume((char)0))         error(INVEND);
      }
      input=tin;
    }
 else {
      if (f)       error(SCANQUOTE,(char)qu);
      prev(1);
    }
  }
  return cont;
}
