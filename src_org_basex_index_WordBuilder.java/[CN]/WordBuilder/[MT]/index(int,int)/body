{
  if (tmpe - tmps > Token.MAXLEN)   return;
  if (size == token.length)   rehash();
  final int p=Words.hash(tmptok,tmps,tmpe - tmps) & bucket.length - 1;
  for (int tid=bucket[p]; tid != 0; tid=next[tid]) {
    if (equal(token[tid])) {
      ids[tid]=Num.add(ids[tid],pre);
      ids[tid]=Num.add(ids[tid],pos);
      return;
    }
  }
  next[size]=bucket[p];
  bucket[p]=size;
  ids[size]=Num.newNum(pre);
  ids[size]=Num.add(ids[size],pos);
  token[size]=Num.size(cont);
  final byte[] tok=new byte[tmpe - tmps];
  for (int t=0; t < tok.length; t++) {
    tok[t]=(byte)Token.ftNorm(tmptok[tmps + t]);
  }
  cont=Num.add(cont,tok);
  size++;
}
