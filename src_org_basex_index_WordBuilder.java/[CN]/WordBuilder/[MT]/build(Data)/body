{
  total=data.size;
  for (id=0; id < total; id++) {
    if (stopped())     throw new IOException(CANCELCREATE);
    if (data.kind(id) == Data.TEXT)     index(data.text(id),id);
  }
  final String db=data.meta.dbname;
  DataOutput out=new DataOutput(db,DATAWRD + 'b');
  out.writeInts(bucket);
  out.close();
  out=new DataOutput(db,DATAWRD + 'n');
  out.writeInts(next);
  out.close();
  out=new DataOutput(db,DATAWRD + 't');
  out.writeInts(token);
  out.close();
  out=new DataOutput(db,DATAWRD + 'c');
  for (  final byte c : cont)   out.write(c);
  out.close();
  out=new DataOutput(db,DATAWRD + 'l');
  out.writeInt(bucket.length);
  final DataOutput out2=new DataOutput(db,DATAWRD + 'i');
  for (int i=0; i < size; i++) {
    out2.writeInt(out.size());
    out.writeBytes(ids[i] == null ? Token.EMPTY : Num.finish(ids[i]));
  }
  out.close();
  out2.close();
  return new Words(db);
}
