{
  final NodeCache attrs=extractAttrs(conn);
  final NodeCache hdrs=extractHdrs(conn);
  final byte[] contentType=mediaTypeOvr == null ? extractContentType(conn.getContentType()) : mediaTypeOvr;
  final ItemCache payloads=new ItemCache();
  final FNode body;
  final boolean s=statusOnly != null && Bln.parse(statusOnly,ii);
  if (startsWith(contentType,token("multipart"))) {
    final byte[] boundary=extractBoundary(conn.getContentType(),ii);
    final NodeCache a=new NodeCache();
    a.add(new FAttr(new QNm(MEDIATYPE,EMPTY),contentType));
    a.add(new FAttr(new QNm(BOUNDARY,EMPTY),boundary));
    body=new FElem(new QNm(MULTIPART,HTTPURI),extractParts(conn.getInputStream(),s,payloads,concat(token("--"),boundary),prop,ii),a,new Atts().add(HTTP,HTTPURI));
  }
 else {
    body=createBody(contentType);
    if (!s)     payloads.add(interpretPayload(extractPayload(conn.getInputStream(),extractCharset(conn.getContentType())),contentType,prop,ii));
  }
  final FElem responseEl=new FElem(new QNm(RESPONSE,HTTPURI),hdrs,attrs,new Atts().add(HTTP,HTTPURI));
  responseEl.add(body);
  final ItemCache result=new ItemCache();
  result.add(responseEl);
  result.add(payloads.value());
  return result;
}
