{
  byte[] partContType=TXT_PLAIN;
  String charset=null;
  final byte[] firstLine=readLine(io);
  if (firstLine == null || eq(firstLine,end))   return null;
  final FElem root=new FElem(new QNm(PART,EMPTY),new Atts().add(HTTP,HTTPURI));
  if (firstLine.length == 0) {
    final byte[] p=extractPartPayload(io,sep,end,null);
    if (!statusOnly)     payloads.add(interpretPayload(p,partContType,prop,ii));
  }
 else {
    byte[] nextHdr=firstLine;
    while (nextHdr != null && nextHdr.length > 0) {
      if (startsWith(lc(nextHdr),CONT_TYPE_LC))       charset=extractCharset(string(nextHdr));
      final int pos=indexOf(nextHdr,':');
      if (pos > 0) {
        final byte[] name=substring(nextHdr,0,pos);
        if (pos + 1 < nextHdr.length) {
          final byte[] value=trim(substring(nextHdr,pos + 1,nextHdr.length));
          final FElem hdr=new FElem(new QNm(HEADER,HTTPURI));
          hdr.add(new FAttr(new QNm(HDR_NAME,EMPTY),name));
          hdr.add(new FAttr(new QNm(HDR_VALUE,EMPTY),value));
          root.add(hdr);
          if (eq(lc(name),CONT_TYPE_LC))           partContType=value;
        }
      }
      nextHdr=readLine(io);
    }
    final byte[] p=extractPartPayload(io,sep,end,charset);
    if (!statusOnly) {
      payloads.add(interpretPayload(p,partContType,prop,ii));
    }
  }
  root.add(createBody(partContType));
  return root;
}
