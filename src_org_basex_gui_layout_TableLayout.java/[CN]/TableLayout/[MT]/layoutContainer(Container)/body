{
  preferredLayoutSize(p);
synchronized (p.getTreeLock()) {
    final Insets in=p.getInsets();
    final int nr=p.getComponentCount();
    for (int j=0; j < rows; j++) {
      for (int i=0; i < cols; i++) {
        final int n=j * cols + i;
        if (n >= nr)         return;
        final Dimension cs=p.getComponent(n).getPreferredSize();
        final int x=in.left + posX[i] + i * insetX;
        final int y=in.top + posY[j] + j * insetY;
        final int w=cs.width > 0 ? cs.width : width - in.left - in.right;
        final int h=cs.height > 0 ? cs.height : height - in.top - in.bottom;
        p.getComponent(n).setBounds(x,y,w,h);
      }
    }
  }
}
