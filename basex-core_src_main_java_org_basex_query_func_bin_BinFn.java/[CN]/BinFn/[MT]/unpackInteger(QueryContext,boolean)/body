{
  final B64 b64=toB64(exprs[0],qc,false);
  final Long off=toLong(exprs[1],qc);
  final Long sz=toLong(exprs[2],qc);
  final ByteOrder bo=order(3,qc);
  final byte[] bytes=b64.binary(info);
  final int bl=bytes.length;
  final int[] bounds=bounds(off,sz,bl);
  final int o=bounds[0], l=Math.min(8,bounds[1]);
  if (l == 0)   return Int.get(0);
  final byte[] tmp=new byte[8];
  final boolean neg=signed && (bytes[0] & 0x80) != 0;
  if (bo == ByteOrder.BIG_ENDIAN) {
    final int s=8 - l;
    if (neg)     for (int i=0; i < s; i++)     tmp[i]=(byte)0xFF;
    System.arraycopy(bytes,o,tmp,s,l);
  }
 else {
    System.arraycopy(bytes,o,tmp,0,l);
    if (neg)     for (int i=l; i < 8; i++)     tmp[i]=(byte)0xFF;
  }
  return Int.get(ByteBuffer.wrap(tmp).order(bo).getLong());
}
