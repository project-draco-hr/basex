{
  byte[] cont=null;
  final boolean pub=consume(PUBLIC);
  if (pub || consume(SYSTEM)) {
    checkS();
    if (pub) {
      pubidLit();
      if (f)       checkS();
    }
    final int qu=consume();
    if (qu == '\'' || qu == '"') {
      int ch=0;
      final TokenBuilder tok=new TokenBuilder();
      while ((ch=nextChar()) != qu)       tok.addUTF(ch);
      if (!f)       return null;
      final byte[] name=tok.finish();
      final XMLInput tin=input;
      try {
        final IO file=input.file.merge(new IO(string(name)));
        cont=file.content();
        input=new XMLInput(new IO(cont));
      }
 catch (      final IOException ex) {
        BaseX.debug(ex);
        error(DTDNP,string(name));
      }
      if (consume(XML)) {
        check(XMLDECL);
        s();
        if (version())         checkS();
        s();
        if (encoding() == null)         error(TEXTENC);
        ch=nextChar();
        if (s(ch))         ch=nextChar();
        if (ch != '?' || nextChar() != '>')         error(DECLWRONG);
        final byte[] c=new byte[cont.length - input.pos()];
        System.arraycopy(cont,input.pos(),c,0,c.length);
        cont=c;
      }
      s();
      if (r) {
        extSubsetDecl();
        if (!consume((char)0))         error(INVEND);
      }
      input=tin;
    }
 else {
      if (f)       error(SCANQUOTE,(char)qu);
      prev(1);
    }
  }
  return cont;
}
