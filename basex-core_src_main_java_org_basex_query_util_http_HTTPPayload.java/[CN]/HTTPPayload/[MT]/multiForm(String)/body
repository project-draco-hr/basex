{
  final byte[] bound=concat(DASHES,boundary(ext)), last=concat(bound,DASHES);
  final HashMap<String,Value> map=new HashMap<String,Value>();
  final ByteList cont=new ByteList();
  int lines=-1;
  String name=null, fn=null;
  for (byte[] line; (line=readLine()) != null; ) {
    if (lines >= 0) {
      if (startsWith(line,bound)) {
        Value val=map.get(name);
        if (val == null && fn != null)         val=Map.EMPTY;
        if (fn != null && val instanceof Map) {
          final Map m=(Map)val;
          final Str k=Str.get(fn);
          final Value v=new ValueBuilder().add(m.get(k,info)).add(new B64(cont.toArray())).value();
          val=m.insert(k,v,info);
        }
 else {
          val=Str.get(cont.toArray());
        }
        map.put(name,val);
        cont.reset();
        lines=-1;
        if (eq(line,last))         break;
      }
 else {
        if (lines++ > 0)         cont.add(CRLF);
        cont.add(line);
      }
    }
 else     if (startsWith(line,CONTENT_DISPOSITION)) {
      name=contains(line,token(NAME_IS)) ? string(line).replaceAll("^.*?" + NAME_IS + "\"|\".*","").replaceAll("\\[\\]","") : null;
      fn=contains(line,token(FILENAME_IS)) ? string(line).replaceAll("^.*" + FILENAME_IS + "\"|\"$","") : null;
    }
 else     if (line.length == 0) {
      lines=0;
    }
  }
  return map;
}
