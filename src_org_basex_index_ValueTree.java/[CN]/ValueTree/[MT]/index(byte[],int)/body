{
  if (size == 0) {
    ++size;
    add(k,pr);
  }
 else {
    int n=2;
    while (true) {
      int c=n >>> 1;
      final int d=Token.diff(k,t[c]);
      if (d == 0) {
        pre[c]=Num.add(pre[c],pr);
        ns[c]++;
        return;
      }
      c=d > 0 ? z[n + 1] : z[n];
      if (c == 0) {
        ++size;
        c=size << 1;
        if (c == z.length)         z=Arrays.copyOf(z,c << 1);
        add(k,pr);
        if (d > 0)         z[n + 1]=c;
 else         z[n]=c;
        return;
      }
      n=c;
    }
  }
}
