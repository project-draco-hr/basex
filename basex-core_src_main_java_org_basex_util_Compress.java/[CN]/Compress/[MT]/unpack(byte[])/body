{
  int pos=(Num.length(text,0) << 3) + 1;
  final byte[] map=isSet(text,pos++) ? UNPACK1 : UNPACK2;
  final int size=Num.get(text,0);
  final byte[] bytes=new byte[size];
  for (int b=0; b < size; b++) {
    final int bits;
    int out=0;
    if (isSet(text,pos++)) {
      bits=3;
    }
 else     if (isSet(text,pos++)) {
      bits=3;
      out=0x08;
    }
 else     if (isSet(text,pos++)) {
      bits=4;
      out=0x10;
    }
 else     if (isSet(text,pos++)) {
      bits=5;
      out=0x20;
    }
 else {
      bits=8;
    }
    for (int bit=0; bit < bits; bit++, pos++) {
      if ((text[pos >>> 3] & 1 << (pos & 7)) != 0)       out|=1 << bit;
    }
    bytes[b]=(byte)(out >= 0x80 ? out : map[out]);
  }
  return bytes;
}
