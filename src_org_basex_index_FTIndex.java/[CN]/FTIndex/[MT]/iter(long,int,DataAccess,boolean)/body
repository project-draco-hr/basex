{
  return new FTIndexIterator(){
    final FTMatches all=new FTMatches(toknum);
    double sc=-1, lsc=-1;
    int lpre, pre, c;
    long pos=p;
    @Override public boolean more(){
      if (c == s)       return false;
      if (lpre == 0) {
        int n=da.readNum(pos);
        if (scm > 0) {
          lsc=(Math.log(n) - min) / (max - min);
          n=da.readNum();
        }
        size=s;
        lpre=n;
        pos=da.pos();
      }
      pre=lpre;
      sc=lsc;
      all.reset(toknum);
      all.or(da.readNum(pos));
      while (++c < s && (lpre=da.readNum()) == pre) {
        final int n=da.readNum();
        if (!fast)         all.or(n);
      }
      pos=da.pos();
      return true;
    }
    @Override public FTMatches matches(){
      return all;
    }
    @Override public int next(){
      return pre;
    }
    @Override public double score(){
      return sc;
    }
  }
;
}
