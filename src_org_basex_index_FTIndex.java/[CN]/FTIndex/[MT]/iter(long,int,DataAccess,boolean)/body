{
  return new FTIndexIterator(){
    final FTMatches all=new FTMatches(toknum);
    boolean f=true;
    long pos=p;
    double score=-1, nscore=-1;
    int lpre, c;
    int pre;
    @Override public boolean more(){
      if (c == s)       return false;
      if (f) {
        if (scm > 0) {
          nscore=-da.readNum(pos) / 1000d;
          pos=da.pos();
        }
        lpre=da.readNum(pos);
        pos=da.pos();
        f=false;
        size=s;
      }
      pre=lpre;
      score=nscore;
      all.reset(toknum);
      all.or(da.readNum(pos));
      while (++c < s && (lpre=da.readNum()) == pre) {
        final int n=da.readNum();
        if (!fast)         all.or(n);
      }
      if (scm > 0 && lpre < 0) {
        nscore=-lpre / 1000d;
        lpre=da.readNum();
      }
      pos=da.pos();
      return true;
    }
    @Override public FTMatches matches(){
      return all;
    }
    @Override public int next(){
      return pre;
    }
    @Override public double score(){
      return score;
    }
  }
;
}
