{
  return new FTIndexIterator(){
    boolean f=true;
    long pos=p;
    int lpre, c;
    FTEntry n;
    @Override public boolean more(){
      if (c == s)       return false;
      if (f) {
        lpre=da.readNum(pos);
        pos=da.pos();
        f=false;
      }
      final IntList il=new IntList();
      int pre=lpre;
      il.add(pre);
      il.add(da.readNum(pos));
      while (++c < s && (lpre=da.readNum()) == pre)       il.add(da.readNum());
      pos=da.pos();
      final int[] t=new int[il.size];
      for (int i=0; i < t.length; i++)       t[i]=toknum;
      n=new FTEntry(il,new IntList(t));
      return true;
    }
    @Override public FTEntry node(){
      return n;
    }
    @Override public int next(){
      return n.pre();
    }
  }
;
}
