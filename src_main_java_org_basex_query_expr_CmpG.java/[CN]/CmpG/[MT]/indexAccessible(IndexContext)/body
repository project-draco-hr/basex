{
  if (op != OpG.EQ)   return false;
  final AxisStep s=expr[0] instanceof Context ? ic.step : indexStep(expr[0]);
  if (s == null)   return false;
  final boolean text=s.test.type == NodeType.TXT && ic.data.meta.textindex;
  final boolean attr=s.test.type == NodeType.ATT && ic.data.meta.attrindex;
  if (!text && !attr)   return false;
  final IndexType ind=text ? IndexType.TEXT : IndexType.ATTRIBUTE;
  final Expr arg=expr[1];
  if (!arg.isValue()) {
    final SeqType t=arg.type();
    if (!t.type.isString() && !t.type.isNode() || arg.uses(Use.CTX) || arg.uses(Use.NDT))     return false;
    ic.addCosts(ic.data.meta.size / 10);
    va=Array.add(va,new ValueAccess(info,arg,ind,ic));
    return true;
  }
  final Iter ir=arg.iter(ic.ctx);
  Item it;
  ic.costs(0);
  while ((it=ir.next()) != null) {
    final SeqType t=it.type();
    if (!(t.type.isString() || t.type.isNode()))     return false;
    final int is=ic.data.count(new ValuesToken(ind,it.string(info)));
    if (is != 0) {
      va=Array.add(va,new ValueAccess(info,it,ind,ic));
      ic.addCosts(is);
    }
  }
  return true;
}
