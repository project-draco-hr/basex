{
  final Data data=view.gui.context.data();
  final MapRect l=view.layout.layout;
  final int ww=view.getWidth();
  final int hh=view.getHeight();
  final int min=Math.max(GUIProp.fontsize,16);
  final int rs=rects.size();
  for (int ri=0; ri < rs; ri++) {
    final MapRect r=rects.get(ri);
    final int pre=r.pre;
    final int lvl=r.level;
    final boolean isImage=GUIFS.mime(fs.name(r.pre)) == GUIFS.Type.IMAGE;
    final boolean full=r.w == ww && r.h == hh;
    Color col=color(rects,ri);
    final boolean mark=col != null;
    if (full && isImage)     col=Color.black;
 else     if (full || col == null)     col=COLORS[lvl];
    g.setColor(col);
    if (r.w < l.x + l.w || r.h < l.y + l.h || GUIProp.mapoffsets < 2 || ViewData.isLeaf(data,pre)) {
      g.fillRect(r.x,r.y,r.w,r.h);
    }
 else {
      g.fillRect(r.x,r.y,l.x,r.h);
      g.fillRect(r.x,r.y,r.w,l.y);
      g.fillRect(r.x + r.w - l.w,r.y,l.w,r.h);
      g.fillRect(r.x,r.y + r.h - l.h,r.w,l.h);
    }
    if (!full) {
      col=mark ? colormark3 : COLORS[lvl + 2];
      g.setColor(col);
      g.drawRect(r.x,r.y,r.w,r.h);
      col=mark ? colormark4 : COLORS[Math.max(0,lvl - 2)];
      g.setColor(col);
      g.drawLine(r.x + r.w,r.y,r.x + r.w,r.y + r.h);
      g.drawLine(r.x,r.y + r.h,r.x + r.w,r.y + r.h);
    }
    if (r.w < min || r.h < min)     continue;
    final MapRect cr=r.clone();
    if (drawRectangle(g,cr,mark)) {
      cr.x+=4;
      cr.w-=8;
      final TokenBuilder tb=new TokenBuilder();
      int k=data.kind(pre);
      final int s=pre + data.size(pre,k);
      int p=pre + data.attSize(pre,k);
      boolean elem=false;
      while (p != s) {
        k=data.kind(p);
        if (k == Data.ELEM) {
          if (elem)           tb.add('\n');
          tb.add(data.tag(p));
          tb.add(": ");
          elem=true;
        }
 else         if (k == Data.TEXT) {
          tb.add(data.text(p));
          tb.add("\n");
          elem=false;
        }
        p+=data.attSize(p,k);
      }
      g.setFont(mfont);
      MapRenderer.drawText(g,cr,tb.finish());
    }
    r.thumb=cr.thumb;
    r.thumbal=cr.thumbal;
    r.thumbf=cr.thumbf;
    r.thumbfh=cr.thumbfh;
    r.thumblh=cr.thumblh;
    r.poi=cr.poi;
    r.pos=cr.pos;
    r.fs=cr.fs;
  }
}
