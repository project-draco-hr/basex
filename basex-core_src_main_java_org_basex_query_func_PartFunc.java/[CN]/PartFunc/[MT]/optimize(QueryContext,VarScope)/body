{
  final Expr f=exprs[exprs.length - 1];
  if (allAreValues())   return preEval(qc);
  final SeqType t=f.seqType();
  if (t.instanceOf(SeqType.FUN_O) && t.type != SeqType.ANY_FUN) {
    final FuncType ft=(FuncType)t.type;
    final int ar=exprs.length + holes.length - 1;
    if (ft.argTypes.length != ar)     throw INVARITY_X_X_X_X.get(info,f,ar,ar == 1 ? "" : "s",ft.argTypes.length);
    final SeqType[] args=new SeqType[holes.length];
    final int hl=holes.length;
    for (int h=0; h < hl; h++)     args[h]=ft.argTypes[holes[h]];
    seqType=FuncType.get(ft.retType,args).seqType();
  }
  return this;
}
