{
  long num=number;
  final boolean sign=num < 0;
  if (sign)   num=-num;
  final TokenBuilder tb=new TokenBuilder();
  final int ch=cp(mp.pres,0);
  final boolean single=mp.pres.length() == 1;
  if (ch == 'a' && single) {
    alpha(tb,num,'a',26);
  }
 else   if (ch == '\u03b1' && single) {
    alpha(tb,num,'\u03b1',25);
  }
 else   if (ch == 'i' && single) {
    roman(tb,num);
  }
 else   if (ch == 'w') {
    tb.add(form.word(num,mp.ord));
  }
 else   if (ch >= '\u2460' && ch <= '\u249b') {
    tb.add((char)(ch + number - 1));
  }
 else   if (ch == '#' || ch >= '0' && ch <= '9' || ch >= '\u0660' && ch <= '\u0669') {
    number(tb,num,mp,form,ch & 0xFFFFFFF0);
  }
  byte[] in=tb.finish();
  if (mp.cs == Case.LOWER)   in=lc(in);
  if (mp.cs == Case.UPPER)   in=uc(in);
  return sign ? concat(new byte[]{'-'},in) : in;
}
