{
  PrintOutput po=null;
  try {
    po=new PrintOutput(file.path());
    boolean first=true;
    for (    final Option<?> opt : options(getClass())) {
      final String name=opt.name();
      if (opt instanceof Comment) {
        if (!first)         po.print(NL);
        po.println("# " + name);
      }
 else       if (opt instanceof NumbersOption) {
        final int[] ints=get((NumbersOption)opt);
        final int is=ints == null ? 0 : ints.length;
        for (int i=0; i < is; ++i)         po.println(name + i + " = "+ ints[i]);
      }
 else       if (opt instanceof StringsOption) {
        final String[] strings=get((StringsOption)opt);
        final int ss=strings == null ? 0 : strings.length;
        po.println(name + " = " + ss);
        for (int i=0; i < ss; ++i)         po.println(name + (i + 1) + " = "+ strings[i]);
      }
 else {
        po.println(name + " = " + get(opt));
      }
      first=false;
    }
    po.println(NL + PROPUSER);
    po.print(user.toString());
  }
 catch (  final Exception ex) {
    Util.errln("% could not be written.",file);
    Util.debug(ex);
  }
 finally {
    if (po != null)     try {
      po.close();
    }
 catch (    final IOException ignored) {
    }
  }
}
