{
  final StringList lines=new StringList();
  try {
    for (    final Option<?> opt : options(getClass())) {
      final String name=opt.name();
      if (opt instanceof Comment) {
        if (!lines.isEmpty())         lines.add("");
        lines.add("# " + name);
      }
 else       if (opt instanceof NumbersOption) {
        final int[] ints=get((NumbersOption)opt);
        final int is=ints == null ? 0 : ints.length;
        for (int i=0; i < is; ++i)         lines.add(name + i + " = "+ ints[i]);
      }
 else       if (opt instanceof StringsOption) {
        final String[] strings=get((StringsOption)opt);
        final int ss=strings == null ? 0 : strings.length;
        lines.add(name + " = " + ss);
        for (int i=0; i < ss; ++i)         lines.add(name + (i + 1) + " = "+ strings[i]);
      }
 else {
        lines.add(name + " = " + get(opt));
      }
    }
    lines.add("").add(PROPUSER).add(user);
    if (update(lines)) {
      final TokenBuilder tb=new TokenBuilder();
      for (      final String line : lines)       tb.add(line).add(NL);
      file.write(tb.finish());
    }
  }
 catch (  final Exception ex) {
    Util.errln("% could not be written.",file);
    Util.debug(ex);
  }
}
