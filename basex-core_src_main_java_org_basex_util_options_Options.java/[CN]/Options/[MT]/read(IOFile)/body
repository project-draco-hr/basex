{
  file=opts;
  final StringList read=new StringList();
  final StringList errs=new StringList();
  final boolean exists=file.exists();
  if (exists) {
    NewlineInput nli=null;
    try {
      nli=new NewlineInput(opts);
      boolean local=false;
      for (String line; (line=nli.readLine()) != null; ) {
        line=line.trim();
        if (line.equals(PROPUSER)) {
          local=true;
          continue;
        }
        if (local)         user.append(line).append(NL);
        if (line.isEmpty() || line.charAt(0) == '#')         continue;
        final int d=line.indexOf('=');
        if (d < 0) {
          errs.add("line \"" + line + "\" ignored.");
          continue;
        }
        final String val=line.substring(d + 1).trim();
        String name=line.substring(0,d).trim();
        int num=0;
        final int ss=name.length();
        for (int s=0; s < ss; ++s) {
          if (Character.isDigit(name.charAt(s))) {
            num=toInt(name.substring(s));
            name=name.substring(0,s);
            break;
          }
        }
        if (local) {
          setSystem(name,val);
        }
 else {
          try {
            assign(name,val,num,true);
            read.add(name);
          }
 catch (          final BaseXException ex) {
            errs.add(ex.getMessage());
          }
        }
      }
    }
 catch (    final IOException ex) {
      errs.add("file could not be parsed.");
      Util.errln(ex);
    }
 finally {
      if (nli != null)       try {
        nli.close();
      }
 catch (      final IOException ignored) {
      }
    }
  }
  boolean ok=true;
  if (errs.isEmpty()) {
    try {
      for (      final Option<?> opt : options(getClass())) {
        if (ok && !(opt instanceof Comment))         ok=read.contains(opt.name());
      }
    }
 catch (    final IllegalAccessException ex) {
      throw Util.notExpected(ex);
    }
  }
  if (!ok || !exists || !errs.isEmpty()) {
    write();
    errs.add("writing new configuration file.");
    for (    final String s : errs)     Util.errln(file + ": " + s);
  }
}
