{
  int[] result=((NodeSet)(ctx.eval(exprs[0]))).nodes;
  final NodeBuilder tmp=new NodeBuilder();
  for (int i=1; i != exprs.length; i++) {
    final int rl=result.length;
    final int[] merge=((NodeSet)(ctx.eval(exprs[i]))).nodes;
    final int ml=merge.length;
    int m=0;
    int r=0;
    while (m != ml && r != rl) {
      final int d=merge[m] - result[r];
      if (d <= 0) {
        tmp.add(merge[m++]);
        if (d == 0)         r++;
      }
 else {
        tmp.add(result[r++]);
      }
    }
    while (m != ml)     tmp.add(merge[m++]);
    while (r != rl)     tmp.add(result[r++]);
    result=Array.finish(tmp.nodes,tmp.size);
    tmp.reset();
  }
  return new NodeSet(result,ctx);
}
