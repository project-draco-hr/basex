{
  int j=end;
  int i=nod;
  boolean last=lst;
  final int[] node=entry(id);
  final long tdid=currID;
  if (ending == null || ending.length == 0) {
    if (node[node.length - 1] > 0) {
      idata=FTIndexIterator.union(iter(tdid,node[node.length - 1],inB,fast),idata);
    }
    for (int t=node[0] + 1; t < node.length - 1; t+=2) {
      wc(node[t],null,last,0,0,fast);
    }
    return;
  }
  while (!last && i < node[0] + 1 && node[i] != ending[j])   ++i;
  while (i + ending.length < node[0] + 1 && node[i + 1] == ending[0])   ++i;
  while (i < node[0] + 1 && j < ending.length && node[i] == ending[j]) {
    ++i;
    ++j;
    last=true;
  }
  if (id == 0 || j == ending.length && i < node[0] + 1) {
    if (!more(node))     return;
    for (int t=node[0] + 1; t < node.length - 1; t+=2) {
      wc(node[t],ending,false,1,0,fast);
    }
    return;
  }
  if (j == ending.length && i == node[0] + 1) {
    idata=FTIndexIterator.union(iter(tdid,node[node.length - 1],inB,fast),idata);
    for (int t=node[0] + 1; t < node.length - 1; t+=2) {
      if (j == 1)       wc(node[t],ending,false,0,0,fast);
      wc(node[t],ending,last,0,j,fast);
    }
    return;
  }
  if (j < ending.length && i < node[0] + 1) {
    if (!more(node))     return;
    wc(id,ending,false,i + 1,0,fast);
    return;
  }
  if (j < ending.length && i == node[0] + 1) {
    if (!more(node))     return;
    for (int t=node[0] + 1; t < node.length - 1; t+=2) {
      if (j == 1)       wc(node[t],ending,last,1,0,fast);
      wc(node[t],ending,last,1,j,fast);
    }
  }
}
