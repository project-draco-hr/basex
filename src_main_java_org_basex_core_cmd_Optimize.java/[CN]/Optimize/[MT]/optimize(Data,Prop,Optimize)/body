{
  d.pthindex.init();
  d.tagindex.init();
  d.atnindex.init();
  final MetaData m=d.meta;
  m.dirty=true;
  final int[] parStack=new int[IO.MAXHEIGHT];
  final int[] tagStack=new int[IO.MAXHEIGHT];
  final boolean path=p.is(Prop.PATHINDEX);
  int level=0;
  int h=0, n=0;
  for (int pre=0; pre < m.size; ++pre) {
    final byte kind=(byte)d.kind(pre);
    final int par=d.parent(pre,kind);
    while (level > 0 && parStack[level - 1] > par)     --level;
    if (kind == Data.DOC) {
      parStack[level++]=pre;
      if (path)       d.pthindex.index(0,kind,level);
      ++n;
    }
 else     if (kind == Data.ELEM) {
      final int id=d.name(pre);
      d.tagindex.index(d.tagindex.key(id),null,true);
      if (path)       d.pthindex.index(id,kind,level);
      tagStack[level]=id;
      parStack[level++]=pre;
    }
 else     if (kind == Data.ATTR) {
      final int id=d.name(pre);
      d.atnindex.index(d.atnindex.key(id),d.text(pre,false),true);
      if (path)       d.pthindex.index(id,kind,level);
    }
 else {
      final byte[] txt=d.text(pre,true);
      if (kind == Data.TEXT)       d.tagindex.index(tagStack[level - 1],txt);
      if (path)       d.pthindex.index(0,kind,level);
    }
    if (h < level)     h=level;
    if (c != null)     c.pre=pre;
  }
  m.ndocs=n;
  m.pathindex=path;
  m.uptodate=true;
  try {
    if (m.textindex || p.is(Prop.TEXTINDEX))     index(IndexType.TEXT,d,c);
    if (m.attrindex || p.is(Prop.ATTRINDEX))     index(IndexType.ATTRIBUTE,d,c);
    if (m.ftindex || p.is(Prop.FTINDEX))     index(IndexType.FULLTEXT,d,c);
  }
  finally {
    d.flush();
  }
}
