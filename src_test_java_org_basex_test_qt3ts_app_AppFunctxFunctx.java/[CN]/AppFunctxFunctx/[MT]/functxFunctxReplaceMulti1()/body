{
  final XQuery query=new XQuery("declare namespace functx = \"http://www.example.com/\";\n" + "                    (:~ : The first argument if it is not empty, otherwise the second argument : : @author W3C XML Query WG : @version 1.0 : @see http://www.xqueryfunctions.com/xq/functx_if-absent.html : @param $arg the item(s) that may be absent : @param $value the item(s) to use if the item is absent :)\n" + "         declare function functx:if-absent\n"+ "           ( $arg as item()* , $value as item()* ) as item()* {\n"+ "           if (exists($arg)) then $arg else $value } ;\n"+ "                    (:~ : Performs multiple replacements, using pairs of replace parameters : : @author Priscilla Walmsley, Datypic : @version 1.0 : @see http://www.xqueryfunctions.com/xq/functx_replace-multi.html : @param $arg the string to manipulate : @param $changeFrom the sequence of strings or patterns to change from : @param $changeTo the sequence of strings to change to :)\n"+ "         declare function functx:replace-multi ( $arg as xs:string? , $changeFrom as xs:string* , $changeTo as xs:string* ) as xs:string? {\n"+ "           if (count($changeFrom) > 0)\n"+ "           then functx:replace-multi( replace($arg, $changeFrom[1], functx:if-absent($changeTo[1],'')), $changeFrom[position() > 1], $changeTo[position() > 1])\n"+ "           else $arg\n"+ "         } ;\n"+ "         let $fr := ('[a-c]', 'def', '\\d+')\n"+ "         return let $to := ('x', 'y', '0')\n"+ "         return (functx:replace-multi('abcdef123',$fr,$to))",ctx);
  final QT3Result res=result(query);
  result=res;
  test(assertStringValue(false,"xxxy0"));
}
