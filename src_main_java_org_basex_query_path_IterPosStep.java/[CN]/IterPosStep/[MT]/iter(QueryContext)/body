{
  return new NodeIter(){
    boolean skip;
    AxisIter ai;
    long cpos;
    @Override public ANode next() throws QueryException {
      if (skip)       return null;
      if (ai == null) {
        final Value v=checkCtx(ctx);
        if (!v.node())         NODESPATH.thrw(input,IterPosStep.this,v.type);
        ai=axis.iter((ANode)v);
      }
      ANode lnod=null;
      while (true) {
        ctx.checkStop();
        final ANode node=ai.next();
        if (node == null) {
          skip=last;
          return lnod;
        }
        if (test.eval(node)) {
          final long cp=ctx.pos;
          final long cs=ctx.size;
          ctx.size=0;
          ctx.pos=++cpos;
          final boolean p=preds(node,ctx);
          ctx.pos=cp;
          ctx.size=cs;
          if (p) {
            skip=pos != null && pos.skip(ctx);
            return node.finish();
          }
          if (last)           lnod=node.finish();
        }
      }
    }
    @Override public boolean reset(){
      ai=null;
      skip=false;
      cpos=0;
      return true;
    }
  }
;
}
