{
  return new Iter(){
    final int e=sq.size();
    int[] group;
    Iter ir;
    int p=-1;
    @Override public Item next() throws QueryException {
      if (group == null) {
        group=new int[e];
        for (int i=0; i < e; i++)         group[i]=i;
        group(group,e);
        for (        final Grp g : grp)         g.finish();
      }
      final Integer[] hashes=groups.keySet().toArray(new Integer[groups.size()]);
      while (true) {
        if (ir != null) {
          final Item i=ir.next();
          if (i != null)           return i;
          ir=null;
        }
 else {
          if (++p == hashes.length)           return null;
          final int witness=groups.get(hashes[p])[0];
          ir=sq.item[witness].iter();
        }
      }
    }
    @Override public String toString(){
      return Group.this.toString();
    }
  }
;
}
