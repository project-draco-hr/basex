{
  if (io instanceof IOFile && io.isDir()) {
    for (    final IO f : ((IOFile)io).children())     parse(b,f);
  }
 else   if (archives && io.isArchive()) {
    final String name=io.name().toLowerCase(Locale.ENGLISH);
    InputStream in=io.inputStream();
    if (name.endsWith(IO.GZSUFFIX)) {
      try (final GZIPInputStream is=new GZIPInputStream(in)){
        src=new IOStream(is,io.name().replaceAll("\\..*",IO.XMLSUFFIX));
        parseResource(b);
      }
     }
 else     if (name.endsWith(IO.TARSUFFIX) || name.endsWith(IO.TGZSUFFIX)) {
      if (name.endsWith(IO.TGZSUFFIX))       in=new GZIPInputStream(in);
      try (final TarInputStream is=new TarInputStream(in)){
        for (TarEntry ze; (ze=is.getNextEntry()) != null; ) {
          if (ze.isDirectory())           continue;
          src=new IOStream(is,ze.getName());
          src.length(ze.getSize());
          parseResource(b);
        }
      }
     }
 else {
      try (final ZipInputStream is=new ZipInputStream(in)){
        for (ZipEntry ze; (ze=is.getNextEntry()) != null; ) {
          if (ze.isDirectory())           continue;
          src=new IOStream(is,ze.getName());
          src.length(ze.getSize());
          parseResource(b);
        }
      }
     }
  }
 else {
    src=io;
    parseResource(b);
  }
}
