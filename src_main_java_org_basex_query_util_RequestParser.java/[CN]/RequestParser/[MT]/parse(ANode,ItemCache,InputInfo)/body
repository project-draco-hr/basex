{
  final Request r=new Request();
  parseAttrs(request,r.attrs);
  checkRequest(r,ii);
  final ANode payload=parseHdrs(request.children(),r.headers);
  final byte[] httpMethod=lc(r.attrs.get(METHOD));
  if ((eq(TRACE,httpMethod) || eq(DELETE,httpMethod)) && (payload != null || bodies != null))   REQINV.thrw(ii,"Body not expected for method " + string(httpMethod));
  if (payload != null) {
    if (eq(payload.nname(),BODY)) {
      Item it=null;
      if (bodies != null) {
        if (bodies.size() != 1)         REQINV.thrw(ii,"Number of items with request body content differs " + "from number of body descriptors.");
        it=bodies.next();
      }
      parseBody(payload,it,r.payloadAttrs,r.bodyContent,ii);
      r.isMultipart=false;
    }
 else     if (eq(payload.nname(),MULTIPART)) {
      int i=0;
      final AxisMoreIter ch=payload.children();
      while (ch.next() != null)       i++;
      if (bodies != null && bodies.size() != i)       REQINV.thrw(ii,"Number of items with request body content differs " + "from number of body descriptors.");
      parseMultipart(payload,bodies,r.payloadAttrs,r.parts,ii);
      r.isMultipart=true;
    }
 else     REQINV.thrw(ii);
  }
  return r;
}
