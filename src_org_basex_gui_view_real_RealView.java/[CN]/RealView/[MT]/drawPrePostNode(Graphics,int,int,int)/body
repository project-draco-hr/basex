{
  final Data data=GUI.context.data();
  int x=pre * prePostMulti;
  int y=post * prePostMulti;
  int preTextWidth=-1;
switch (data.kind(pre)) {
case Data.ELEM:
    String s=Token.string(data.tag(pre));
  g.drawString(s,x,y);
preTextWidth=BaseXLayout.width(g,s);
break;
case Data.ATTR:
g.setColor(attributeColor);
g.drawString("A",x,y);
preTextWidth=BaseXLayout.width(g,"A");
break;
case Data.COMM:
g.setColor(commentColor);
g.drawString("C",x,y);
preTextWidth=BaseXLayout.width(g,"C");
break;
case Data.PI:
g.setColor(piColor);
g.drawString("PI",x,y);
preTextWidth=BaseXLayout.width(g,"PI");
break;
case Data.TEXT:
g.setColor(textColor);
g.drawString("T",x,y);
preTextWidth=BaseXLayout.width(g,"T");
}
drawPreAndPostValues(g,pre,post,preTextWidth);
g.setColor(Color.BLACK);
int par=data.parent(pre,data.kind(pre));
if (par > 0) {
int parPost=calcPost(par,level - 1);
switch (data.kind(par)) {
case Data.ELEM:
break;
case Data.ATTR:
break;
case Data.COMM:
break;
case Data.PI:
break;
case Data.TEXT:
}
int parX=par * prePostMulti;
int parY=parPost * prePostMulti;
g.drawLine(parX,parY,x,y);
}
}
