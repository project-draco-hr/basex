{
  final int tPre=data.meta.size;
  final Atts ns=par == -1 ? node.nsScope(null) : node.namespaces();
  data.nspaces.open(tPre,ns);
  final QNm qname=node.qname();
  final int size=size(node,false), asize=size(node,true);
  final int nameId=data.elemNames.index(qname.string(),null,false);
  final int uriId=data.nspaces.uriId(qname.uri());
  data.elem(pre - par,nameId,asize,size,uriId,!ns.isEmpty());
  data.insert(tPre);
  int cPre=pre + 1;
  BasicNodeIter iter=node.attributes();
  for (ANode ch; (ch=iter.next()) != null; )   cPre=addAttr(ch,cPre,pre);
  iter=node.children();
  for (ANode ch; (ch=iter.next()) != null; )   cPre=addNode(ch,cPre,pre,node);
  data.nspaces.close(tPre);
  if (size != cPre - pre)   data.size(tPre,Data.ELEM,cPre - pre);
  return cPre;
}
