{
  final int last=data.meta.size;
  final Atts ns=par == -1 ? node.nsScope(null) : node.namespaces();
  data.nspaces.open(last,ns);
  final QNm qname=node.qname();
  final int size=size(node,false), asize=size(node,true);
  final int nameId=data.elemNames.put(qname.string());
  final int uriId=data.nspaces.uriId(qname.uri());
  data.elem(pre - par,nameId,asize,size,uriId,!ns.isEmpty());
  data.insert(last);
  int cPre=pre + 1;
  for (  final ANode attr : node.attributes())   cPre=addAttr(attr,cPre,pre);
  for (  final ANode child : node.children())   cPre=addNode(child,cPre,pre);
  data.nspaces.close(last);
  if (size != cPre - pre)   data.size(last,Data.ELEM,cPre - pre);
  return cPre;
}
