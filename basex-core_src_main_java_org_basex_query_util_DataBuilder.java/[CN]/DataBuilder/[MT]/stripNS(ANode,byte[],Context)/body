{
  if (node.type != NodeType.ELM)   return node;
  final MemData data=new MemData(ctx.options);
  final DataBuilder db=new DataBuilder(data);
  db.build(node);
  boolean del=true;
  for (int pre=0; pre < data.meta.size; pre++) {
    final int kind=data.kind(pre);
    if (kind != Data.ELEM && kind != Data.ATTR)     continue;
    final byte[] uri=data.nspaces.uri(data.uriId(pre,kind));
    if (uri == null || !eq(uri,ns))     continue;
    final byte[] nm=data.name(pre,kind);
    if (prefix(nm).length == 0) {
      if (kind == Data.ELEM) {
        data.update(pre,Data.ELEM,nm,EMPTY);
        data.nsFlag(pre,false);
      }
    }
 else {
      del=false;
    }
  }
  if (del)   data.nspaces.delete(ns);
  return new DBNode(data);
}
