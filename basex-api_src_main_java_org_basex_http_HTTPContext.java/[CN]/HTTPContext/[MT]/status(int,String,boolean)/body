{
  try {
    log(code,info);
    res.resetBuffer();
    if (code == SC_UNAUTHORIZED) {
      final StringBuilder header=new StringBuilder(auth.toString());
      if (auth == AuthMethod.DIGEST) {
        header.append(" " + Request.REALM + "=\"").append(Prop.NAME).append("\",");
        header.append(Request.QOP).append("=\"").append(AUTH).append(',');
        header.append(AUTH_INT).append("\",").append(Request.NONCE + "=\"");
        header.append(Strings.md5(Long.toString(System.nanoTime()))).append('"');
      }
      res.setHeader(WWW_AUTHENTICATE,header.toString());
    }
    if (error && code >= SC_BAD_REQUEST) {
      res.sendError(code,info);
    }
 else {
      res.setStatus(code);
      if (info != null) {
        res.setContentType(TEXT_PLAIN);
        final ArrayOutput ao=new ArrayOutput();
        ao.write(token(info));
        res.getOutputStream().write(ao.normalize().finish());
      }
    }
  }
 catch (  final IllegalStateException ex) {
    log(SC_INTERNAL_SERVER_ERROR,Util.message(ex));
  }
}
