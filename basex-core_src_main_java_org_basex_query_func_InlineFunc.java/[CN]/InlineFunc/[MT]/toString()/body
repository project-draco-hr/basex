{
  final StringBuilder sb=new StringBuilder();
  if (!scope.closure().isEmpty()) {
    sb.append("((: inline-closure :) ");
    for (    final Entry<Var,Expr> e : scope.closure().entrySet())     sb.append("let ").append(e.getKey()).append(" := ").append(e.getValue()).append(' ');
    sb.append(RETURN).append(' ');
  }
  sb.append(FUNCTION).append(PAR1);
  for (int i=0; i < args.length; i++) {
    if (i > 0)     sb.append(", ");
    sb.append(args[i].toString());
  }
  sb.append(PAR2).append(' ');
  if (ret != null)   sb.append("as ").append(ret.toString()).append(' ');
  sb.append("{ ").append(expr).append(" }");
  if (!scope.closure().isEmpty())   sb.append(')');
  return sb.toString();
}
