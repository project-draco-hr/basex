{
  builder=build;
  builder.encoding(Prop.ENCODING);
  builder.meta.backing=backingpath;
  builder.meta.deepfs=true;
  builder.startDoc(token(io.name()));
  if (singlemode) {
    file(new File(io.path()).getCanonicalFile());
  }
 else {
    atts.reset();
    atts.add(MOUNTPOINT,NOTMOUNTED);
    atts.add(BACKINGSTORE,token(backingpath));
    atts.add(SIZE,ZERO);
    final int sizeAttId=builder.startElem(DEEPFS_NS,atts) + 3;
    for (    final File f : root ? File.listRoots() : new File[]{new File(backingpath).getCanonicalFile()}) {
      if (f.isHidden() && !f.getAbsolutePath().equals("C:\\"))       continue;
      sizeStack[0]=0;
      for (      final File file : f.listFiles()) {
        if (!valid(file) || file.isHidden())         continue;
        if (file.isDirectory())         dir(file);
 else         file(file);
      }
    }
    setSize(sizeAttId,sizeStack[0]);
    builder.endElem(DEEPFS_NS);
  }
  builder.endDoc();
}
