{
  final XQuery query=new XQuery("\n" + "        declare variable $p1 := \"http://example.com/one\"; \n" + "        declare variable $p2 := \"http://example.com/two\"; \n"+ "        declare function local:f($ns as namespace-node()) as element() { \n"+ "            <namespace name=\"{name($ns)}\" local-name=\"{local-name($ns)}\" \n"+ "                namespace-uri=\"{namespace-uri($ns)}\" string-value=\"{string($ns)}\" typed-value=\"{data($ns)}\" \n"+ "                is-untyped=\"{data($ns) instance of xs:untypedAtomic}\" parent-exists=\"{exists($ns/..)}\" \n"+ "                is-namespace=\"{$ns instance of namespace-node()}\" \n"+ "                is-node=\"{$ns instance of node()}\" is-item=\"{$ns instance of item()}\" \n"+ "                same-as-self=\"{$ns is $ns}\"/> \n"+ "        }; \n"+ "        <out>{ \n"+ "            local:f(namespace p {\"http://example.com/one\"}), \n"+ "            local:f(namespace {\"\"} {\"http://example.com/two\"}) }</out>\n"+ "      ",ctx);
  final QT3Result res=result(query);
  result=res;
  test(assertSerialization("<out><namespace \n              same-as-self=\"true\" is-namespace=\"true\" namespace-uri=\"\" is-item=\"true\"\n              typed-value=\"http://example.com/one\"\n              is-untyped=\"false\"\n              string-value=\"http://example.com/one\"\n              local-name=\"p\"\n              parent-exists=\"false\"\n              name=\"p\"\n              is-node=\"true\"/><namespace \n              same-as-self=\"true\" is-namespace=\"true\" namespace-uri=\"\" is-item=\"true\"\n              typed-value=\"http://example.com/two\"\n              is-untyped=\"false\"\n              string-value=\"http://example.com/two\"\n              local-name=\"\"\n              parent-exists=\"false\"\n              name=\"\"\n              is-node=\"true\"/></out>",false));
}
