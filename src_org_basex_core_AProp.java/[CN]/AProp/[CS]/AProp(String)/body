{
  filename=HOME + IO.BASEXSUFFIX + prop;
  try {
    for (    final Field f : getClass().getFields()) {
      final Object obj=f.get(null);
      if (!(obj instanceof Object[]))       continue;
      final Object[] arr=(Object[])obj;
      props.put(arr[0].toString(),arr[1]);
    }
  }
 catch (  final Exception ex) {
    BaseX.notexpected(ex);
  }
  final File file=new File(filename);
  if (!file.exists())   return;
  try {
    final BufferedReader br=new BufferedReader(new FileReader(file));
    String line=null;
    while ((line=br.readLine()) != null) {
      line=line.trim();
      if (line.length() == 0 || line.charAt(0) == '#')       continue;
      final int d=line.indexOf('=');
      if (d < 0) {
        BaseX.errln("%: \"%\" ignored.",filename,line);
        continue;
      }
      final String val=line.substring(d + 1).trim();
      String key=line.substring(0,d).trim().toUpperCase();
      int num=0;
      for (int s=0; s < key.length(); s++) {
        if (Character.isDigit(key.charAt(s))) {
          num=Integer.parseInt(key.substring(s));
          key=key.substring(0,s);
          break;
        }
      }
      final Object entry=props.get(key);
      if (val == null) {
        BaseX.errln("%: \"%\" not found.",filename,key);
      }
 else       if (entry instanceof String) {
        props.put(key,val);
      }
 else       if (entry instanceof Integer) {
        props.put(key,Integer.parseInt(val));
      }
 else       if (entry instanceof Boolean) {
        props.put(key,Boolean.parseBoolean(val));
      }
 else       if (entry instanceof String[]) {
        if (num == 0) {
          props.put(key,new String[Integer.parseInt(val)]);
        }
 else {
          ((String[])entry)[num - 1]=val;
        }
      }
 else       if (entry instanceof int[]) {
        ((int[])entry)[num]=Integer.parseInt(val);
      }
    }
    br.close();
  }
 catch (  final Exception ex) {
    BaseX.errln("% could not be parsed.",filename);
    BaseX.debug(ex);
  }
}
