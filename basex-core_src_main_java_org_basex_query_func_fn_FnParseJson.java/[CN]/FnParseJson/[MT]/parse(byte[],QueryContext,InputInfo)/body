{
  try {
    final JsonParserOptions opts=toOptions(1,Q_OPTIONS,new JsonParserOptions(),qc);
    opts.set(JsonOptions.FORMAT,JsonFormat.MAP);
    return JsonConverter.get(opts).convert(json,null);
  }
 catch (  final QueryException ex) {
    throw ex.error() == INVALIDOPT_X ? JSON_OPT_X.get(ii,ex.getLocalizedMessage()) : ex;
  }
catch (  final QueryIOException ex) {
    Util.debug(ex);
    final QueryException qe=ex.getCause(info);
    final QueryError error=qe.error();
    final String message=ex.getLocalizedMessage();
    if (error == BXJS_PARSE_X_X_X)     throw JSON_PARSE_X.get(ii,message);
    if (error == BXJS_DUPLICATE_X)     throw JSON_DUPLICATE_X.get(ii,message);
    throw qe;
  }
}
