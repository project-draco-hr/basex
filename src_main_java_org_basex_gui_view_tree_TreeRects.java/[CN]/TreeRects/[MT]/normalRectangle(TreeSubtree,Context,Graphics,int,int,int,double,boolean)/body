{
  final int subSi=sub.getLevelSize(rn,lv);
  rects[rn][lv]=new TreeRect[subSi];
  double xx=rn * w * subSi + ds;
  double ww=w;
  for (int i=0; i < subSi; ++i) {
    if (slim) {
      final double boxMiddle=xx + ww / 2f;
      final byte[] b=getText(c,rn,sub.getPrePerIndex(rn,lv,i));
      int o=calcOptimalRectWidth(g,b) + 10;
      if (o < MIN_TXT_SPACE)       o=MIN_TXT_SPACE;
      if (w > o) {
        xx=boxMiddle - o / 2d;
        ww=o;
      }
    }
    rects[rn][lv][i]=new TreeRect((int)xx + BORDER_PADDING,(int)ww - BORDER_PADDING);
    xx+=w;
  }
}
