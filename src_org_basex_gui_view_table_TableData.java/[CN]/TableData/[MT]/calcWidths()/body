{
  final Data data=GUI.context.data();
  final int cs=cols.size;
  colW=new double[cs];
  final int nRows=rows.size;
  final TableIterator ti=new TableIterator(data,this);
  for (int l=0; l < MAXROWS && l < nRows; l++) {
    final int pre=rows.list[l];
    ti.init(pre);
    while (ti.more()) {
      colW[ti.col]+=ti.elem ? data.textLen(ti.pre) : data.attValue(ti.pre).length;
    }
  }
  for (int c=0; c < cs; c++) {
    System.out.println(c + ": " + colW[c]);
  }
  System.out.println("---------");
  double sum=0;
  for (int c=0; c < cs; c++)   sum+=colW[c];
  for (int c=0; c < cs; c++)   colW[c]=Math.max(0.5 / cs,colW[c] / sum);
  sum=0;
  for (int c=0; c < cs; c++)   sum+=colW[c];
  for (int c=0; c < cs; c++)   colW[c]/=sum;
  final TokenList tl=new TokenList();
  for (int c=0; c < cs; c++)   tl.add(Token.token(colW[c]));
  final IntList il=IntList.createOrder(tl.finish(),true,false);
  final double[] cw=new double[cs];
  final IntList co=new IntList();
  final BoolList ce=new BoolList();
  final TokenList cn=new TokenList();
  for (int c=0; c < cs; c++) {
    final int i=il.list[c];
    cw[c]=colW[i];
    co.add(cols.list[i]);
    ce.add(elms.list[i]);
    cn.add(colNames.list[i]);
  }
  colW=cw;
  cols=co;
  elms=ce;
  colNames=cn;
}
