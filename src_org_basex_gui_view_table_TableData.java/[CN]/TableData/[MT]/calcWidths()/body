{
  if (cols.length == 0)   return;
  final Data data=GUI.context.data();
  final int cs=cols.length;
  final int nRows=rows.size;
  final TableIterator ti=new TableIterator(data,this);
  for (int l=0, ll=Math.min(nRows,MAXROWS); l < ll; l++) {
    final int pre=rows.list[l];
    ti.init(pre);
    while (ti.more()) {
      cols[ti.col].width+=ti.elem ? data.textLen(ti.pre) : data.attValue(ti.pre).length;
    }
  }
  if (data.fs == null) {
    final TokenList tl=new TokenList();
    for (int c=0; c < cs; c++)     tl.add(Token.token(cols[c].width));
    final IntList il=IntList.createOrder(tl.finish(),true,false);
    final TableCol[] cl=new TableCol[cs];
    for (int c=0; c < cs; c++)     cl[c]=cols[il.list[c]];
    cols=cl;
  }
  setWidths(false);
}
