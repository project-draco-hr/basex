{
  if (steps) {
    final NodIter ir=new NodIter();
    iter(0,ir,ctx);
    if (ir.size == 0)     return Seq.EMPTY;
    if (ir.size == 1)     return ir.list[0];
    final NodeBuilder nb=new NodeBuilder(false);
    Nod it;
    while ((it=ir.next()) != null)     nb.add(it);
    return nb.finish();
  }
  Item it=ctx.item;
  for (  final Expr e : expr) {
    if (e instanceof Step) {
      ctx.item=it;
      it=ctx.iter(e).finish();
    }
 else {
      final SeqBuilder sb=new SeqBuilder();
      final Iter ir=it.iter();
      ctx.size=it.size();
      ctx.pos=1;
      Item i;
      while ((i=ir.next()) != null) {
        if (!i.node())         Err.or(NODESPATH,this,i.type);
        ctx.item=i;
        sb.add(ctx.iter(e));
        ctx.pos++;
      }
      it=sb.finish();
    }
  }
  final Iter ir=it.iter();
  Item i=ir.next();
  if (i != null) {
    if (i.node()) {
      final NodeBuilder nb=new NodeBuilder(false);
      nb.add((Nod)i);
      while ((i=ir.next()) != null) {
        if (!i.node())         Err.or(EVALNODESVALS);
        nb.add((Nod)i);
      }
      return nb.finish();
    }
    while ((i=ir.next()) != null)     if (i.node())     Err.or(EVALNODESVALS);
  }
  return it;
}
