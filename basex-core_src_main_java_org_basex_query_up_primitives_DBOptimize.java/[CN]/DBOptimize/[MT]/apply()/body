{
  final MetaData meta=data.meta;
  final MainOptions opts=meta.options;
  updates.nprops.put(MainOptions.TEXTINDEX,meta.createtext);
  updates.nprops.put(MainOptions.ATTRINDEX,meta.createattr);
  updates.nprops.put(MainOptions.FTINDEX,meta.createftxt);
  updates.initOptions();
  updates.assignOptions();
  meta.createtext=opts.get(MainOptions.TEXTINDEX);
  meta.createattr=opts.get(MainOptions.ATTRINDEX);
  meta.createftxt=opts.get(MainOptions.FTINDEX);
  final int mc=opts.get(MainOptions.MAXCATS);
  final int ml=opts.get(MainOptions.MAXLEN);
  final boolean rebuild=mc != meta.maxcats || ml != meta.maxlen;
  final boolean st=opts.get(MainOptions.STEMMING);
  final boolean cs=opts.get(MainOptions.CASESENS);
  final boolean dc=opts.get(MainOptions.DIACRITICS);
  final String sw=opts.get(MainOptions.STOPWORDS);
  final Language ln=Language.get(opts);
  final boolean rebuildFT=rebuild || !ln.equals(meta.language) || st != meta.stemming || cs != meta.casesens || dc != meta.diacritics || !sw.equals(meta.stopwords);
  meta.language=ln;
  meta.stemming=st;
  meta.casesens=cs;
  meta.diacritics=dc;
  meta.stopwords=sw;
  meta.maxcats=mc;
  meta.maxlen=ml;
  try {
    if (all)     OptimizeAll.optimizeAll(data,updates.qc.context,null);
 else     Optimize.optimize(data,rebuild,rebuildFT,null);
  }
 catch (  final IOException ex) {
    throw UPDBOPTERR.get(info,ex);
  }
 finally {
    updates.resetOptions();
  }
  if (all)   updates.qc.resource.remove(data.meta.name);
}
