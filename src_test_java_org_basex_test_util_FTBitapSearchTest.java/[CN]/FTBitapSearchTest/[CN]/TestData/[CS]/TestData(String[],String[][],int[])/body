{
  expected=e;
  final byte[][] hs=new byte[h.length][];
  for (int i=0; i < h.length; i++)   hs[i]=token(h[i]);
  haystack=new FTIterator(){
    /** 
 * Index of current element. 
 */
    private int cnt;
    @Override public boolean hasNext(){
      return cnt < hs.length;
    }
    @Override public byte[] nextToken(){
      if (hasNext())       return hs[cnt++];
      throw new NoSuchElementException();
    }
    @Override public FTSpan next(){
      return null;
    }
    @Override public FTIterator init(    final byte[] text){
      return this;
    }
  }
;
  needles=new ArrayList<byte[][]>(n.length);
  for (  final String[] s : n) {
    final TokenList needle=new TokenList(s.length);
    for (    final String t : s)     needle.add(token(t));
    needles.add(needle.toArray());
  }
}
