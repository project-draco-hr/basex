{
  super(main,CREATEADVTITLE);
  db=List.list(main.context);
  final Prop prop=gui.context.prop;
  final GUIProp gprop=gui.gprop;
  final BaseXBack p1=new BaseXBack(new BorderLayout()).border(8);
  final BaseXBack p=new BaseXBack(new TableLayout(6,2,6,0));
  p.add(new BaseXLabel(CREATETITLE + COL,true,true).border(0,0,4,0));
  p.add(new BaseXLabel());
  path=new BaseXTextField(gprop.get(GUIProp.OPENPATH),this);
  path.addKeyListener(keys);
  p.add(path);
  final BaseXButton browse=new BaseXButton(BUTTONBROWSE,this);
  browse.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    final ActionEvent e){
      choose();
    }
  }
);
  p.add(browse);
  p.add(new BaseXLabel(CREATEPATTERN + COL,true,true).border(8,0,4,0));
  p.add(new BaseXLabel());
  filter=new BaseXTextField(prop.get(Prop.CREATEFILTER),this);
  p.add(filter);
  p.add(new BaseXLabel());
  p.add(new BaseXLabel(CREATENAME,false,true).border(8,0,4,0));
  p.add(new BaseXLabel());
  dbname=new BaseXTextField(this);
  final String dbn=IO.get(gprop.get(GUIProp.OPENPATH)).dbname();
  dbname.setText(dbn.replaceAll("[^\\w-]",""));
  dbname.addKeyListener(keys);
  p.add(dbname);
  p.add(new BaseXLabel());
  p1.add(p,BorderLayout.CENTER);
  info=new BaseXLabel(" ");
  p1.add(info,BorderLayout.SOUTH);
  final BaseXBack p2=new BaseXBack(new TableLayout(14,1)).border(8);
  intparse=new BaseXCheckBox(CREATEINTPARSE,prop.is(Prop.INTPARSE),0,this);
  p2.add(intparse);
  p2.add(new BaseXLabel(INTPARSEINFO,true,false));
  entities=new BaseXCheckBox(CREATEENTITIES,prop.is(Prop.ENTITY),this);
  p2.add(entities);
  dtd=new BaseXCheckBox(CREATEDTD,prop.is(Prop.DTD),12,this);
  p2.add(dtd);
  chop=new BaseXCheckBox(CREATECHOP,prop.is(Prop.CHOP),0,this);
  p2.add(chop);
  p2.add(new BaseXLabel(CHOPPINGINFO,false,false));
  p2.add(new BaseXLabel(" "));
  final boolean rsen=CatalogResolverWrapper.available();
  final BaseXBack fl=new BaseXBack(new TableLayout(2,2,6,0));
  usecat=new BaseXCheckBox(USECATFILE,!prop.get(Prop.CATFILE).isEmpty(),0,this);
  usecat.setEnabled(rsen);
  fl.add(usecat);
  fl.add(new BaseXLabel());
  cfile=new BaseXTextField(prop.get(Prop.CATFILE),this);
  cfile.setEnabled(rsen);
  fl.add(cfile);
  browsec=new BaseXButton(BUTTONBROWSE,this);
  browsec.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    final ActionEvent e){
      catchoose();
    }
  }
);
  browsec.setEnabled(rsen);
  fl.add(browsec);
  p2.add(fl);
  if (!rsen) {
    final BaseXBack rs=new BaseXBack(new TableLayout(2,1));
    rs.add(new BaseXLabel(USECATHLP).color(GUIConstants.COLORDARK));
    rs.add(new BaseXLabel(USECATHLP2).color(GUIConstants.COLORDARK));
    p2.add(rs);
  }
  final BaseXBack p3=new BaseXBack(new TableLayout(6,1,0,0)).border(8);
  txtindex=new BaseXCheckBox(INFOTEXTINDEX,prop.is(Prop.TEXTINDEX),0,this);
  p3.add(txtindex);
  p3.add(new BaseXLabel(TXTINDEXINFO,true,false));
  atvindex=new BaseXCheckBox(INFOATTRINDEX,prop.is(Prop.ATTRINDEX),0,this);
  p3.add(atvindex);
  p3.add(new BaseXLabel(ATTINDEXINFO,true,false));
  pathindex=new BaseXCheckBox(INFOPATHINDEX,prop.is(Prop.PATHINDEX),0,this);
  p3.add(pathindex);
  p3.add(new BaseXLabel(PATHINDEXINFO,true,false));
  final BaseXBack p4=new BaseXBack(new TableLayout(2,1,0,0)).border(8);
  ftxindex=new BaseXCheckBox(INFOFTINDEX,prop.is(Prop.FTINDEX),0,this);
  p4.add(ftxindex);
  ft=new DialogFT(this,true);
  p4.add(ft);
  final BaseXTabs tabs=new BaseXTabs(this);
  tabs.addTab(GENERALINFO,p1);
  tabs.addTab(PARSEINFO,p2);
  tabs.addTab(INDEXINFO,p3);
  tabs.addTab(FTINFO,p4);
  set(tabs,BorderLayout.CENTER);
  buttons=okCancel(this);
  set(buttons,BorderLayout.SOUTH);
  action(null);
  finish(null);
}
