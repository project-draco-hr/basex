{
  try {
    final IO file=new IO(val);
    final XMLParser parser=new XMLParser(file);
    final Data tmp=new MemBuilder().build(parser,"tmp");
    final Data data=context.data();
    for (int i=nodes.size - 1; i >= 0; i--) {
      if (data.kind(nodes.pre[i]) != Data.ELEM)       return error(COPYTAGS);
    }
    for (int i=nodes.size - 1; i >= 0; i--) {
      final int par=nodes.pre[i];
      data.insert(Insert.pre(par,pos,data),par,tmp);
    }
    data.flush();
    return Prop.info ? info(INSERTINFO,nodes.size,perf.getTimer()) : true;
  }
 catch (  final IOException ex) {
    BaseX.debug(ex);
    return error(ex.getMessage());
  }
}
