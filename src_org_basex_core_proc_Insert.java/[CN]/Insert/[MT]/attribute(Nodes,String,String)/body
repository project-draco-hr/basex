{
  final byte[] n=Token.token(nam);
  final byte[] v=Token.token(val);
  final Data data=context.data();
  final int att=data.attNameID(n);
  if (!Insert.check(n))   return error(ATTINVALID,nam);
  for (int i=nodes.size - 1; i >= 0; i--) {
    final int par=nodes.pre[i];
    final int kind=data.kind(par);
    if (kind != Data.ELEM)     return error(COPYTAGS);
    final int last=par + data.attSize(par,kind);
    for (int p=par; p < last; p++) {
      if (att == data.attNameID(p))       return error(ATTDUPL,n);
    }
  }
  for (int i=nodes.size - 1; i >= 0; i--) {
    final int par=nodes.pre[i];
    data.insert(par + data.attSize(par,data.kind(par)),par,n,v);
  }
  data.flush();
  return Prop.info ? timer(INSERTINFO,nodes.size) : true;
}
