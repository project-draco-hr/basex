{
  super(ii);
  final int comma=lastIndexOf(pic,',');
  byte[] pres=comma == -1 ? pic : substring(pic,0,comma);
  final int pl=pres.length;
  if (pl > 1) {
    final int p=pres[pl - 1];
    if (p == 'a' || p == 'c' || p == 'o' || p == 't') {
      pres=substring(pres,0,pl - 1);
      if (p == 'o')       ordinal=EMPTY;
      if (p == 't')       trad=true;
    }
  }
  finish(pres.length == 0 ? df : presentation(pres,df,true));
  final byte[] width=comma == -1 ? null : substring(pic,comma + 1);
  if (width != null) {
    final Matcher m=WIDTH.matcher(string(width));
    if (!m.find())     throw PICDATE.get(ii,width);
    int i=toInt(m.group(1));
    if (i != Integer.MIN_VALUE)     min=i;
    final String mc=m.group(3);
    i=mc != null ? toInt(mc) : Integer.MIN_VALUE;
    if (i != Integer.MIN_VALUE)     max=i;
  }
}
