{
  if (eq(name.uri(),XSURI)) {
    final Type type=getCast(name,args.length,ii);
    final SeqType to=SeqType.get(type,Occ.ZERO_ONE);
    return TypedFunc.constr(new Cast(sc,ii,args[0],to));
  }
  final StandardFunc fun=get().get(name,args,sc,ii);
  if (fun != null) {
    if (!sc.xquery3() && fun.has(Flag.X30))     throw FUNC30.get(ii);
    final Ann ann=new Ann();
    if (fun.func.has(Flag.UPD)) {
      ann.add(Ann.Q_UPDATING,Empty.SEQ,ii);
      ctx.updating();
    }
    return new TypedFunc(fun,ann);
  }
  final TypedFunc tf=ctx.funcs.getRef(name,args,sc,ii);
  if (tf != null)   return tf;
  final JavaMapping jf=JavaMapping.get(name,args,ctx,sc,ii);
  if (jf != null)   return TypedFunc.java(jf);
  if (!dyn && FuncType.find(name) == null) {
    return ctx.funcs.getFuncRef(name,args,sc,ii);
  }
  return null;
}
