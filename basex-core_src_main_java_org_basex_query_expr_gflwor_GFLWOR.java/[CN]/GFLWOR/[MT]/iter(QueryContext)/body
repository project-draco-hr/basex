{
  return new Iter(){
    /** 
 * Clause evaluator. 
 */
    private final Eval ev=newEval();
    /** 
 * Return iterator. 
 */
    private Iter sub=Empty.ITER;
    /** 
 * If the iterator has been emptied. 
 */
    private boolean drained;
    @Override public Item next() throws QueryException {
      if (drained)       return null;
      for (; ; ) {
        final Item it=sub.next();
        qc.checkStop();
        if (it != null)         return it;
        if (!ev.next(qc)) {
          drained=true;
          return null;
        }
        sub=ret.iter(qc);
      }
    }
  }
;
}
