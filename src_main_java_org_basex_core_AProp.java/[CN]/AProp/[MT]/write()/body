{
  final StringBuilder user=new StringBuilder();
  BufferedReader br=null;
  try {
    if (file.exists()) {
      br=new BufferedReader(new FileReader(file.file()));
      for (String line; (line=br.readLine()) != null; ) {
        if (line.equals(PROPUSER))         break;
      }
      for (String line; (line=br.readLine()) != null; ) {
        user.append(line).append(NL);
      }
    }
  }
 catch (  final Exception ex) {
    Util.debug(ex);
  }
 finally {
    if (br != null)     try {
      br.close();
    }
 catch (    final IOException e) {
    }
  }
  BufferedWriter bw=null;
  try {
    bw=new BufferedWriter(new FileWriter(file.file()));
    bw.write(PROPHEADER + NL);
    for (    final Field f : getClass().getFields()) {
      final Object obj=f.get(null);
      if (!(obj instanceof Object[]))       continue;
      final String key=((Object[])obj)[0].toString();
      final Object val=props.get(key);
      if (val instanceof String[]) {
        final String[] str=(String[])val;
        bw.write(key + " = " + str.length+ NL);
        final int is=str.length;
        for (int i=0; i < is; ++i) {
          if (str[i] != null)           bw.write(key + (i + 1) + " = "+ str[i]+ NL);
        }
      }
 else       if (val instanceof int[]) {
        final int[] num=(int[])val;
        final int ns=num.length;
        for (int i=0; i < ns; ++i) {
          bw.write(key + i + " = "+ num[i]+ NL);
        }
      }
 else {
        bw.write(key + " = " + val+ NL);
      }
    }
    bw.write(NL + PROPUSER + NL);
    bw.write(user.toString());
  }
 catch (  final Exception ex) {
    Util.errln("% could not be written.",file);
    Util.debug(ex);
  }
 finally {
    if (bw != null)     try {
      bw.close();
    }
 catch (    final IOException e) {
    }
  }
}
