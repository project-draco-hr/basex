{
  if ((resultWordA == null && resultWordB == null) || resultWordA == null) {
    return new int[0];
  }
  if (resultWordB == null) {
    return resultWordA;
  }
  int i=0;
  int k=0;
  int count=0;
  int[] maxResult=new int[resultWordA.length];
  for (; i < resultWordA.length; i++) {
    while (k < resultWordB.length && resultWordA[i] > resultWordB[k])     k++;
    if (k == resultWordB.length)     break;
    if (resultWordA[i] == resultWordB[k]) {
      while (i < resultWordA.length - 1 && resultWordA[i] == resultWordA[i + 1])       i++;
      while (k < resultWordB.length - 1 && resultWordB[k] == resultWordB[k + 1])       k++;
      k++;
    }
 else {
      maxResult[count]=resultWordA[i];
      count++;
    }
  }
  int[] result;
  if (i == resultWordA.length) {
    if (count == 0)     return new int[0];
    result=new int[count];
    System.arraycopy(maxResult,0,result,0,count);
  }
 else {
    result=new int[count + resultWordA.length - i];
    System.arraycopy(maxResult,0,result,0,count);
    System.arraycopy(resultWordA,i,result,count,resultWordA.length - i);
  }
  return result;
}
