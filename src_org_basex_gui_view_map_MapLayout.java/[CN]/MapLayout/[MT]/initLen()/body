{
  int size=data.meta.size;
  textLen=new long[size];
  for (int i=0; i < size; i++)   textLen[i]=0;
  final int[] parStack=new int[IO.MAXHEIGHT];
  int l=0;
  int par=0;
  int pre=0;
  for (pre=0; pre < size; pre++) {
    final byte kind=(byte)data.kind(pre);
    par=data.parent(pre,kind);
    while (l > 1 && parStack[l - 2] >= par) {
      textLen[parStack[l - 2]]+=textLen[pre - 1];
      l--;
    }
    if (kind == Data.TEXT) {
      textLen[pre]=data.textLen(pre);
      parStack[l]=pre;
      l++;
    }
 else {
      parStack[l]=pre;
      textLen[pre]=0;
      l++;
    }
  }
  while (l > 0 && parStack[l - 1] > par) {
    textLen[parStack[l - 2]]+=textLen[pre - 1];
    l--;
  }
}
