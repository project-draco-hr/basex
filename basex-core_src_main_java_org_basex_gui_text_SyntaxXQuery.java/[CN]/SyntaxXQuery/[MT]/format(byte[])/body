{
  int ind=0;
  final TokenBuilder tb=new TokenBuilder();
  final int tl=text.length;
  for (int t=0; t < tl; t++) {
    final byte ch=text[t];
    final int open=TextEditor.OPENING.indexOf(ch);
    final int close=TextEditor.CLOSING.indexOf(ch);
    final int next=t + 1 < tl ? text[t + 1] : 0;
    final int prev=t > 0 ? text[t - 1] : 0;
    if (open != -1 && (next != ':' || ch != '(')) {
      ind++;
      tb.addByte(ch);
      if (next != '\n' && !matches(TextEditor.CLOSING.charAt(open),t,text,3)) {
        tb.add('\n');
        for (int i=0; i < ind; i++)         tb.add(TextEditor.INDENT);
      }
    }
 else     if (close != -1 && (prev != ':' || ch != ')')) {
      ind--;
      if (!spaces(tb) && !matches(TextEditor.OPENING.charAt(close),t,text,-3)) {
        tb.add('\n');
        for (int i=0; i < ind; i++)         tb.add(TextEditor.INDENT);
      }
      tb.addByte(ch);
    }
 else {
      tb.addByte(ch);
    }
  }
  return tb.finish();
}
