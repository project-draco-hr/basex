{
  final ArrayList<IntList> alil=new ArrayList<>();
  final int ts=data.meta.size;
  final IntList roots=data.resources.docs();
  alil.add(new IntList());
  final int rs=roots.size();
  for (int i=0; i < rs; ++i) {
    final int root=roots.get(i);
    alil.get(0).add(root);
    final int sh=i + 1 == rs ? ts : roots.get(i + 1);
    for (int p=root + 1; p < sh; ++p) {
      final int k=data.kind(p);
      if (!atts && k == Data.ATTR)       continue;
      final int par=data.parent(p,k);
      int lv=-1;
      final int is=alil.size();
      while (++lv < is && par != alil.get(lv).peek())       ;
      for (int j=is; j <= lv + 1; ++j)       alil.add(new IntList());
      alil.get(lv + 1).add(p);
    }
  }
  maxLevel=alil.size();
  nodes=alil.toArray(new IntList[alil.size()]);
}
