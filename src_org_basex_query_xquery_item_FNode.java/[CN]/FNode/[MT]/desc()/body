{
  return new NodeIter(){
    /** 
 * Iterator. 
 */
    private NodeMore[] it=new NodeMore[256];
    /** 
 * Iterator Level. 
 */
    private int l;
    /** 
 * First call. 
 */
    private boolean more;
    @Override public Node next() throws XQException {
      if (!more) {
        it[0]=FNode.this.child();
        more=true;
      }
      if (l < 0)       return null;
      final Node node=it[l].next();
      if (node == null)       return null;
      final NodeMore ch=node.child();
      if (ch.more()) {
        it[++l]=ch;
      }
 else {
        while (!it[l].more())         if (l-- <= 0)         return node;
      }
      return node;
    }
  }
;
}
