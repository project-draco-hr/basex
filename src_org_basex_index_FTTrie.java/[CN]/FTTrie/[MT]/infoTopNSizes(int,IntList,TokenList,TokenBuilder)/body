{
  int[][] top=new int[sizes.size][2];
  int max=(n < sizes.size) ? n : sizes.size;
  for (int i=0; i < top.length; i++) {
    top[i][0]=sizes.list[i];
    top[i][1]=i;
  }
  Arrays.sort(top,0,top.length,new Comparator<int[]>(){
    public int compare(    final int[] s1,    final int[] s2){
      return (s1[0] < s2[0]) ? -1 : (s1 == s2) ? 0 : 1;
    }
  }
);
  final byte[][] tok=toks.finish();
  for (int i=top.length - 1; i > top.length - max - 1; i--) {
    tb.add("- ");
    tb.add(tok[top[i][1]]);
    tb.add('\t');
    tb.add(Token.token(top[i][0]));
    tb.add("x ");
    tb.add(NL);
  }
  tb.add(NL);
  for (int i=0; i < max && i < top.length; i++) {
    tb.add("- ");
    tb.add(tok[top[i][1]]);
    tb.add('\t');
    tb.add(Token.token(top[i][0]));
    tb.add("x ");
    tb.add(NL);
  }
}
