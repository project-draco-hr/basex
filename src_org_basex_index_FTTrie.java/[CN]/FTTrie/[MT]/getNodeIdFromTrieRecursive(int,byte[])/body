{
  byte[] vsn=sn;
  final int[] ne=getNodeEntry(cn);
  if (cn != 0) {
    int i=0;
    while (i < vsn.length && i < ne[0] && Token.diff((byte)ne[i + 1],vsn[i]) == 0) {
      i++;
    }
    if (ne[0] == i) {
      if (vsn.length == i) {
        return ne;
      }
 else {
        final byte[] tmp=new byte[vsn.length - i];
        System.arraycopy(vsn,i,tmp,0,tmp.length);
        vsn=tmp;
        final int pos=getInsertingPosition(ne,vsn[0]);
        if (!found) {
          return null;
        }
 else {
          return getNodeIdFromTrieRecursive(ne[pos],vsn);
        }
      }
    }
 else {
      return null;
    }
  }
 else {
    final int pos=getInsertingPosition(ne,vsn[0]);
    if (!found) {
      return null;
    }
 else {
      return getNodeIdFromTrieRecursive(ne[pos],vsn);
    }
  }
}
