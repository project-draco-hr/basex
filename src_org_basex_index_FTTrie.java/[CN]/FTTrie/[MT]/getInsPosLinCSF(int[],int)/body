{
  found=false;
  int i=cne[0] + 1;
  final int s=cne.length - 1;
  if (s == i)   return i;
  while (i < s && Token.diff((byte)Token.lc(cne[i + 1]),(byte)Token.lc(toInsert)) < 0)   i+=2;
  if (i < s) {
    if (Token.diff((byte)cne[i + 1],(byte)toInsert) == 0) {
      found=true;
      return i;
    }
 else     if (Token.diff((byte)Token.lc(cne[i + 1]),(byte)Token.lc(toInsert)) == 0) {
      if (Token.eq((byte)cne[i + 1],(byte)Token.uc(toInsert))) {
        return i;
      }
      if (i + 3 < s && Token.diff((byte)cne[i + 3],(byte)toInsert) == 0) {
        found=true;
      }
      return i + 2;
    }
  }
  return i;
}
