{
  int j=pointerEnding;
  int i=pointerNode;
  boolean last=lastFound;
  final int[] ne=entry(node);
  final long tdid=did;
  if (ending == null || ending.length == 0) {
    if (ne[ne.length - 1] > 0) {
      idata=FTIndexIterator.union(iter(tdid,ne[ne.length - 1],inD,f),idata);
    }
    if (hasNextNodes(ne)) {
      for (int t=ne[0] + 1; t < ne.length - 1; t+=2) {
        wc(ne[t],null,last,0,0,f);
      }
    }
    return;
  }
  while (!last && i < ne[0] + 1 && ne[i] != ending[j])   i++;
  while (i + ending.length < ne[0] + 1 && ne[i + 1] == ending[0])   i++;
  countSkippedChars=countSkippedChars + i - pointerNode - 1;
  while (i < ne[0] + 1 && j < ending.length && ne[i] == ending[j]) {
    i++;
    j++;
    last=true;
  }
  if (node == 0 || j == ending.length && i < ne[0] + 1) {
    if (!hasNextNodes(ne)) {
      countSkippedChars=0;
      return;
    }
    for (int t=ne[0] + 1; t < ne.length - 1; t+=2) {
      wc(ne[t],ending,false,1,0,f);
    }
    countSkippedChars=0;
    return;
  }
 else   if (j == ending.length && i == ne[0] + 1) {
    idata=FTIndexIterator.union(iter(tdid,ne[ne.length - 1],inD,f),idata);
    countSkippedChars=0;
    if (hasNextNodes(ne)) {
      for (int t=ne[0] + 1; t < ne.length - 1; t+=2) {
        if (j == 1) {
          wc(ne[t],ending,false,0,0,f);
        }
        wc(ne[t],ending,last,0,j,f);
      }
    }
    return;
  }
 else   if (j < ending.length && i < ne[0] + 1) {
    if (!hasNextNodes(ne)) {
      countSkippedChars=0;
      return;
    }
    wc(node,ending,false,i + 1,0,f);
    return;
  }
 else   if (j < ending.length && i == ne[0] + 1) {
    if (!hasNextNodes(ne)) {
      countSkippedChars=0;
      return;
    }
    for (int t=ne[0] + 1; t < ne.length - 1; t+=2) {
      if (j == 1) {
        wc(ne[t],ending,last,1,0,f);
      }
      wc(ne[t],ending,last,1,j,f);
    }
  }
}
