{
  subst=0;
  final int s=tb.size();
  final TokenBuilder tmp=new TokenBuilder(s);
  int ls=0;
  int nx=tb.cp(0);
  for (int c=0; c < s; ) {
    int sb=0;
    int ch=nx;
    c+=tb.cl(c);
    nx=c < s ? tb.cp(c) : 0;
    if (ch == ls) {
      ch='*';
    }
 else     if (ch == '\u00e4') {
      ch='a';
    }
 else     if (ch == '\u00f6') {
      ch='o';
    }
 else     if (ch == '\u00fc') {
      ch='u';
    }
 else     if (ch == '\u00df') {
      tmp.add('s');
      ch='s';
      subst++;
    }
 else     if (ch == 's' && nx == 'c' && c + 1 < s && tb.get(c + 1) == 'h') {
      ch='\1';
      sb=2;
    }
 else     if (ch == 'c' && nx == 'h') {
      ch='\2';
      sb=1;
    }
 else     if (ch == 'e' && nx == 'i') {
      ch='\3';
      sb=1;
    }
 else     if (ch == 'i' && nx == 'e') {
      ch='\4';
      sb=1;
    }
 else     if (ch == 'i' && nx == 'g') {
      ch='\5';
      sb=1;
    }
 else     if (ch == 's' && nx == 't') {
      ch='\6';
      sb=1;
    }
    if (sb > 0) {
      c+=sb;
      nx=c < s ? tb.cp(c) : 0;
      subst+=sb;
    }
    ls=ch;
    tmp.add(ch);
  }
  return tmp;
}
