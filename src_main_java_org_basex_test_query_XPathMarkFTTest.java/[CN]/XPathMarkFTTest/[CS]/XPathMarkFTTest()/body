{
  doc="<?xml version='1.0' encoding='UTF-8'?>" + "<A id='n1' pre='1' post='26' xml:lang='en'>" + "<B id='n2' pre='2' post='3'>"+ "<C id='n3' pre='3' post='1'>clergywoman</C>"+ "<D id='n4' pre='4' post='2'>decadent</D></B>"+ "<E id='n5' pre='5' post='22'>"+ "<F id='n6' pre='6' post='6'>"+ "<G id='n7' pre='7' post='4'>gentility</G>"+ "<H id='n8' pre='8' post='5' idrefs='n17 n26'>"+ "happy-go-lucky man</H></F>"+ "<I id='n9' pre='9' post='9'>"+ "<J id='n10' pre='10' post='7'>jigsaw</J>"+ "<K id='n11' pre='11' post='8'>kerchief</K></I>"+ "<L id='n12' pre='12' post='15'>"+ "<!--L is the twelve-th letter of the English alphabet-->"+ "The letter L is followed by the letter:"+ "<M id='n13' pre='13' post='10'/>"+ "which is followed by the letter:<N id='n14' pre='14' post='13'>"+ "<O id='n15' pre='15' post='11'>ovenware</O>"+ "<P id='n16' pre='16' post='12'>plentiful</P></N>"+ "<?myPI value='XPath is nice'?>"+ "<Q id='n17' pre='17' post='14' idrefs='n8 n26'>"+ "quarrelsome</Q></L>"+ "<R id='n18' pre='18' post='18'>"+ "<S id='n19' pre='19' post='16'>sage</S>"+ "<T id='n20' pre='20' post='17'>tattered</T></R>"+ "<U id='n21' pre='21' post='21'>"+ "<V id='n22' pre='22' post='19'>voluptuary</V>"+ "<W id='n23' pre='23' post='20'>wriggle</W></U></E>"+ "<X id='n24' pre='24' post='25'>"+ "<Y id='n25' pre='25' post='23'>yawn</Y>"+ "<Z id='n26' pre='26' post='24' idrefs='n8 n17'"+ " xml:lang='it'>zuzzurellone</Z></X></A>";
  queries=new Object[][]{{"A01",nodes(59,64,79),"//L/*"},{"A02",nodes(20),"//L/parent::*"},{"A03",nodes(59,64,68,73,79),"//L/descendant::*"},{"A04",nodes(53,59,64,68,73,79),"//L/descendant-or-self::*"},{"A05",nodes(1,20),"//L/ancestor::*"},{"A06",nodes(1,20,53),"//L/ancestor-or-self::*"},{"A07",nodes(85,99),"//L/following-sibling::*"},{"A08",nodes(24,39),"//L/preceding-sibling::*"},{"A09",nodes(85,89,94,99,103,108,113,117,122),"//L/following::*"},{"A10",nodes(6,10,15,24,28,33,39,43,48),"//L/preceding::*"},{"A11",nodes(53),"//L/self::*"},{"A12",nodes(54),"//L/@id"},{"F01",nodes(1,20,53,64,73),"//*[contains(., 'plentiful')]"},{"F02",nodes(73),"//*[starts-with(., 'plentiful')]"},{"F03",nodes(73),"//*[substring(., 1, 9) = 'plentiful']"},{"F04",nodes(68),"//*[substring-after(., 'oven') = 'ware']"},{"F05",nodes(73),"//*[substring-before(., 'ful') = 'plenti']"},{"F06",nodes(1,20),"//*[string-length(translate(" + "normalize-space(.), ' ', '')) > 100]"},{"F07",nodes(59),"//*[concat(., ..) = ..]"},{"F08",nodes(1,6,20,24,39,53,85,99,113),"//*[ceiling(@pre div @post) = 1]"},{"F09",nodes(1,6,20,53,113),"//*[floor(@pre div @post) = 0]"},{"F10",nodes(1,20),"//*[round(@pre div @post) = 0]"},{"F11",nodes(113),"//*[name(.) = 'X']"},{"F12",nodes(122),"//*[lang('it')]"},{"F13",nodes(79),"//L/child::*[last()]"},{"F14",nodes(73),"//L/descendant::*[4]"},{"F15",nodes(1),"//L/ancestor::*[2]"},{"F16",nodes(85),"//L/following-sibling::*[1]"},{"F17",nodes(39),"//L/preceding-sibling::*[1]"},{"F18",nodes(113),"//L/following::*[7]"},{"F19",nodes(15),"//L/preceding::*[7]"},{"F20",nodes(68,73),"//*[count(ancestor::*) > 3]"},{"F21",nodes(1,6,20,24,39,53,64,85,99,113),"//*[sum(ancestor::*/@pre) < sum(descendant::*/@pre)]"},{"F22",nodes(1,122),"id('n1 n26')"},{"F23",nodes(33,79,122),"id(id(//*[.='happy-go-lucky man']/@idrefs)/@idrefs)"},{"F24",nodes(1,6,20,53,113),"//*[number(@pre) < number(@post)]"},{"F25",nodes(1),"//*[string(@pre - 1) = '0']"},{"F26",nodes(1,6,10,15,20,24,28,39,43,48,53,59,64,68,73,85,89,94,99,103,108,113,117),"//*[boolean(@id) = true() and boolean(@idrefs) = false()]"},{"O01",nodes(85,99,113),"//*[child::* and preceding::Q]"},{"O02",nodes(89,94,103,108,117,122),"//*[not(child::*) and preceding::Q]"},{"O03",nodes(6,10,15,24,28,33,39,43,48,85,89,94,99,103,108,113,117,122),"//*[preceding::L or following::L]"},{"O04",nodes(1,20,59,64,68,73,79),"//L/ancestor::* | //L/descendant::*"},{"O05",nodes(33),"//*[.='happy-go-lucky man']"},{"O06",nodes(59,64,68,73,79),"//*[@pre > 12 and @post < 15]"},{"O07",nodes(1,6,10,15,20,28,33,43,48,53,59,64,68,73,79,89,94,103,108,113,117,122),"//*[@pre != @post]"},{"O08",nodes(6,24,39,48,53,59,64,79,85,89,94,99,103,108,113,117,122),"//*[((@post * @post + @pre * @pre) div " + "(@post + @pre)) > ((@post - @pre) * (@post - @pre))]"},{"O09",nodes(6,15,24,33,43,53,64,73,85,94,103,113,122),"//*[@pre mod 2 = 0]"},{"P01",nodes(20),"//*[L]"},{"P02",nodes(59,64,79),"//*[parent::L]"},{"P03",nodes(1,20),"//*[descendant::L]"},{"P04",nodes(1,20,53),"//*[descendant-or-self::L]"},{"P05",nodes(59,64,68,73,79),"//*[ancestor::L]"},{"P06",nodes(53,59,64,68,73,79),"//*[ancestor-or-self::L]"},{"P07",nodes(24,39),"//*[following-sibling::L]"},{"P08",nodes(85,99),"//*[preceding-sibling::L]"},{"P09",nodes(6,10,15,24,28,33,39,43,48),"//*[following::L]"},{"P10",nodes(85,89,94,99,103,108,113,117,122),"//*[preceding::L]"},{"P11",nodes(53),"//*[self::L]"},{"P12",nodes(1,6,10,15,20,24,28,33,39,43,48,53,59,64,68,73,79,85,89,94,99,103,108,113,117,122),"//*[@id]"},{"T01",nodes(58,63),"//L/text()"},{"T02",nodes(57),"//L/comment()"},{"T03",nodes(78),"//L/processing-instruction()"},{"T04",nodes(78),"//L/processing-instruction('myPI')"},{"T05",nodes(57,58,59,63,64,78,79),"//L/node()"},{"T06",nodes(64),"//L/N"},{"T07",nodes(59,64,79),"//L/*"}};
}
