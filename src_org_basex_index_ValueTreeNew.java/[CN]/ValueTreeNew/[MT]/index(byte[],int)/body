{
  if (root == -1) {
    root=newNode(token,pre,-1);
    return;
  }
  int node=root;
  while (true) {
    final int c=compareTo(token,node);
    if (c == 0) {
      addPre(node,pre);
      return;
    }
    int child=c < 0 ? getLeft(node) : getRight(node);
    if (child != -1) {
      node=child;
      continue;
    }
    child=newNode(token,pre,node);
    if (c < 0) {
      setLeft(node,child);
      adjust(getLeft(node));
    }
 else {
      setRight(node,child);
      adjust(getRight(node));
    }
    return;
  }
}
