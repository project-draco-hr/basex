{
  final NewInput ni=new NewInput();
  if (input instanceof ANode) {
    if (endsWith(path,'.') || endsWith(path,'/'))     throw RESINV_X.get(info,path);
    ANode node=(ANode)input;
    byte[] name=path;
    if (name.length == 0) {
      name=node.baseURI();
      final Data data=node.data();
      final int i=data == null || data.inMemory() ? lastIndexOf(name,'/') : indexOf(name,'/');
      if (i != -1)       name=substring(name,i + 1);
      if (name.length == 0)       throw RESINV_X.get(info,name);
    }
    if (node.type == NodeType.ATT)     throw UPDOCTYPE_X.get(info,node);
    ni.node=node;
    ni.path=string(name);
    return ni;
  }
  if (!input.type.isStringOrUntyped())   throw STRNOD_X_X.get(info,input.type,input);
  final QueryInput qi=new QueryInput(string(input.string(info)));
  if (!qi.input.exists())   throw WHICHRES_X.get(info,qi.original);
  String name=string(path);
  if (name.endsWith("."))   throw RESINV_X.get(info,path);
  if (!name.endsWith("/") && (qi.input.isDir() || qi.input.isArchive()))   name+="/";
  String target="";
  final int s=name.lastIndexOf('/');
  if (s != -1) {
    target=name.substring(0,s);
    name=name.substring(s + 1);
  }
  if (!name.isEmpty())   qi.input.name(name);
 else   if (!(qi.input instanceof IOContent))   name=qi.input.name();
  if (name.isEmpty())   throw RESINV_X.get(info,path);
  ni.io=qi.input;
  ni.path=target;
  return ni;
}
