{
  final UserFunc uf=rxf.function;
  final BaseFuncCall bfc=new BaseFuncCall(null,uf.name,uf.args);
  bfc.init(uf);
  rxf.bind(http);
  final Value result=bfc.comp(qc).value(qc);
  if (qc.updating())   qc.updates.apply();
  if (rxf.methods.size() == 1 && rxf.methods.contains(HTTPMethod.HEAD)) {
    final QNm response=new QNm(RESPONSE,QueryText.REXQURI);
    final ExtKindTest dt=new ExtKindTest(NodeType.ELM,response,null,qc);
    final SeqType type=SeqType.get(NodeType.NOD,Occ.ONE,dt);
    if (!type.instance(result))     rxf.error(HEAD_METHOD);
  }
  http.initResponse(rxf.output);
  final Serializer ser=Serializer.get(http.out);
  final ValueIter ir=result.iter();
  for (Item it; (it=ir.next()) != null; )   it.serialize(ser);
  ser.close();
  http.status(SC_OK,null);
}
