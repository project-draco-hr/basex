{
  boolean first=true;
  for (int i=0; i < l; i++) {
    final Node<N,E> node=nodes[(m - l + i + 8) & 7];
    for (    final E elem : node) {
      if (first)       first=false;
 else       sb.append(", ");
      sb.append(elem);
    }
  }
  if (!(middle == null)) {
    if (middle instanceof BufferNode) {
      ((BufferNode<?,?>)middle).toString(sb.append(", "));
    }
 else {
      final FingerTree<?,?> tree=(FingerTree<?,?>)middle;
      final Iterator<?> iter=tree.iterator();
      while (iter.hasNext())       sb.append(", ").append(iter.next());
    }
  }
  for (int i=0; i < r; i++) {
    final Node<N,E> node=nodes[(m + i) & 7];
    for (    final E elem : node) {
      if (first)       first=false;
 else       sb.append(", ");
      sb.append(elem);
    }
  }
}
