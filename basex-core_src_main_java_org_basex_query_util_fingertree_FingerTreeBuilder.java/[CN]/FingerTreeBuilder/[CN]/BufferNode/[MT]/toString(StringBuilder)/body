{
  boolean first=true;
  for (int i=0; i < inLeft; i++) {
    final Node<N,E> node=nodes[(midPos - inLeft + i + CAP) % CAP];
    final Iterator<E> iter=new FingerTreeIterator<>(node,0);
    while (iter.hasNext()) {
      if (first)       first=false;
 else       sb.append(", ");
      sb.append(iter.next());
    }
  }
  if (!(middle == null)) {
    if (middle instanceof BufferNode) {
      ((BufferNode<?,?>)middle).toString(sb.append(", "));
    }
 else {
      final FingerTree<?,?> tree=(FingerTree<?,?>)middle;
      final Iterator<?> iter=tree.iterator();
      while (iter.hasNext())       sb.append(", ").append(iter.next());
    }
  }
  for (int i=0; i < inRight; i++) {
    final Node<N,E> node=nodes[(midPos + i) % CAP];
    final Iterator<E> iter=new FingerTreeIterator<>(node,0);
    while (iter.hasNext()) {
      if (first)       first=false;
 else       sb.append(", ");
      sb.append(iter.next());
    }
  }
}
