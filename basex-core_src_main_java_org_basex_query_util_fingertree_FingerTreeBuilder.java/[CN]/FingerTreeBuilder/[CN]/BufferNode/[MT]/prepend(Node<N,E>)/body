{
  if (inLeft < MAX_DIGIT) {
    nodes[(midPos - inLeft - 1 + CAP) % CAP]=node;
    inLeft++;
  }
 else   if (middle == null && inRight < MAX_DIGIT) {
    midPos=(midPos - 1 + CAP) % CAP;
    nodes[(midPos - inLeft + CAP) % CAP]=node;
    inRight++;
  }
 else {
    final int l=(midPos - inLeft + CAP) % CAP;
    final Node<Node<N,E>,E> next=new InnerNode<>(copy(l + 1,inLeft - 1));
    nodes[(midPos - 1 + CAP) % CAP]=nodes[l];
    nodes[(midPos - 2 + CAP) % CAP]=node;
    inLeft=2;
    if (middle == null)     middle=new BufferNode<>(next);
 else     midBuffer().prepend(next);
  }
}
