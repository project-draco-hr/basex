{
  if (query.startsWith("/"))   return query;
  final boolean r=root || ctx.root();
  if (query.isEmpty())   return r ? "/" : ".";
  final String qu=query.replaceAll(" \\+"," ");
  final String[] terms=split(qu);
  String pre="";
  String preds="";
  for (  String term : terms) {
    if (term.startsWith("@=")) {
      preds+="[@* = \"" + term.substring(2) + "\"]";
    }
 else     if (term.startsWith("=")) {
      preds+="[text() = \"" + term.substring(1) + "\"]";
    }
 else     if (term.startsWith("~")) {
      preds+="[text() contains text \"" + term.substring(1) + "\" using fuzzy]";
    }
 else     if (term.startsWith("@")) {
      if (term.length() == 1)       continue;
      preds+="[@* contains text \"" + term.substring(1) + "\"]";
      term=term.substring(1);
      if (XMLToken.isName(token(term))) {
        pre+=(r ? "" : ".") + "//@" + term+ " | ";
      }
    }
 else {
      preds+="[text() contains text \"" + term + "\"]";
      if (XMLToken.isName(token(term))) {
        pre+=(r ? "/" : "") + Axis.DESC + "::*:"+ term+ " | ";
      }
    }
  }
  if (pre.isEmpty() && preds.isEmpty())   return root ? "/" : ".";
  final TokenBuilder tb=new TokenBuilder();
  final String tag="*";
  tb.add(pre + (r ? "/" : "") + Axis.DESCORSELF+ "::"+ tag+ preds);
  return tb.toString();
}
