{
  int[][] dn=dt;
  byte[] ne=getNodeEntry(id);
  if (!Token.digit(ne[1]) || ne[0] > l2)   return dn;
  if (l1 <= ne[0] && ne[0] <= l2) {
    int[] de=getDataEntry(getIdOnDataArray(ne));
    dn=FTUnion.calculateFTOr(dn,getDataFromDataArray(ne,de));
    int[] nn=getNextNodes(ne);
    if (nn == null)     return dt;
    for (int i=0; i < nn.length; i++) {
      dn=FTUnion.calculateFTOr(dn,getAllNodesWithLevel(nn[i],l1 - ne[0],l2 - ne[0],dt));
    }
  }
 else   if (ne[0] < l1) {
    int[] nn=getNextNodes(ne);
    if (nn == null)     return dt;
    for (int i=0; i < nn.length; i++) {
      dn=FTUnion.calculateFTOr(dn,getAllNodesWithLevel(nn[i],l1 - ne[0],l2 - ne[0],dt));
    }
  }
  return dn;
}
