{
  int[][] dn=data;
  byte[] ne=getNodeEntry(id);
  if (ne[0] + c < lb.length) {
    int[] nn=getNextNodes(ne);
    if (nn == null)     return data;
    System.arraycopy(ne,1,v,c,ne[0]);
    for (int i=0; i < nn.length; i++) {
      dn=getAllNodesWithinBounds(nn[i],v,ub,lb,c + ne[0],dn);
    }
  }
 else   if (ne[0] + c > ub.length) {
    return dn;
  }
 else {
    System.arraycopy(ne,1,v,c,ne[0]);
    if (checkLBConstrain(v,c + ne[0],lb) && checkUBConstrain(v,c + ne[0],ub)) {
      int[] de=getDataEntry(getIdOnDataArray(ne));
      dn=FTUnion.calculateFTOr(dn,getDataFromDataArray(ne,de));
    }
    if (c + ne[0] + 1 <= ub.length) {
      int[] nn=getNextNodes(ne);
      if (nn == null)       return data;
      for (int i=0; i < nn.length; i++) {
        dn=getAllNodesWithinBounds(nn[i],v,ub,lb,c + ne[0],dn);
      }
    }
  }
  return dn;
}
