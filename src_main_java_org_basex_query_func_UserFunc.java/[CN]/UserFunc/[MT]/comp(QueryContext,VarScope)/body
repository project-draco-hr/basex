{
  if (compiled)   return;
  compiled=true;
  for (  Entry<Var,Expr> e : scope.closure().entrySet())   e.setValue(e.getValue().compile(ctx,outer));
  final Value[] sf=scope.enter(ctx);
  try {
    for (    final Entry<Var,Expr> e : staticBindings())     ctx.set(e.getKey(),e.getValue().value(ctx),info);
    expr=expr.compile(ctx,scope);
    scope.cleanUp(this);
  }
  finally {
    scope.exit(ctx,sf);
  }
  if (tco())   expr=expr.markTailCalls();
  if (ret == null)   return;
  type=ret;
  if ((ret.type == AtomType.BLN || ret.type == AtomType.FLT || ret.type == AtomType.DBL || ret.type == AtomType.QNM || ret.type == AtomType.URI) && ret.eq(expr.type())) {
    ctx.compInfo(OPTCAST,ret);
    cast=false;
  }
}
