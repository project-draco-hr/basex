{
  expr=checkUp(expr,ctx).comp(ctx);
  final Return ret=expr.returned(ctx);
  if (pos == null && score == null && ret.single && !expr.uses(Use.VAR,ctx)) {
    ctx.compInfo(OPTBIND,var);
    var.bind(expr,ctx);
  }
 else {
    if (ret == Return.NUMSEQ)     var.ret=Return.NUM;
 else     if (ret == Return.NONUMSEQ)     var.ret=Return.NONUM;
 else     if (ret == Return.NODSEQ)     var.ret=Return.NOD;
  }
  ctx.vars.add(var);
  if (pos != null) {
    ctx.vars.add(pos);
    pos.ret=Return.NUM;
  }
  if (score != null) {
    ctx.vars.add(score);
    score.ret=Return.NUM;
  }
  return expr.e() ? Seq.EMPTY : this;
}
