{
  super(main,CREATEFSTITLE);
  db=List.list(main.context);
  final BaseXBack p1=new BaseXBack();
  p1.setLayout(new BorderLayout());
  p1.setBorder(8,8,8,8);
  BaseXBack p=new BaseXBack();
  p.setLayout(new TableLayout(7,2,6,0));
  final Prop prop=gui.context.prop;
  final GUIProp gprop=gui.prop;
  BaseXLabel l=new BaseXLabel(IMPORTFSTEXT,false,true);
  l.setBorder(0,0,4,0);
  p.add(l);
  p.add(new BaseXLabel());
  path=new BaseXTextField(gprop.get(GUIProp.FSBACKING),this);
  path.addKeyListener(keys);
  p.add(path);
  browse=new BaseXButton(BUTTONBROWSE,this);
  browse.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    final ActionEvent e){
      final IO file=new BaseXFileChooser(DIALOGFC,path.getText(),main).select(BaseXFileChooser.Mode.DOPEN);
      if (file != null) {
        path.setText(file.path());
        dbname.setText(file.dbname().replaceAll("[^\\w.-]",""));
      }
    }
  }
);
  p.add(browse);
  l=new BaseXLabel(CREATENAME,false,true);
  l.setBorder(8,0,4,0);
  p.add(l);
  all=new BaseXCheckBox(IMPORTALL,gprop.is(GUIProp.FSALL),this);
  all.setToolTipText(IMPORTALLINFO);
  all.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    final ActionEvent e){
      action(null);
    }
  }
);
  p.add(all);
  dbname=new BaseXTextField(gprop.get(GUIProp.FSDBNAME),this);
  dbname.addKeyListener(keys);
  p.add(dbname);
  p1.add(p,BorderLayout.CENTER);
  info=new BaseXLabel(" ");
  p1.add(info,BorderLayout.SOUTH);
  final BaseXBack p2=new BaseXBack();
  p2.setLayout(new TableLayout(4,1));
  p2.setBorder(8,8,8,8);
  BaseXLabel label=new BaseXLabel(IMPORTFSTEXT1,false,true);
  p2.add(label);
  meta=new BaseXCheckBox(IMPORTMETA,prop.is(Prop.FSMETA),12,this);
  p2.add(meta);
  label=new BaseXLabel(IMPORTFSTEXT2,false,true);
  p2.add(label);
  p=new BaseXBack();
  p.setLayout(new BorderLayout());
  cont=new BaseXCheckBox(IMPORTCONT,prop.is(Prop.FSCONT),this);
  cont.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    final ActionEvent e){
      action(null);
    }
  }
);
  p.add(cont,BorderLayout.WEST);
  xml=new BaseXCheckBox(IMPORTXML,prop.is(Prop.FSXML),this);
  xml.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    final ActionEvent e){
      action(null);
    }
  }
);
  p.add(xml,BorderLayout.SOUTH);
  maxsize=new BaseXCombo(IMPORTFSMAX,this);
  final int m=prop.num(Prop.FSTEXTMAX);
  int i=-1;
  while (++i < IMPORTFSMAXSIZE.length - 1) {
    if (IMPORTFSMAXSIZE[i] == m)     break;
  }
  maxsize.setSelectedIndex(i);
  p.add(maxsize,BorderLayout.EAST);
  BaseXLayout.setWidth(p,p2.getPreferredSize().width);
  p2.add(p);
  final BaseXBack p3=new BaseXBack();
  p3.setLayout(new TableLayout(6,1,0,0));
  p3.setBorder(8,8,8,8);
  txtindex=new BaseXCheckBox(INFOTEXTINDEX,prop.is(Prop.TEXTINDEX),0,this);
  p3.add(txtindex);
  p3.add(new BaseXLabel(TXTINDEXINFO,true,false));
  atvindex=new BaseXCheckBox(INFOATTRINDEX,prop.is(Prop.ATTRINDEX),0,this);
  p3.add(atvindex);
  p3.add(new BaseXLabel(ATTINDEXINFO,true,false));
  pathindex=new BaseXCheckBox(INFOPATHINDEX,prop.is(Prop.PATHINDEX),0,this);
  p3.add(pathindex);
  p3.add(new BaseXLabel(PATHINDEXINFO,true,false));
  final BaseXBack p4=new BaseXBack();
  p4.setLayout(new TableLayout(2,1,0,0));
  p4.setBorder(8,8,8,8);
  ftxindex=new BaseXCheckBox(INFOFTINDEX,prop.is(Prop.FTINDEX),0,this);
  p4.add(ftxindex);
  ft=new DialogFT(this,true);
  p4.add(ft);
  final BaseXTabs tabs=new BaseXTabs(this);
  tabs.addTab(GENERALINFO,p1);
  tabs.addTab(METAINFO,p2);
  tabs.addTab(INDEXINFO,p3);
  tabs.addTab(FTINFO,p4);
  set(tabs,BorderLayout.CENTER);
  buttons=okCancel(this);
  set(buttons,BorderLayout.SOUTH);
  action(null);
  finish(null);
}
