{
  final Data data=ctx.local.data;
  if (ne > 0) {
    ids=data.fuzzyIDs(token,ne);
    if (ids == null)     return new NodeSet(ctx);
    return new NodeSet(Array.extractIDsFromData(ids),ctx,ids);
  }
  final FTTokenizer ftt=new FTTokenizer();
  ftt.init(token);
  ftt.sens=option.ftCasesen;
  ftt.wc=option.ftWild;
  ftt.lc=option.ftlc | !ftt.sens;
  ftt.uc=option.ftuc;
  int[][] d=null;
  while (ftt.more()) {
    final byte[] b=ftt.next();
    int[][] dd=null;
    final int pos=Token.indexOf(b,'.');
    if (ftt.wc && pos > -1) {
      dd=data.wildcardIDs(b,pos);
    }
 else {
      dd=data.ftIDs(b,ftt.sens);
    }
    d=d == null ? dd : phrase(d,dd);
    if (d == null || d.length == 0)     break;
  }
  return new NodeSet(Array.extractIDsFromData(d),ctx);
}
