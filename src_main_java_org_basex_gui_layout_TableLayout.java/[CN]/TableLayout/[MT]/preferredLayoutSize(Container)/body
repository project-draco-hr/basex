{
synchronized (parent.getTreeLock()) {
    final Insets in=parent.getInsets();
    final int nr=parent.getComponentCount();
    int maxW=0;
    int maxH=0;
    for (int i=0; i < cols; ++i) {
      posX[i]=maxW;
      final int w=maxW;
      int h=0;
      for (int j=0; j < rows; ++j) {
        final int n=j * cols + i;
        if (n >= nr)         break;
        final Component c=parent.getComponent(n);
        final Dimension d=c.getPreferredSize();
        if (maxW < w + d.width)         maxW=w + d.width;
        if (posY[j] < h)         posY[j]=h;
 else         h=posY[j];
        h+=d.height;
      }
      if (maxH < h)       maxH=h;
    }
    width=in.left + maxW + (cols - 1) * insetX + in.right;
    height=in.top + maxH + (rows - 1) * insetY + in.bottom;
    return new Dimension(width,height);
  }
}
