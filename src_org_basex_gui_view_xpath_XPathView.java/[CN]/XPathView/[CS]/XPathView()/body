{
  super(null);
  back=new BaseXBack(FILL.NONE);
  back.setLayout(new BorderLayout());
  header=new BaseXLabel(GUIConstants.XPATHVIEW,10);
  back.add(header,BorderLayout.NORTH);
  input=new BaseXTextField(null);
  input.addKeyListener(new KeyAdapter(){
    @Override public void keyReleased(    final KeyEvent e){
      int c=e.getKeyCode();
      if (checkPop.isSelected()) {
        if (c == KeyEvent.VK_SLASH) {
          slashC++;
          showPopAll();
        }
 else         if (c == KeyEvent.VK_DELETE || c == KeyEvent.VK_BACK_SPACE) {
          if (input.getText().length() == 0) {
            slashC=0;
            tmpIn="";
            pop.hide();
          }
        }
 else         if (c == KeyEvent.VK_UP || c == KeyEvent.VK_DOWN || c == KeyEvent.VK_RIGHT || c == KeyEvent.VK_LEFT)         return;
 else {
          if (popInit) {
            if (tmpIn.length() == 0) {
              pop.hide();
            }
 else {
              slashC=0;
              showSpecPop();
            }
          }
        }
      }
      if (c == KeyEvent.VK_ESCAPE || c == KeyEvent.VK_ENTER)       return;
      final String query=input.getText();
      GUI.get().execute(Commands.XPATH,query);
    }
  }
);
  setBorder(10,10,10,10);
  setLayout(new BorderLayout(0,4));
  checkPop.setContentAreaFilled(false);
  back.add(checkPop,BorderLayout.CENTER);
  back.add(input,BorderLayout.SOUTH);
  add(back,BorderLayout.NORTH);
  refreshLayout();
}
