{
  final Context ctx=gui.context;
  if (cmp == rename) {
    final String old=choice.getValue();
    final DialogRename dr=new DialogRename(old,gui,fsInstance);
    if (dr.ok()) {
      final Prop prop=gui.context.prop;
      AlterDB.alter(old,dr.name.getText(),prop);
      choice.setData(fsInstance ? List.listFS(ctx).toArray() : List.list(ctx).toArray());
    }
  }
 else   if (cmp == open) {
    close();
  }
 else   if (cmp == drop) {
    final String db=choice.getValue();
    if (db.isEmpty())     return;
    if (Dialog.confirm(this,Util.info(DROPCONF,db))) {
      if (ctx.data != null && ctx.data.meta.name.equals(db)) {
        new Close().run(gui.context);
        gui.notify.init();
      }
      DropDB.drop(db,ctx.prop);
      choice.setData(List.list(ctx).toArray());
      choice.requestFocusInWindow();
      action(null);
      if (choice.getValue().isEmpty()) {
        doc.setText("");
        detail.setText(Token.EMPTY);
      }
    }
  }
 else {
    final String db=choice.getValue().trim();
    ok=!db.isEmpty() && ctx.prop.dbexists(db);
    enableOK(buttons,BUTTONDROP + DOTS,ok);
    if (ok) {
      doc.setText(db);
      DataInput in=null;
      final MetaData meta=new MetaData(db,ctx.prop);
      try {
        in=new DataInput(meta.file(DATAINFO));
        meta.read(in);
        detail.setText(InfoDB.db(meta,true,true,true));
      }
 catch (      final IOException ex) {
        detail.setText(Token.token(ex.getMessage()));
        ok=false;
      }
 finally {
        if (in != null)         try {
          in.close();
        }
 catch (        final IOException ex) {
        }
      }
    }
    enableOK(buttons,BUTTONOPEN,ok);
    enableOK(buttons,BUTTONRENAME,ok);
  }
}
