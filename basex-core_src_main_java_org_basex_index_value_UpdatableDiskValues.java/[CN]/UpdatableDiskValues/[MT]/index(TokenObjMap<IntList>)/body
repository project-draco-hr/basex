{
  final int s=size.get();
  final int last=s - 1;
  final TokenList allkeys=new TokenList(m).sort(true);
  final TokenList nkeys=new TokenList(m.size());
  int p=0;
  for (  final byte[] key : allkeys) {
    p=get(key,p,s);
    if (p < 0) {
      p=-(p + 1);
      nkeys.add(key);
    }
 else {
      appendIds(p++,key,diffs(m.get(key)));
    }
  }
  for (int j=nkeys.size() - 1, i=last, pos=s + j; j >= 0; --j) {
    final byte[] key=nkeys.get(j);
    final int in=-(1 + get(key,0,i + 1));
    if (in < 0)     Util.notexpected("Key should not exist: '" + string(key) + '\'');
    while (i >= in) {
      idxr.write5(pos * 5L,idxr.read5(i * 5L));
      ctext.put(pos--,ctext.get(i--));
    }
    idxr.write5(pos * 5L,idxl.appendNums(diffs(m.get(key))));
    ctext.put(pos--,key);
  }
  size.set(s + nkeys.size());
}
