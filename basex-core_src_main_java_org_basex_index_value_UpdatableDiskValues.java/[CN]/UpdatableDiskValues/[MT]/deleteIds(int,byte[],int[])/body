{
  final long pos=idxr.read5(ix * 5L);
  final int numold=idxl.readNum(pos);
  if (numold == ids.length) {
    cache.delete(key);
    return 0;
  }
  final int[] nids=new int[numold - ids.length];
  for (int i=0, j=0, cid=0, pid=0; i < nids.length; ) {
    cid+=idxl.readNum();
    if (j < ids.length && ids[j] == cid)     ++j;
 else {
      nids[i++]=cid - pid;
      pid=cid;
    }
  }
  idxl.writeNums(pos,nids);
  cache.add(key,nids.length,pos + Num.length(nids.length));
  return nids.length;
}
