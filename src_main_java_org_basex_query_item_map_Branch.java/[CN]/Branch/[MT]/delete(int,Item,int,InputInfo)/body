{
  final int key=key(h,l);
  final TrieNode sub=kids[key];
  if (sub == null)   return this;
  final TrieNode nsub=sub.delete(h,k,l + 1,ii);
  if (nsub == sub)   return this;
  final int nu;
  if (nsub == null) {
    nu=used ^ 1 << key;
    if (Integer.bitCount(nu) == 1) {
      final TrieNode single=kids[Integer.numberOfTrailingZeros(nu)];
      if (!(single instanceof Branch))       return single;
    }
  }
 else   nu=used;
  final TrieNode[] ks=kids.clone();
  ks[key]=nsub;
  return new Branch(ks,nu,size - 1);
}
