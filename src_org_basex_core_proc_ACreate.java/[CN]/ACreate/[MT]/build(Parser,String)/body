{
  String err=null;
  Builder builder=null;
  try {
    exec(new Close());
    final boolean mem=db == null || prop.is(Prop.MAINMEM);
    if (!mem && context.pinned(db))     return error(DBINUSE);
    builder=mem ? new MemBuilder(p) : new DiskBuilder(p);
    progress(builder);
    final Data data=builder.build(db == null ? "" : db);
    builder=null;
    if (!(data instanceof MemData))     index(data);
    context.openDB(data);
    context.addToPool(data);
    return info(DBCREATED,db,perf.getTimer());
  }
 catch (  final FileNotFoundException ex) {
    BaseX.debug(ex);
    err=BaseX.info(FILEWHICH,p.io);
  }
catch (  final ProgressException ex) {
    err=Prop.server ? SERVERTIME : CANCELCREATE;
  }
catch (  final IOException ex) {
    BaseX.debug(ex);
    final String msg=ex.getMessage();
    err=BaseX.info(msg != null ? msg : args[0]);
  }
catch (  final Exception ex) {
    BaseX.errln(ex);
    err=BaseX.info(CREATEERR,args[0]);
  }
  try {
    if (builder != null)     builder.close();
  }
 catch (  final IOException ex) {
    BaseX.debug(ex);
  }
  DropDB.drop(db,prop);
  return error(err);
}
