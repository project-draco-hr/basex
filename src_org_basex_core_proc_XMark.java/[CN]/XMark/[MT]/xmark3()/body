{
  final Nodes b=qu("/site/open_auctions/open_auction" + "[bidder[1]/increase/text() * 2 <= bidder[last()]/increase/text()]");
  final XPathProcessor stepInc1=parse("bidder[1]/increase/text()");
  final XPathProcessor stepInc2=parse("bidder[last()]/increase/text()");
  int hits=0;
  final int bs=b.size;
  for (int bi=0; bi < bs; bi++) {
    writeSep(hits++);
    out.out.print("<increase first=\"");
    out.out.printToken(token(b,bi,stepInc1),data.meta.entity);
    out.out.print("\" last=\"");
    out.out.printToken(token(b,bi,stepInc2),data.meta.entity);
    out.out.print("\"/>");
  }
  return hits;
}
