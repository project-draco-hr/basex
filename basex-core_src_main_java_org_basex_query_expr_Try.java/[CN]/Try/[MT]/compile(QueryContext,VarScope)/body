{
  try {
    super.compile(qc,scp);
    if (expr.isValue())     return optPre(expr,qc);
  }
 catch (  final QueryException ex) {
    if (!ex.isCatchable())     throw ex;
    for (    final Catch c : catches) {
      if (c.matches(ex)) {
        return optPre(c.compile(qc,scp).asExpr(ex,qc,scp),qc);
      }
    }
    throw ex;
  }
  for (  final Catch c : catches)   c.compile(qc,scp);
  type=expr.type();
  for (  final Catch c : catches)   if (!c.expr.isFunction(Function.ERROR))   type=type.union(c.type());
  return this;
}
