{
  final boolean path=pattern.indexOf('\\') != -1 || pattern.indexOf('/') != -1;
  final TreeSet<String> match=new TreeSet<String>();
  for (  final String input : cache) {
    if (input.startsWith(pattern,offset(input,path))) {
      match.add(input);
      if (match.size() >= 100)       return match;
    }
    if (threadID != thread)     return null;
  }
  for (  final String input : cache) {
    if (input.substring(offset(input,path)).contains(pattern) && !match.contains(input)) {
      match.add(input);
      if (match.size() >= 100)       return match;
    }
    if (threadID != thread)     return null;
  }
  for (  final String input : cache) {
    if (matches(input,pattern,offset(input,path)) && !match.contains(input)) {
      match.add(input);
      if (match.size() >= 100)       return match;
    }
    if (threadID != thread)     return null;
  }
  return match;
}
