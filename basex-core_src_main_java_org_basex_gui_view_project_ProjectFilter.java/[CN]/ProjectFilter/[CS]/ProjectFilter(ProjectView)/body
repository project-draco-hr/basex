{
  this.project=project;
  layout(new BorderLayout(0,2));
  filesFilter=new BaseXTextField(project.gui);
  filesFilter.addFocusListener(project.lastfocus);
  contentsFilter=new BaseXTextField(project.gui);
  contentsFilter.hint(Text.FIND_CONTENTS + Text.DOTS);
  contentsFilter.addFocusListener(project.lastfocus);
  add(filesFilter,BorderLayout.NORTH);
  add(contentsFilter,BorderLayout.CENTER);
  final KeyAdapter refreshKeys=new KeyAdapter(){
    @Override public void keyPressed(    final KeyEvent e){
      if (BaseXKeys.NEXTLINE.is(e) || BaseXKeys.PREVLINE.is(e) || BaseXKeys.NEXTPAGE.is(e)|| BaseXKeys.PREVPAGE.is(e)) {
        project.list.dispatchEvent(e);
      }
 else {
        for (        final GUIPopupCmd cmd : project.list.commands) {
          if (cmd == null)           continue;
          for (          final BaseXKeys sc : cmd.shortcuts()) {
            if (sc.is(e)) {
              cmd.execute(project.gui);
              e.consume();
              return;
            }
          }
        }
      }
    }
    @Override public void keyReleased(    final KeyEvent e){
      refresh(false);
    }
  }
;
  filesFilter.addKeyListener(refreshKeys);
  contentsFilter.addKeyListener(refreshKeys);
  refreshLayout();
}
