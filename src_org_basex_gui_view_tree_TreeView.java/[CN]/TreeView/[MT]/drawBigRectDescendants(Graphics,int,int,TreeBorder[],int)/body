{
  int lvv=lv;
  int cen=parc;
  int i;
  for (i=1; i < subt.length && cache.isBigRectangle(rn,lvv); i++) {
    final TreeBorder bos=cache.getTreeBorder(rn,lvv);
    final TreeBorder bo=subt[i];
    final TreeRect r=cache.getTreeRectPerIndex(rn,lvv,0);
    final int start=bo.start - bos.start;
    final double sti=start / (double)bos.size;
    final double eni=(start + bo.size) / (double)bos.size;
    final int df=(int)((r.w) * sti);
    final int dt=(int)((r.w) * eni);
    final int ww=Math.max(dt - df,2);
    drawDescConn(g,lvv,new TreeRect(df,ww),cen);
    cen=(2 * df + ww) / 2;
    g.setColor(COLORS[7]);
    g.fillRect(df,getYperLevel(lvv),ww,nodeHeight);
    lvv++;
  }
}
