{
  double xx=x;
  double ww=w;
  final ArrayList<TreeRect> rects=new ArrayList<TreeRect>();
  for (int i=0; i < size; i++) {
    final double boxMiddle=xx + ww / 2f;
    final int pre=nodeList[i];
    if (pre == -1) {
      if (!consistentNodeSpace)       xx+=ww;
      continue;
    }
    if (slimNodeToTextLength) {
      String s=getText(pre);
      int o=calcOptimalRectWidth(g,s) + 10;
      if (o < minSpace)       o=minSpace;
      if (w > o) {
        xx=boxMiddle - o / 2;
        ww=o;
      }
    }
    final TreeRect rect=new TreeRect();
    rect.x=(int)xx;
    rect.w=(int)ww;
    rect.pre=pre;
    rects.add(rect);
    drawRectangle(g,l,(int)xx,(int)ww,y,h,null,null,drawRectangleBorder,fillRectangle);
    drawTextIntoRectangle(g,pre,(int)boxMiddle,(int)ww,y);
    xx+=w;
  }
  rects.trimToSize();
  rectsPerLevel.add(rects);
}
