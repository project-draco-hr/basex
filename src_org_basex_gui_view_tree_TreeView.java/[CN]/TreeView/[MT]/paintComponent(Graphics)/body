{
  super.paintComponent(g);
  BaseXLayout.antiAlias(g,gui.prop);
  g.setColor(Color.BLACK);
  g.setFont(GUIConstants.font);
  final Performance perf=new Performance();
  perf.initTimer();
  fontHeight=g.getFontMetrics().getHeight();
  if (nodeHeight == -1)   nodeHeight=fontHeight;
  setLevelDistance();
  if (windowSizeChanged()) {
    treeImage=createImage();
    final Graphics tIg=treeImage.getGraphics();
    if (rectsPerLevel == null) {
      rectsPerLevel=new ArrayList<ArrayList<TreeRect>>();
    }
 else {
      rectsPerLevel.clear();
    }
    final Nodes curr=gui.context.current();
    for (int i=0; i < curr.size(); i++) {
      treeView(curr.nodes[i],tIg);
    }
  }
  g.drawImage(treeImage,0,0,getWidth(),getHeight(),this);
  if (focus()) {
    highlightNode(g,markColor,focusedRect,focusedRectLevel,showParentNode,showChildNodes);
  }
}
