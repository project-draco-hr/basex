{
  if (w < MIN_SPACE)   return;
  final Data data=gui.context.data;
  final int nodeKind=data.kind(pre);
  String s="";
  if (data.meta.deepfs) {
    if (data.fs.isFile(pre))     s=Token.string(data.fs.name(pre));
 else     s="hi";
  }
 else {
switch (nodeKind) {
case Data.ELEM:
      s=Token.string(data.name(pre,true));
    g.setColor(Color.BLACK);
  break;
case Data.COMM:
s=Token.string(data.text(pre,true));
g.setColor(Color.GREEN);
break;
case Data.PI:
s=Token.string(data.text(pre,true));
g.setColor(Color.PINK);
break;
case Data.DOC:
s=Token.string(data.text(pre,true));
g.setColor(Color.BLACK);
break;
default :
s=Token.string(data.text(pre,true));
g.setColor(new Color(0x000F87));
}
}
int textWidth=5;
while ((textWidth=BaseXLayout.width(g,s)) + 4 > w) {
s=s.substring(0,s.length() / 2).concat("*");
}
g.drawString(s,boxMiddle - textWidth / 2,y + nodeHeight - 2);
}
