{
  if (refreshedFocus) {
    final int pre=gui.focused;
    for (int i=0; i < rectsPerLevel.size(); i++) {
      final ArrayList<TreeRect> rectsL=rectsPerLevel.get(i);
      if (rectsL.get(0).multiPres != null) {
        final TreeRect multiPres=rectsL.get(0);
        final int index=searchPreArrayPosition(multiPres.multiPres,pre);
        if (index > -1) {
          multiPres.pre=pre;
          focusedRect=multiPres;
          focusedRectLevel=i;
          refreshedFocus=false;
          return true;
        }
      }
 else {
        final TreeRect rect=searchRect(rectsL,pre);
        if (rect != null) {
          focusedRect=rect;
          focusedRectLevel=i;
          refreshedFocus=false;
          return true;
        }
      }
    }
  }
 else {
    int level=getLevelPerY(mousePosY);
    if (level == -1 || level >= rectsPerLevel.size())     return false;
    final Iterator<TreeRect> it=rectsPerLevel.get(level).iterator();
    while (it.hasNext()) {
      final TreeRect r=it.next();
      if (r.contains(mousePosX)) {
        focusedRect=r;
        focusedRectLevel=level;
        int pre=r.pre;
        if (r.multiPres != null) {
          double ratio=mousePosX / (double)r.w;
          int index=(int)((r.multiPres.length - 1) * ratio);
          pre=r.multiPres[index];
          r.pre=pre;
        }
        gui.notify.focus(pre,this);
        refreshedFocus=false;
        return true;
      }
    }
  }
  refreshedFocus=false;
  return false;
}
