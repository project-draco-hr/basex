{
  if (refreshedFocus) {
    final int pre=gui.context.focused;
    for (int i=0; i < cache.maxLevel; i++) {
      if (cache.isBigRectangle(i)) {
        final int index=cache.searchPreArrayPosition(i,pre);
        if (index > -1) {
          focusedRect=cache.getTreeRectsPerLevel(i)[0];
          focusedRectLevel=i;
          refreshedFocus=false;
          return true;
        }
      }
 else {
        final TreeRect rect=cache.searchRect(i,pre);
        if (rect != null) {
          focusedRect=rect;
          focusedRectLevel=i;
          refreshedFocus=false;
          return true;
        }
      }
    }
  }
 else {
    final int level=getLevelPerY(mousePosY);
    if (level == -1 || level >= cache.maxLevel)     return false;
    final TreeRect[] rL=cache.getTreeRectsPerLevel(level);
    for (    final TreeRect r : rL) {
      if (r.contains(mousePosX)) {
        focusedRect=r;
        focusedRectLevel=level;
        int pre=r.pre;
        if (cache.isBigRectangle(level)) {
          final double ratio=mousePosX / (double)r.w;
          final int index=(int)((cache.getSizePerLevel(level) - 1) * ratio);
          pre=cache.getPrePerLevelAndIndex(level,index);
          r.pre=pre;
        }
        gui.notify.focus(pre,this);
        refreshedFocus=false;
        return true;
      }
    }
  }
  refreshedFocus=false;
  return false;
}
