{
  final byte[] nm=lax ? trim(name) : name;
  final int nl=nm.length;
  if (nl == 0)   return UNDERSCORE;
  for (int n=0; n < nl; n+=cl(nm,n)) {
    int cp=cp(nm,n);
    if (cp == '_' || (n == 0 ? !isNCStartChar(cp) : !isNCChar(cp))) {
      final TokenBuilder tb=new TokenBuilder(nl << 1).add(nm,0,n);
      for (int m=n; m < nl; m+=cl(nm,m)) {
        cp=cp(nm,m);
        if (lax) {
          final boolean nc=isNCChar(cp);
          if (m == 0 && nc && !isNCStartChar(cp))           tb.add('_');
          tb.add(nc ? cp : '_');
        }
 else         if (cp == '_') {
          tb.add('_').add('_');
        }
 else         if (m == 0 ? isNCStartChar(cp) : isNCChar(cp)) {
          tb.add(cp);
        }
 else         if (cp < 0x10000) {
          addEsc(tb,cp);
        }
 else {
          final int r=cp - 0x10000;
          addEsc(tb,(r >>> 10) + 0xD800);
          addEsc(tb,(r & 0x3FF) + 0xDC00);
        }
      }
      return tb.finish();
    }
  }
  return nm;
}
