{
  if (entries.length == 0)   return;
  final int newSubtreeSize=entries.length >>> IO.NODEPOWER;
  final int rightSiblingPre=pre + newSubtreeSize;
  int entriesOffset=0;
  final int diff=oldSubtreeSize - newSubtreeSize;
  for (int i=pre; i < rightSiblingPre - Math.abs(diff); i++) {
    int offset=-1;
    do {
      write1(i,++offset,entries[entriesOffset]);
      entriesOffset++;
    }
 while (entriesOffset % 16 != 0);
  }
  if (diff <= -1) {
    byte[] remainingEntries=new byte[entries.length - entriesOffset];
    System.arraycopy(entries,entriesOffset,remainingEntries,0,remainingEntries.length);
    insert(rightSiblingPre + diff,remainingEntries);
    return;
  }
  if (diff >= 1) {
    delete(rightSiblingPre - diff,diff);
  }
}
