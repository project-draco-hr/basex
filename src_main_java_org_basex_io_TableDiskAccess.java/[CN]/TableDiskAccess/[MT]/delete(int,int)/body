{
  dirty=true;
  cursor(first);
  int from=first - fpre;
  final int last=first + nr;
  if (last - 1 < npre) {
    copy(bf.data,from + nr,bf.data,from,npre - last);
    updatePre(nr);
    if (npre == fpre) {
      pagemap.clear(pages[index]);
      Array.move(fpres,index + 1,-1,blocks - index - 1);
      Array.move(pages,index + 1,-1,blocks - index - 1);
      readBlock(index,fpre,index + 2 > --blocks ? meta.size : fpres[index + 1]);
    }
    return;
  }
  int unused=0;
  while (npre < last) {
    if (from == 0) {
      ++unused;
      pagemap.clear(pages[index]);
    }
    nextBlock();
    from=0;
  }
  copy(bf.data,last - fpre,bf.data,0,npre - last);
  if (npre == last) {
    pagemap.clear((int)bf.pos);
    ++unused;
    ++index;
  }
  if (unused > 0) {
    Array.move(fpres,index,-unused,blocks - index);
    Array.move(pages,index,-unused,blocks - index);
    blocks-=unused;
    index-=unused;
  }
  fpres[index]=first;
  fpre=first;
  updatePre(nr);
}
