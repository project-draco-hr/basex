{
  boolean found=false;
  for (  final byte[] nextPkg : repo.pkgDict()) {
    if (nextPkg != null) {
      final byte[] dir=repo.pkgDict().get(nextPkg);
      if (eq(Package.name(nextPkg),token(pkg)) || eq(dir,token(pkg))) {
        found=true;
        final byte[] primPkg=primary(nextPkg,ii);
        if (primPkg == null) {
          final IOFile f=repo.path(string(dir));
          final IOFile desc=new IOFile(f,DESCRIPTOR);
          repo.remove(new PkgParser(repo,ii).parse(desc));
          if (!f.delete())           CANNOTDELPKG.thrw(ii);
        }
 else         PKGDEP.thrw(ii,string(primPkg),pkg);
      }
    }
  }
  if (!found)   PKGNOTINST.thrw(ii,pkg);
}
