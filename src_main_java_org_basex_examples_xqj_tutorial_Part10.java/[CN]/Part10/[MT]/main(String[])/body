{
  init("10: XML Pipelines");
  XQConnection xqc=connect();
  XQExpression xqe=xqc.createExpression();
  XQSequence xqs=xqe.executeQuery("doc('src/main/resources/xml/orders.xml')//order");
  XQExpression xqe2=xqc.createExpression();
  xqe2.bindSequence(new QName("orders"),xqs);
  XQSequence xqs2=xqe2.executeQuery("declare variable $orders as element(*, xs:untyped) external; " + "for $order in $orders where $order/@status = 'closed' " + "return <closed_order id = '{$order/@id}'>{ "+ " $order/* }</closed_order>");
  print("Pipeline XQuery expressions",xqs2);
  xqe2.close();
  xqe.close();
  info("Passing XSLT results to XQuery");
  SAXTransformerFactory stf=(SAXTransformerFactory)TransformerFactory.newInstance();
  XMLFilter xmlf=stf.newXMLFilter(new StreamSource("src/main/resources/xml/orders.xsl"));
  SAXSource saxSource=new SAXSource(xmlf,new InputSource("src/main/resources/xml/orders.xml"));
  XQPreparedExpression xqp=xqc.prepareExpression("declare variable $var external; <result>{ $var }</result>");
  xqp.bindDocument(new QName("var"),saxSource,null);
  xqs=xqp.executeQuery();
  xqs.writeSequenceToResult(new StreamResult(System.out));
  System.out.println();
  close(xqc);
}
