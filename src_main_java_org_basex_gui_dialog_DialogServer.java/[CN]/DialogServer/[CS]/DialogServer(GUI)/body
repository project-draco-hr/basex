{
  super(main,S_SERVER_ADMIN);
  databases.border(8);
  final BaseXBack conn=new BaseXBack(new BorderLayout(0,32)).border(8);
  start=new BaseXButton(START,this);
  stop=new BaseXButton(STOP,this);
  connect=new BaseXButton(CONNECT,this);
  disconnect=new BaseXButton(DISCONNECT,this);
  final GUIProp gprop=gui.gprop;
  host=new BaseXTextField(gprop.get(GUIProp.S_HOST),this);
  ports=new BaseXTextField(Integer.toString(gprop.num(GUIProp.S_SERVERPORT)),this);
  portc=new BaseXTextField(Integer.toString(gprop.num(GUIProp.S_PORT)),this);
  admuser=new BaseXTextField(gprop.get(GUIProp.S_USER),this);
  admpass=new BaseXPassword(this);
  infoC=new BaseXLabel(" ").border(12,0,0,0);
  BaseXBack p=new BaseXBack(new TableLayout(6,1,0,0));
  p.add(new BaseXLabel(S_LOCALSERVER + COLS,true,true));
  BaseXBack pp=new BaseXBack(new TableLayout(2,2,8,4)).border(0,0,0,0);
  pp.add(new BaseXLabel(S_PORT + COLS));
  pp.add(ports);
  pp.add(new BaseXLabel());
  BaseXBack ppp=new BaseXBack(new TableLayout(1,2,5,0));
  ppp.add(start);
  ppp.add(stop);
  pp.add(ppp);
  p.add(pp);
  p.add(new BaseXLabel());
  p.add(new BaseXLabel(S_ADLOGIN + COLS,true,true).border(12,0,6,0));
  pp=new BaseXBack(new TableLayout(5,2,8,4));
  pp.add(new BaseXLabel(USERNAME + COLS));
  pp.add(admuser);
  pp.add(new BaseXLabel(PASSWORD + COLS));
  pp.add(admpass);
  pp.add(new BaseXLabel(S_HOST + COLS));
  pp.add(host);
  pp.add(new BaseXLabel(S_PORT + COLS));
  pp.add(portc);
  pp.add(new BaseXLabel());
  ppp=new BaseXBack(new TableLayout(1,2,5,0));
  ppp.add(connect);
  ppp.add(disconnect);
  pp.add(ppp);
  p.add(pp);
  p.add(infoC);
  conn.add(p,BorderLayout.CENTER);
  p=new BaseXBack(new TableLayout(2,1));
  BaseXLabel l=new BaseXLabel(S_INFO1);
  l.setForeground(GUIConstants.DGRAY);
  p.add(l);
  l=new BaseXLabel(S_INFO2);
  l.setForeground(GUIConstants.DGRAY);
  p.add(l);
  conn.add(p,BorderLayout.SOUTH);
  sess.border(8).layout(new BorderLayout());
  sese=new Editor(false,this);
  sese.setFont(start.getFont());
  refreshSess=new BaseXButton(REFRESH,this);
  pp=new BaseXBack(new BorderLayout());
  pp.add(new BaseXLabel(S_SESSIONS + COLS,false,true),BorderLayout.NORTH);
  pp.add(new SearchEditor(main,sese),BorderLayout.CENTER);
  p.add(pp);
  sess.add(pp,BorderLayout.CENTER);
  p=new BaseXBack(new BorderLayout(0,0));
  p.add(refreshSess,BorderLayout.EAST);
  sess.add(p,BorderLayout.SOUTH);
  logs.border(8).layout(new BorderLayout());
  delete=new BaseXButton(DELETE,this);
  deleteAll=new BaseXButton(DELETE_ALL,this);
  logc=new BaseXCombo(this);
  logt=new Editor(false,this);
  logt.setFont(start.getFont());
  BaseXLayout.setHeight(logt,100);
  logt.border(5);
  infoL=new BaseXLabel(" ").border(12,0,0,0);
  refreshLog=new BaseXButton(REFRESH,this);
  p=new BaseXBack(new BorderLayout());
  pp=new BaseXBack();
  pp.add(logc);
  pp.add(delete);
  pp.add(deleteAll);
  p.add(pp,BorderLayout.WEST);
  logs.add(p,BorderLayout.NORTH);
  logs.add(new SearchEditor(main,logt),BorderLayout.CENTER);
  p=new BaseXBack(new BorderLayout(8,0));
  p.add(infoL,BorderLayout.WEST);
  p.add(refreshLog,BorderLayout.EAST);
  logs.add(p,BorderLayout.SOUTH);
  tabs=new BaseXTabs(this);
  tabs.add(S_CONNECT,conn);
  tabs.add(USERS,user);
  tabs.add(DATABASES,databases);
  tabs.add(S_SESSIONS,sess);
  tabs.add(S_LOCALLOGS,logs);
  set(tabs,BorderLayout.CENTER);
  running=ping(true);
  tabs.addChangeListener(new ChangeListener(){
    @Override public void stateChanged(    final ChangeEvent evt){
      final BaseXTabs pane=(BaseXTabs)evt.getSource();
      tab=pane.getSelectedIndex();
      final Object o=pane.getSelectedComponent();
      if (o == logs)       refreshLog();
      if (o == user)       action(user);
      if (o == databases)       action(dbsP);
      if (o == sess)       action(refreshSess);
    }
  }
);
  final KeyAdapter startListener=new KeyAdapter(){
    @Override public void keyPressed(    final KeyEvent key){
      if (key.getKeyCode() == KeyEvent.VK_ENTER)       action(start);
    }
  }
;
  ports.addKeyListener(startListener);
  final KeyAdapter connListener=new KeyAdapter(){
    @Override public void keyPressed(    final KeyEvent key){
      if (key.getKeyCode() == KeyEvent.VK_ENTER)       action(connect);
    }
  }
;
  admuser.addKeyListener(connListener);
  admpass.addKeyListener(connListener);
  host.addKeyListener(connListener);
  portc.addKeyListener(connListener);
  refreshLog();
  action(null);
  setResizable(true);
  finish(null);
}
