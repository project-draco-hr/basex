{
  open(http);
  final Session session=http.session();
  if (http.depth() == 0) {
    final Table table=new Table(session.execute(new List()));
    final SerializerProp sprop=new SerializerProp(http.serialization);
    final Serializer ser=Serializer.get(http.res.getOutputStream(),sprop);
    http.initResponse(sprop);
    final FElem el=new FElem(DATABASES,new Atts(REST,RESTURI));
    el.add(new FAttr(RESOURCES,token(table.contents.size())));
    list(table,el,DATABASE,1);
    ser.item(el);
    ser.close();
  }
 else   if (!exists(http)) {
    final Table table=new Table(session.execute(new ListDB(http.path())));
    if (table.contents.isEmpty())     HTTPErr.UNKNOWN_PATH.thrw();
    final String serial=http.serialization;
    final SerializerProp sprop=new SerializerProp(serial);
    final Serializer ser=Serializer.get(http.res.getOutputStream(),sprop);
    http.initResponse(sprop);
    final FElem el=new FElem(DATABASE,new Atts(REST,RESTURI));
    el.add(new FAttr(DataText.T_NAME,token(http.db())));
    el.add(new FAttr(RESOURCES,token(table.contents.size())));
    list(table,el,RESOURCE,0);
    ser.item(el);
    ser.close();
  }
 else   if (isRaw(http)) {
    final String ct=SerializerProp.S_MEDIA_TYPE[0] + "=" + contentType(http);
    http.initResponse(new SerializerProp(ct + ',' + http.serialization));
    session.setOutputStream(http.res.getOutputStream());
    session.execute(new Retrieve(http.dbpath()));
  }
 else {
    http.initResponse(new SerializerProp(http.serialization));
    session.execute(new Set(Prop.SERIALIZER,serial(http)));
    session.setOutputStream(http.res.getOutputStream());
    session.query(".").execute();
  }
}
