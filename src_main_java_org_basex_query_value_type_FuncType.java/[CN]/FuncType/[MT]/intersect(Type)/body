{
  if (t instanceof MapType)   return t.intersect(this);
  if (this.instanceOf(t))   return this;
  if (t.instanceOf(this))   return t;
  if (t instanceof FuncType) {
    final FuncType ft=(FuncType)t;
    final SeqType rt=ret.intersect(ft.ret);
    if (rt != null && args.length == ft.args.length) {
      final SeqType[] arg=new SeqType[args.length];
      for (int i=0; i < arg.length; i++)       arg[i]=args[i].union(ft.args[i]);
      return get(rt,arg);
    }
  }
  return null;
}
