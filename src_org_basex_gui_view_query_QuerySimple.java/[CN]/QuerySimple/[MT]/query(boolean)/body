{
  final StringBuilder sb=new StringBuilder();
  final int cs=panel.getComponentCount();
  final Data data=GUI.context.data();
  final boolean fsxml=data.deepfs;
  boolean first=true;
  for (int c=0; c < cs; c+=2) {
    final int k=((BaseXCombo)panel.getComponent(c)).getSelectedIndex();
    if (k == 0)     continue;
    String key=keys[k];
    final boolean attr=keys[k].startsWith("@");
    final Component comp=panel.getComponent(c + 1);
    String pattern=null;
    String val1=null;
    String val2=null;
    if (comp instanceof BaseXTextField) {
      val1=((BaseXTextField)comp).getText();
      if (val1.length() != 0) {
        if (val1.startsWith("\"")) {
          val1=val1.replaceAll("\"","");
          pattern=PATEX;
        }
 else {
          pattern=attr && data.meta.atvindex || !attr && data.meta.txtindex ? PATEX : PATSUB;
        }
      }
    }
 else     if (comp instanceof BaseXCombo) {
      final BaseXCombo combo=(BaseXCombo)comp;
      if (combo.getSelectedIndex() != 0) {
        val1=combo.getSelectedItem().toString();
        pattern=PATEX;
      }
    }
 else     if (comp instanceof BaseXDSlider) {
      final BaseXDSlider slider=(BaseXDSlider)comp;
      if (slider.min != slider.totMin || slider.max != slider.totMax) {
        final double m=(long)(slider.min * 100) / 100.0;
        final double n=(long)(slider.max * 100 + 99) / 100.0;
        val1=(long)m == m ? Long.toString((long)m) : Double.toString(m);
        val2=(long)n == n ? Long.toString((long)n) : Double.toString(n);
        pattern=PATNUM;
      }
    }
    if (pattern == null)     pattern=PATSIMPLE;
    if (fsxml)     key="descendant-or-self::" + (attr ? "*/" : "") + key;
 else {
      if (!attr)       key="self::" + key;
      if (!first)       sb.append("/descendant-or-self::node()");
    }
    sb.append(BaseX.info(pattern,key,val1,key,val2));
    first=false;
  }
  String qu=sb.toString();
  if (qu.length() != 0) {
    final Nodes curr=GUI.context.current();
    final boolean r=GUIProp.filterrt || curr.size == 1 && curr.pre[0] == 0;
    qu=(r ? "/" : "") + "descendant-or-self::" + (fsxml ? "file" : "*")+ qu;
  }
  String simple=all.getText().trim();
  if (simple.length() != 0) {
    simple=Find.find(simple,GUI.context,GUIProp.filterrt);
    qu=qu.length() != 0 ? simple + " | " + qu : simple;
  }
  if (qu.length() == 0) {
    final boolean root=GUIProp.filterrt;
    final Nodes current=GUI.context.current();
    qu=root || current.size == 1 && current.pre[0] < 1 ? "/" : ".";
  }
  if (!force && last.equals(qu))   return;
  last=qu;
  BaseXLayout.enable(copy,last.length() != 0);
  GUI.get().execute(Commands.XPATH,qu);
}
