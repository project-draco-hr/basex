{
  if (e == null) {
    if (GUIProp.execrt)     query(false);
    return;
  }
  final Object source=e.getSource();
  int cp=0;
  final int cs=panel.getComponentCount();
  for (int c=0; c < cs; c++)   if (panel.getComponent(c) == source)   cp=c;
  if ((cp & 1) == 0) {
    final BaseXCombo combo=(BaseXCombo)source;
    panel.remove(cp + 1);
    if (combo.getSelectedIndex() != 0) {
      final String item=combo.getSelectedItem().toString();
      final Data data=GUI.context.data();
      final boolean att=item.startsWith("@");
      final Names names=att ? data.atts : data.tags;
      final byte[] key=Token.token(att ? item.substring(1) : item);
      final StatsKey stat=names.stat(key);
switch (stat.kind) {
case INT:
        addSlider(stat.min,stat.max,cp + 1,item.equals("@size"),item.equals("@mtime"),true);
      break;
case DBL:
    addSlider(stat.min,stat.max,cp + 1,false,false,false);
  break;
case CAT:
addCombo(keys(stat.cats),cp + 1);
break;
case TEXT:
addInput(cp + 1);
break;
case NONE:
final BaseXLabel label=new BaseXLabel("");
label.setBorder(3,0,0,0);
panel.add(label,cp + 1);
break;
}
if (cp + 2 == cs) addKeys(cp + 2);
panel.validate();
panel.repaint();
}
 else {
panel.add(new BaseXLabel(""),cp + 1);
if (cp + 4 == cs && ((BaseXCombo)panel.getComponent(cp + 2)).getSelectedIndex() == 0) {
panel.remove(cp + 2);
panel.remove(cp + 2);
panel.validate();
panel.repaint();
}
}
}
if (GUIProp.execrt) query(false);
}
