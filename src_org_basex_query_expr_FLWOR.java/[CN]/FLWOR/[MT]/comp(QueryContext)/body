{
  final int vs=ctx.vars.size();
  for (int f=0; f != fl.length; f++) {
    final boolean fast=ctx.ftfast;
    ctx.ftfast&=fl[f].standard();
    final Expr e=fl[f].comp(ctx);
    ctx.ftfast=fast;
    if (e.e()) {
      ctx.vars.reset(vs);
      ctx.compInfo(OPTFLWOR);
      return e;
    }
    fl[f]=(ForLet)e;
  }
  if (where != null) {
    where=where.comp(ctx);
    final boolean e=where.e();
    if (e || where.i()) {
      if (e || !((Item)where).bool()) {
        ctx.compInfo(OPTFALSE,where);
        ctx.vars.reset(vs);
        return Seq.EMPTY;
      }
      ctx.compInfo(OPTTRUE,where);
      where=null;
    }
  }
  if (group != null)   group.comp(ctx);
  if (order != null)   order.comp(ctx);
  ret=ret.comp(ctx);
  ctx.vars.reset(vs);
  return this;
}
