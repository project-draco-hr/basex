{
  final Type ti=it.type;
  if (ti.isUntyped())   return DBL;
  final Type tr=res.type;
  if (!(it instanceof ANum))   throw EXPTYPE_X_X_X.get(info,tr,ti,it);
  return tr == ti ? tr : tr == DBL || ti == DBL ? DBL : tr == FLT || ti == FLT ? FLT : tr == DEC || ti == DEC ? DEC : instanceOf(tr,ti,NNI) ? NNI : instanceOf(tr,ti,SHR) ? SHR : instanceOf(tr,ti,INT) ? INT : instanceOf(tr,ti,LNG) ? LNG : instanceOf(tr,ti,NPI) ? NPI : ITR;
}
