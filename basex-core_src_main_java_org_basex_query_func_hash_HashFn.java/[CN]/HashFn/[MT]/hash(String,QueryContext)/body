{
  final Item item=exprs[0].atomItem(qc,info);
  try {
    final MessageDigest md=MessageDigest.getInstance(algo);
    if (item instanceof B64Stream) {
      try (final BufferInput bi=item.input(info)){
        final byte[] tmp=new byte[IO.BLOCKSIZE];
        do {
          final int n=bi.read(tmp);
          if (n == -1)           return new B64(md.digest());
          md.update(tmp,0,n);
        }
 while (true);
      }
 catch (      final IOException ex) {
        throw FILE_IO_ERROR_X.get(info,ex);
      }
    }
    return new B64(md.digest(toBytes(item)));
  }
 catch (  final NoSuchAlgorithmException ex) {
    throw HASH_ALG_X.get(info,algo);
  }
}
