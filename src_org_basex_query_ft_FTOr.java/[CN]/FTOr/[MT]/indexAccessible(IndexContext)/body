{
  if (1 == 1)   return false;
  final IntList ip=new IntList();
  final IntList in=new IntList();
  final int min=ic.is;
  int sum=0;
  for (int i=0; i < expr.length; i++) {
    final boolean ftnot=ic.ftnot;
    ic.ftnot=false;
    final boolean ia=expr[i].indexAccessible(ic);
    final boolean ftn=ic.ftnot;
    ic.ftnot=ftnot;
    if (!ia)     return false;
    if (ftn) {
      if (ic.is > 0)       in.add(i);
 else {
        ic.seq=true;
        ic.is=Integer.MAX_VALUE;
        return false;
      }
    }
 else     if (ic.is > 0) {
      ip.add(i);
      sum+=ic.is;
    }
  }
  nex=in.finish();
  pex=ip.finish();
  if (pex.length == 0 && nex.length > 0) {
    ic.seq=true;
    ic.is=Integer.MAX_VALUE;
  }
 else   if (nex.length > 0 && pex.length > 0) {
    ic.seq=true;
    ic.is=Integer.MAX_VALUE;
    return false;
  }
 else {
    ic.is=sum > min ? min : sum;
  }
  return true;
}
