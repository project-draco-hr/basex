{
  final Random rnd=new Random(0);
  final int cap=1000;
  final StringList words=new StringList(cap);
  for (int w=0; w < cap; w++) {
    final int r=1 + rnd.nextInt(10);
    final TokenBuilder tmp=new TokenBuilder(r);
    for (int i=0; i < r; i++)     tmp.add('A' + rnd.nextInt(26));
    words.add(tmp.toString());
  }
  for (int r=0; r < RUNS; r++) {
    final String path="doc" + rnd.nextInt(DOCS);
    final TokenBuilder doc=new TokenBuilder("<xml>");
    final int offset=rnd.nextInt(cap - DOCS);
    for (int i=0; i < DOCS; i++)     doc.add("<a>").add(words.get(offset + i)).add("</a>");
    doc.add("</xml>");
    execute(new Replace(path,doc.toString()));
    for (int d=0; d < DOCS; d++) {
      final String word=words.get(offset + d);
      final String query=_DB_OPEN.args(NAME,path) + "//a[text() = '" + word+ "']";
      final String expected="<a>" + word + "</a>";
      final String result=query(query);
      if (!result.startsWith(expected)) {
        fail(new TokenBuilder("\nExpected: " + expected + "\nResult: "+ result+ "\nRun: "+ r+ "\nDoc: "+ d+ "\nQuery: "+ query+ "\nDocument: "+ doc).toString());
      }
    }
  }
}
