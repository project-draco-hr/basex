{
  if (scanner.type == Type.L_BR_CLOSE) {
    scanner.more();
    final byte[] tag=consumeToken(Type.TAGNAME);
    skipSpace();
    builder.endNode(tag);
    return consume(Type.R_BR);
  }
 else {
    consume(Type.L_BR);
    byte[][] atts=null;
    final byte[] tag=consumeToken(Type.TAGNAME);
    skipSpace();
    int as=0;
    while (scanner.type != Type.R_BR && scanner.type != Type.CLOSE_R_BR) {
      final byte[] attName=consumeToken(Type.ATTNAME);
      skipSpace();
      consume(Type.EQ);
      skipSpace();
      consume(Type.QUOTE);
      byte[] attValue=EMPTY;
      if (scanner.type == Type.ATTVALUE) {
        attValue=scanner.token.finish();
        scanner.more();
      }
      consume(Type.QUOTE);
      final int s=indexOf(attName,':');
      if (s != -1 && startsWith(attName,DataText.XMLNSC)) {
        builder.startNS(substring(attName,s + 1),attValue);
      }
 else       if (eq(attName,DataText.XMLNS)) {
        builder.startNS(EMPTY,attValue);
      }
 else {
        final byte[][] tmp=new byte[as + 2][];
        if (as > 0)         System.arraycopy(atts,0,tmp,0,as);
        atts=tmp;
        atts[as++]=attName;
        atts[as++]=attValue;
      }
      if (scanner.type != Type.R_BR && scanner.type != Type.CLOSE_R_BR) {
        consume(Type.WS);
      }
    }
    if (scanner.type == Type.CLOSE_R_BR) {
      builder.emptyNode(tag,atts);
      return scanner.more();
    }
 else {
      builder.startNode(tag,atts);
      return consume(Type.R_BR);
    }
  }
}
