{
  final String doc="<n1>" + "<n2/><n3/><n4/><n5/><n6/><n7/><n8/><n9/><n10/><n11/>" + "</n1>";
  AtomicUpdateCache auc=atomics(doc);
  auc.addDelete(3);
  auc.applyUpdates();
  assertEquals(2,auc.calculatePreValue(2,false));
  assertEquals(3,auc.calculatePreValue(3,false));
  assertEquals(3,auc.calculatePreValue(4,false));
  assertEquals(4,auc.calculatePreValue(5,false));
  assertEquals(2,auc.calculatePreValue(2,true));
  assertEquals(4,auc.calculatePreValue(3,true));
  assertEquals(5,auc.calculatePreValue(4,true));
  assertEquals(6,auc.calculatePreValue(5,true));
  auc=atomics(doc);
  auc.addDelete(3);
  auc.addDelete(5);
  auc.addDelete(7);
  auc.applyUpdates();
  assertEquals(2,auc.calculatePreValue(2,false));
  assertEquals(3,auc.calculatePreValue(3,false));
  assertEquals(3,auc.calculatePreValue(4,false));
  assertEquals(4,auc.calculatePreValue(5,false));
  assertEquals(4,auc.calculatePreValue(6,false));
  assertEquals(5,auc.calculatePreValue(7,false));
  assertEquals(5,auc.calculatePreValue(8,false));
  assertEquals(2,auc.calculatePreValue(2,true));
  assertEquals(4,auc.calculatePreValue(3,true));
  assertEquals(6,auc.calculatePreValue(4,true));
  assertEquals(8,auc.calculatePreValue(5,true));
  assertEquals(9,auc.calculatePreValue(6,true));
  assertEquals(10,auc.calculatePreValue(7,true));
  assertEquals(11,auc.calculatePreValue(8,true));
  auc=atomics(doc);
  final MemData m=new MemData(auc.data);
  auc.addInsert(3,1,clipE(m,"<dummy3/>",true));
  auc.addInsert(3,1,clipE(m,"<dummy4/>",true));
  auc.addDelete(3);
  auc.applyUpdates();
  assertEquals(1,auc.calculatePreValue(1,false));
  assertEquals(2,auc.calculatePreValue(2,false));
  assertEquals(5,auc.calculatePreValue(3,false));
  assertEquals(7,auc.calculatePreValue(4,false));
  assertEquals(8,auc.calculatePreValue(5,false));
  assertEquals(9,auc.calculatePreValue(6,false));
  assertEquals(1,auc.calculatePreValue(1,true));
  assertEquals(2,auc.calculatePreValue(2,true));
  assertEquals(3,auc.calculatePreValue(3,true));
  assertEquals(4,auc.calculatePreValue(4,true));
  assertEquals(3,auc.calculatePreValue(5,true));
  assertEquals(4,auc.calculatePreValue(6,true));
}
