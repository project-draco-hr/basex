{
  if (root == -1) {
    root=newNode(key,value,-1,exist);
    return root;
  }
  int n=root;
  while (true) {
    final int c=Token.diff(key,keys.get(n));
    if (c == 0) {
      if (exist) {
        values.set(n,Num.add(values.get(n),value));
      }
 else {
        final int i=maps.get(Num.num(n));
        if (i < 0) {
          maps.put(Num.num(n),values.size());
          values.add(Num.newNum(value));
        }
 else {
          values.set(i,Num.add(values.get(i),value));
        }
      }
      return n;
    }
    int ch=c < 0 ? left(n) : right(n);
    if (ch == -1) {
      ch=newNode(key,value,n,exist);
      if (c < 0) {
        setLeft(n,ch);
        adjust(left(n));
      }
 else {
        setRight(n,ch);
        adjust(right(n));
      }
      return ch;
    }
    n=ch;
  }
}
