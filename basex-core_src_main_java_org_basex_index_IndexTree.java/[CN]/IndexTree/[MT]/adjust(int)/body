{
  int n=nd;
  mod.set(n,true);
  while (n != -1 && n != root && mod.get(parent(n))) {
    if (parent(n) == left(parent(parent(n)))) {
      final int y=right(parent(parent(n)));
      if (y != -1 && mod.get(y)) {
        mod.set(parent(n),false);
        mod.set(y,false);
        mod.set(parent(parent(n)),true);
        n=parent(parent(n));
      }
 else {
        if (n == right(parent(n))) {
          n=parent(n);
          rotateLeft(n);
        }
        mod.set(parent(n),false);
        mod.set(parent(parent(n)),true);
        if (parent(parent(n)) != -1)         rotateRight(parent(parent(n)));
      }
    }
 else {
      final int y=left(parent(parent(n)));
      if (y != -1 && mod.get(y)) {
        mod.set(parent(n),false);
        mod.set(y,false);
        mod.set(parent(parent(n)),true);
        n=parent(parent(n));
      }
 else {
        if (n == left(parent(n))) {
          n=parent(n);
          rotateRight(n);
        }
        mod.set(parent(n),false);
        mod.set(parent(parent(n)),true);
        if (parent(parent(n)) != -1)         rotateLeft(parent(parent(n)));
      }
    }
  }
  mod.set(root,false);
}
