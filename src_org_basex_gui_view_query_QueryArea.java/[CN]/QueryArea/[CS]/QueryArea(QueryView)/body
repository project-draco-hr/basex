{
  main=view;
  area=new BaseXText(HELPQUERYMODE);
  area.setSyntax(new QuerySyntax());
  area.addKeyListener(new KeyAdapter(){
    @Override public void keyReleased(    final KeyEvent e){
      final String xq=Token.string(area.getText());
      final boolean mod=xq.trim().startsWith("module namespace ");
      if (GUIProp.execrt && !mod) {
        query(false);
      }
 else {
        try {
          final XQParser parser=new XQParser(new XQContext());
          if (mod)           parser.module(xq);
 else           parser.parse(xq);
          info("",true);
        }
 catch (        final QueryException ex) {
          info(ex.getMessage(),false);
        }
      }
    }
  }
);
  south=new Box(BoxLayout.X_AXIS);
  info=new BaseXLabel(" ");
  info.setName(Integer.toString(0));
  info.setCursor(GUIConstants.CURSORHAND);
  info.addMouseListener(new MouseAdapter(){
    @Override public void mouseClicked(    final MouseEvent e){
      area.setCaret(Integer.parseInt(info.getName()));
      area.requestFocusInWindow();
    }
  }
);
  south.add(info);
  BaseXLayout.enable(info,false);
  initPanel();
  south.add(Box.createHorizontalGlue());
  south.add(stop);
  south.add(Box.createHorizontalStrut(1));
  south.add(go);
  okIcon=GUI.icon("ok");
  errIcon=GUI.icon("error");
}
