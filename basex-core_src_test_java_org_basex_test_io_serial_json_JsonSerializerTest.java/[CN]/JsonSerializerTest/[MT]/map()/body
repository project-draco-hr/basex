{
  final JsonFormat format=JsonFormat.MAP;
  serialize("{ }","{}",format);
  serialize("{ '': () }","{'':null}",format);
  serialize("{ 'A' : 'B' }","{'A':'B'}",format);
  serialize("{ 'A': 1 }","{'A':1}",format);
  serialize("{ 'A': 1.2 }","{'A':1.2}",format);
  serialize("{ 'A': .2 }","{'A':0.2}",format);
  serialize("{ 'A': .0 }","{'A':0}",format);
  serialize("{ 'A': 1 div 0.0e0 }","{'A':'INF'}",format);
  serialize("{ 'A': -1 div 0.0e0 }","{'A':'-INF'}",format);
  serialize("{ 'A': 0 div 0.0e0 }","{'A':'NaN'}",format);
  serialize("{ 'A': true() }","{'A':true}",format);
  serialize("{ 'A': false() }","{'A':false}",format);
  serialize("{ 'A': false() }","{'A':false}",format);
  error("{ true(): false() }",format);
  error("{ true(): true#0 }",format);
  error("{ 'A': ('B','C') }",format);
  error("{ 'A': 'B', 'C': 'D', 1: 'E' }",format);
  error("{ 1: 'B', 2: 'C', 'C': 'D' }",format);
  serialize("{ 1:() }","[null]",format);
  serialize("{ 1:2 }","[2]",format);
  serialize("{ 1:2,2:3 }","[2,3]",format);
  serialize("{ 1:2,3:4 }","[2,null,4]",format);
  serialize("{ 3:4,1:2 }","[2,null,4]",format);
  serialize("{ 'A':{} }","{'A':{}}",format);
  serialize("{ 'A':{'B':'C'} }","{'A':{'B':'C'}}",format);
  serialize("{ 'A':{1:'B'} }","{'A':['B']}",format);
  serialize("{ 'A':{4:true(),2:{'C':'D'},1:0} }","{'A':[0,{'C':'D'},null,true]}",format);
  serialize("'A'","'A'",format,JsonSpec.ECMA_262);
  serialize("'A'","'A'",format,JsonSpec.LIBERAL);
  serialize("true()","true",format,JsonSpec.LIBERAL);
  serialize("1","1",format,JsonSpec.LIBERAL);
  serialize("(1,2)","1 2",format,JsonSpec.LIBERAL);
  error("'A'",format);
  error("{ 0: () }",format);
  error("{ -1: () }",format);
}
