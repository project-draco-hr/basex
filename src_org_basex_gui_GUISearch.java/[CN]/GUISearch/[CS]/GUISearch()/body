{
  super("BaseX Search");
  setUndecorated(true);
  setAlwaysOnTop(true);
  setIconImage(GUI.image(IMGICON));
  setLayout(new BorderLayout());
  final BaseXTextField input=new BaseXTextField(null);
  input.setBorder(new CompoundBorder(new EtchedBorder(),new EmptyBorder(1,4,1,4)));
  input.addKeyListener(new KeyAdapter(){
    @Override public void keyReleased(    final KeyEvent e){
      if (!REALTIME && e.getKeyCode() != KeyEvent.VK_ENTER)       return;
      String text=input.getText().trim();
      if (!text.startsWith("/"))       text=Find.find(text,CONTEXT,true);
      if (!text.equals(last)) {
        last=text;
        if (proc != null)         proc.stop();
        if (SHOWFILES && !Prop.UNIX) {
          try {
            final Runtime run=Runtime.getRuntime();
            run.exec("explorer " + Link.LINKDIR.replace("/","\\"));
          }
 catch (          final IOException ex) {
            ex.printStackTrace();
          }
        }
        proc=Proc.get(CONTEXT,Commands.LINK,text);
        proc.execute();
      }
    }
  }
);
  final MouseInputAdapter mouse=new MouseInputAdapter(){
    /** 
 * Window position. 
 */
    Point p;
    @Override public void mousePressed(    final MouseEvent e){
      p=input.getLocationOnScreen();
      p.x+=e.getX();
      p.y+=e.getY();
    }
    @Override public void mouseDragged(    final MouseEvent e){
      final Point n=input.getLocationOnScreen();
      n.x+=e.getX();
      n.y+=e.getY();
      final Point w=getLocation();
      setLocation(w.x + n.x - p.x,w.y + n.y - p.y);
      p=n;
    }
  }
;
  input.addMouseMotionListener(mouse);
  input.addMouseListener(mouse);
  final JLabel label=new JLabel(new ImageIcon(GUI.image(IMGBASEX)));
  label.setBorder(new CompoundBorder(new EtchedBorder(),new EmptyBorder(2,2,2,2)));
  label.addMouseMotionListener(mouse);
  label.addMouseListener(mouse);
  label.addMouseListener(new MouseAdapter(){
    @Override public void mouseClicked(    final MouseEvent e){
      int w=getWidth() + 100;
      if (w > 600)       w-=500;
      setSize(w,getHeight());
      validate();
      repaint();
    }
  }
);
  add(label,BorderLayout.WEST);
  add(input,BorderLayout.CENTER);
  pack();
  setSize(GUIProp.searchwidth,getHeight());
  setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
  setLocation(GUIProp.searchloc[0],GUIProp.searchloc[1]);
  setVisible(true);
  input.requestFocusInWindow();
  setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
  addWindowListener(new WindowAdapter(){
    @Override public void windowClosing(    final WindowEvent e){
      GUIProp.searchloc[0]=getX();
      GUIProp.searchloc[1]=getY();
      GUIProp.searchwidth=getWidth();
      GUIProp.write();
    }
  }
);
}
