{
  final byte[] st=syntax.commentOpen();
  final byte[] en=syntax.commentEnd();
  final int sl=st.length, el=en.length;
  if (!selected()) {
    ms=pc;
    me=pc;
    while (ms > 0 && text[ms - 1] != '\n')     --ms;
    while (me < size() && text[me] != '\n')     ++me;
  }
  final int min=Math.min(ms,me);
  int max=Math.max(ms,me);
  if (selected() && text[max - 1] == '\n')   max--;
  final TokenBuilder tb=new TokenBuilder().add(text,0,min);
  final int mx=Math.max(min + sl,max - el), off;
  if (indexOf(text,st,min) == min && indexOf(text,en,mx) == mx) {
    tb.add(text,min + sl,max - el);
    off=-sl - el;
  }
 else {
    tb.add(st).add(text,min,max).add(en);
    off=sl + el;
  }
  final boolean changed=text(tb.add(text,max,text.length).finish());
  ms=min;
  me=max + off;
  setCaret(me);
  checkSelect();
  return changed;
}
