{
  final NamePool pool=new NamePool();
  final IntList il=new IntList();
  for (  final int pre : pres) {
    final UpdatePrimitive[] ups=op.get(pre);
    if (ups != null) {
      for (      final UpdatePrimitive up : ups) {
        if (up != null)         up.update(pool);
      }
    }
    if (d.kind(pre) == Data.ATTR) {
      il.add(pre);
    }
 else {
      final int ps=pre + d.attSize(pre,Data.ELEM);
      for (int p=pre + 1; p < ps; p++) {
        if (!il.contains(p))         pool.add(new QNm(d.name(p,Data.ATTR)),Type.ATT);
      }
    }
  }
  final QNm dup=pool.duplicate();
  if (dup != null)   Err.or(UPATTDUPL,dup);
  if (!pool.nsOK())   Err.or(UPNSCONFL2);
}
