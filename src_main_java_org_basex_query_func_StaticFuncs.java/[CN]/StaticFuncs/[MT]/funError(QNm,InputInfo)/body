{
  Functions.get().error(name,ii);
  final Levenshtein ls=new Levenshtein();
  final byte[] nm=lc(name.local());
  final int fs=funcs.size();
  for (int id=1; id <= fs; ++id) {
    final StaticFunc sf=funcs.value(id).func;
    if (ls.similar(nm,lc(sf.name.local()),0)) {
      FUNSIMILAR.thrw(ii,name.string(),sf.name.string());
    }
  }
}
