{
  if (USE_CHILDITERATOR) {
    IntList parList=new IntList(1);
    parList.add(0);
    nodes=new IntList[maxLevel];
    int l=0;
    while (maxLevel > l) {
      nodes[l++]=parList;
      parList=getNextNodeLine(parList,data);
    }
  }
 else {
    final IntList[] li=new IntList[maxLevel];
    for (int i=0; i < maxLevel; i++)     li[i]=new IntList();
    final int ts=data.meta.size;
    final int[] lvlPre=new int[maxLevel];
    li[0].add(0);
    lvlPre[0]=0;
    for (int p=1; p < ts; p++) {
      final int k=data.kind(p);
      if (!SHOW_ATTR && k == Data.ATTR)       continue;
      int lv=0;
      final int par=data.parent(p,k);
      while (par != lvlPre[lv])       lv++;
      lvlPre[lv + 1]=p;
      li[lv + 1].add(p);
    }
    nodes=li;
  }
}
