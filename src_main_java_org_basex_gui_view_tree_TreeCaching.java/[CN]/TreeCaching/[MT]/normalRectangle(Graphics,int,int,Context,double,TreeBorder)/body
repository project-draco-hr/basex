{
  rects[rn][lv]=new TreeRect[bo.size];
  double xx=rn * w * bo.size;
  double ww=w;
  for (int i=bo.start; i < bo.start + bo.size; i++) {
    if (SLIM_TO_TEXT) {
      final double boxMiddle=xx + ww / 2f;
      final byte[] b=getText(c,rn,nodes[bo.level].get(i));
      int o=calcOptimalRectWidth(g,b) + 10;
      if (o < MIN_TXT_SPACE)       o=MIN_TXT_SPACE;
      if (w > o) {
        xx=boxMiddle - o / 2d;
        ww=o;
      }
    }
    rects[rn][lv][i - bo.start]=new TreeRect((int)xx + BORDER_PADDING,(int)ww - BORDER_PADDING);
    xx+=w;
  }
}
