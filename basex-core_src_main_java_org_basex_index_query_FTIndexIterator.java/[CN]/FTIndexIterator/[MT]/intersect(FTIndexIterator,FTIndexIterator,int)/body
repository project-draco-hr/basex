{
  return new FTIndexIterator(){
    private FTIndexIterator ii1, ii2;
    private FTMatches all;
    @Override public boolean more(){
      int d=0;
      while (true) {
        if (d <= 0)         ii1=i1.more() ? i1 : null;
        if (d >= 0)         ii2=i2.more() ? i2 : null;
        if (ii1 == null || ii2 == null)         return false;
        d=ii1.pre() - ii2.pre();
        if (d != 0)         continue;
        all=ii1.matches();
        final FTMatches all2=ii2.matches();
        if (dis == 0) {
          for (          final FTMatch m1 : all) {
            for (            final FTMatch m2 : all2)             m1.add(m2);
          }
          return true;
        }
 else         if (all.phrase(all2,dis)) {
          return true;
        }
      }
    }
    @Override public FTMatches matches(){
      return all;
    }
    @Override public int pre(){
      return ii1.pre();
    }
    @Override public void pos(    final int p){
      i1.pos(p);
      i2.pos(p);
    }
    @Override public synchronized int size(){
      return Math.min(i1.size(),i2.size());
    }
    @Override public String toString(){
      return "(" + i1 + " & "+ i2+ ')';
    }
  }
;
}
