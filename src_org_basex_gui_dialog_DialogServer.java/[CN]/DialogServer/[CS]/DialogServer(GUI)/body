{
  super(main,"Server...");
  final BaseXBack p1=new BaseXBack();
  p1.setLayout(new TableLayout(1,3));
  final BaseXButton stop=new BaseXButton("Stop server",null,this);
  final BaseXButton start=new BaseXButton("Start server...",null,this);
  stop.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      new BaseXServer("stop");
      stop.setEnabled(false);
      start.setEnabled(true);
    }
  }
);
  start.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      startServer();
      stop.setEnabled(true);
      start.setEnabled(false);
    }
  }
);
  try {
    new ClientSession(ctx);
    start.setEnabled(false);
  }
 catch (  IOException e1) {
    stop.setEnabled(false);
  }
  p1.add(start);
  p1.add(new BaseXLabel("    "));
  p1.add(stop);
  final BaseXBack p2=new BaseXBack();
  p2.setLayout(new TableLayout(3,1));
  p2.setBorder(8,8,8,8);
  final BaseXBack p21=new BaseXBack();
  p21.setLayout(new TableLayout(4,5,6,0));
  p21.add(new BaseXLabel("Create User:",false,true));
  p21.add(new BaseXLabel(""));
  p21.add(new BaseXLabel(""));
  p21.add(new BaseXLabel(""));
  p21.add(new BaseXLabel(""));
  p21.add(new BaseXLabel("Username:"));
  final BaseXTextField user=new BaseXTextField("",null,this);
  p21.add(user);
  p21.add(new BaseXLabel("Password:"));
  final JPasswordField pass=new JPasswordField(10);
  final JTable table=new JTable(new TableModel());
  final JScrollPane scrollPane=new JScrollPane(table);
  final BaseXCombo userco=new BaseXCombo(getUsers(),null,this);
  p21.add(pass);
  final BaseXButton create=new BaseXButton("Create User",null,this);
  final BaseXButton delete=new BaseXButton("Drop User",null,this);
  create.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      String u=user.getText();
      String p=new String(pass.getPassword());
      if (!u.equals("") && !p.equals("")) {
        createUser(u,p);
        user.setText("");
        pass.setText("");
        ((TableModel)table.getModel()).setData();
        userco.addItem(u);
        delete.setEnabled(true);
      }
    }
  }
);
  p21.add(create);
  final BaseXBack p22=new BaseXBack();
  p22.setLayout(new TableLayout(2,2,6,0));
  p22.add(new BaseXLabel("Drop User:",false,true));
  p22.add(new BaseXLabel(""));
  if (getUsers().length == 0)   delete.setEnabled(false);
  delete.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      String test=(String)userco.getSelectedItem();
      dropUser(test);
      userco.removeItem(test);
      ((TableModel)table.getModel()).setData();
      if (getUsers().length == 0)       delete.setEnabled(false);
    }
  }
);
  p22.add(userco);
  p22.add(delete);
  final BaseXBack p23=new BaseXBack();
  p23.setLayout(new TableLayout(5,1,6,0));
  p23.add(new BaseXLabel("                      "));
  p23.add(new BaseXLabel("User rights management:",false,true));
  table.setPreferredScrollableViewportSize(new Dimension(500,70));
  table.setFillsViewportHeight(true);
  p23.add(scrollPane);
  final BaseXButton save=new BaseXButton("Save",null,this);
  save.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      writeList(((TableModel)table.getModel()).getData());
    }
  }
);
  p23.add(save);
  p2.add(p21);
  p2.add(p22);
  p2.add(p23);
  final BaseXBack p3=new BaseXBack();
  p3.setLayout(new TableLayout(7,1));
  p3.setBorder(8,8,8,8);
  final BaseXBack p31=new BaseXBack();
  p31.setLayout(new TableLayout(4,2,6,0));
  p31.add(new BaseXLabel("Port:"));
  final BaseXTextField port=new BaseXTextField(String.valueOf(ctx.prop.num(Prop.PORT)),null,this);
  p31.add(port);
  p31.add(new BaseXLabel("Host:"));
  final BaseXTextField host=new BaseXTextField(ctx.prop.get(Prop.HOST),null,this);
  p31.add(host);
  p31.add(new BaseXLabel(" "));
  p31.add(new BaseXLabel(" "));
  p31.add(new BaseXLabel("        "));
  final BaseXButton change=new BaseXButton("Change",null,this);
  change.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      ctx.prop.set(Prop.HOST,host.getText());
      ctx.prop.set(Prop.PORT,Integer.parseInt(port.getText()));
    }
  }
);
  p31.add(change);
  p3.add(p31);
  final BaseXTabs tabs=new BaseXTabs(this);
  tabs.add("Server",p1);
  tabs.add("Users",p2);
  tabs.add("Properties",p3);
  set(tabs,BorderLayout.CENTER);
  finish(null);
}
