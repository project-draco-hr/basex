{
  super(main,GUISERVER);
  tabs=new BaseXTabs(this);
  conn.setLayout(new TableLayout(5,1,0,4));
  conn.setBorder(8,8,8,8);
  final BaseXBack db=dbsP.getTablePanel();
  db.setBorder(8,8,8,8);
  tabs.add(GUISERVER,conn);
  tabs.add(USERS,user);
  tabs.add(DATABASES,db);
  tabs.add(SESSIONS,sess);
  tabs.add(LOGS,logs);
  start=new BaseXButton(BUTTONSTART,this);
  stop=new BaseXButton(BUTTONSTOP,this);
  connect=new BaseXButton(BUTTONCONNECT,this);
  disconnect=new BaseXButton(BUTTONDISCONNECT,this);
  refreshSess=new BaseXButton(BUTTONREFRESH,this);
  host=new BaseXTextField(ctx.prop.get(Prop.HOST),this);
  host.addKeyListener(keys);
  ports=new BaseXTextField(Integer.toString(ctx.prop.num(Prop.SERVERPORT)),this);
  ports.addKeyListener(keys);
  portc=new BaseXTextField(Integer.toString(ctx.prop.num(Prop.PORT)),this);
  portc.addKeyListener(keys);
  loguser=new BaseXTextField(gui.prop.get(GUIProp.SERVERUSER),this);
  loguser.addKeyListener(keys);
  logpass=new JPasswordField(gui.prop.get(GUIProp.SERVERPASS));
  logpass.addKeyListener(keys);
  BaseXLayout.setWidth(logpass,BaseXTextField.TWIDTH);
  info=new BaseXLabel(" ");
  info.setBorder(8,0,0,0);
  final BaseXBack p1=new BaseXBack();
  p1.setLayout(new TableLayout(2,2,8,2));
  p1.setBorder(8,0,8,0);
  p1.add(new BaseXLabel(PORT + COLS));
  p1.add(ports);
  final BaseXBack p11=new BaseXBack();
  p11.setLayout(new TableLayout(1,2,2,2));
  p11.add(start);
  p11.add(stop);
  p1.add(new BaseXLabel(" "));
  p1.add(p11);
  final BaseXBack p2=new BaseXBack();
  p2.setLayout(new TableLayout(5,2,8,2));
  p2.add(new BaseXLabel(SERVERUSER + COLS));
  p2.add(loguser);
  p2.add(new BaseXLabel(SERVERPW + COLS));
  p2.add(logpass);
  p2.add(new BaseXLabel(HOST + COLS));
  p2.add(host);
  p2.add(new BaseXLabel(PORT + COLS));
  p2.add(portc);
  p2.add(new BaseXLabel(" "));
  final BaseXBack p21=new BaseXBack();
  p21.setLayout(new TableLayout(1,2,2,2));
  p21.add(connect);
  p21.add(disconnect);
  p2.add(p21);
  conn.add(p1);
  TitledBorder b=new TitledBorder(LOCALSERVER + COLS);
  b.setTitleColor(Color.black);
  p1.setBorder(b);
  conn.add(p2);
  TitledBorder b2=new TitledBorder(LOGIN + " to local or remote Server" + COLS);
  b2.setTitleColor(Color.black);
  p2.setBorder(b2);
  conn.add(info);
  sess.setLayout(new TableLayout(4,1,2,2));
  sess.setBorder(8,8,8,8);
  final BaseXBack ses=new BaseXBack();
  ses.setLayout(new TableLayout(2,1,2,2));
  ses.add(new BaseXLabel(SESSIONS + COLS,false,true));
  sese=new BaseXText(false,this);
  sese.setFont(getFont());
  sese.setBorder(new EmptyBorder(5,5,5,5));
  BaseXLayout.setWidth(sese,420);
  BaseXLayout.setHeight(sese,100);
  ses.add(sese);
  sess.add(ses);
  sess.add(new BaseXLabel("  "));
  final BaseXBack dbs=new BaseXBack();
  dbs.setLayout(new TableLayout(2,1,2,2));
  sedb=new BaseXText(false,this);
  sedb.setFont(getFont());
  sedb.setBorder(new EmptyBorder(5,5,5,5));
  BaseXLayout.setWidth(sedb,420);
  BaseXLayout.setHeight(sedb,100);
  dbs.add(new BaseXLabel(DATABASES + COLS,false,true));
  dbs.add(sedb);
  sess.add(dbs);
  sess.add(refreshSess);
  logs.setLayout(new BorderLayout());
  logs.setBorder(8,8,8,8);
  delete=new BaseXButton(BUTTONDELETE,this);
  deleteAll=new BaseXButton(BUTTONDELALL,this);
  logc=new BaseXCombo(true,new String[]{},this);
  logt=new BaseXText(false,this);
  logt.setFont(getFont());
  logt.setBorder(new EmptyBorder(5,5,5,5));
  info2=new BaseXLabel(" ");
  info2.setBorder(8,0,0,0);
  refreshLog=new BaseXButton(BUTTONREFRESH,this);
  final BaseXBack pl=new BaseXBack();
  pl.setLayout(new BorderLayout());
  final BaseXBack pl1=new BaseXBack();
  pl1.add(logc);
  pl1.add(delete);
  pl1.add(deleteAll);
  pl.add(pl1,BorderLayout.WEST);
  logs.add(pl,BorderLayout.NORTH);
  logs.add(logt,BorderLayout.CENTER);
  final BaseXBack pl2=new BaseXBack();
  pl2.setLayout(new BorderLayout(8,0));
  pl2.add(info2,BorderLayout.WEST);
  pl2.add(refreshLog,BorderLayout.EAST);
  logs.add(pl2,BorderLayout.SOUTH);
  set(tabs,BorderLayout.CENTER);
  running=ping(true);
  tabs.addChangeListener(new ChangeListener(){
    public void stateChanged(    final ChangeEvent evt){
      final BaseXTabs pane=(BaseXTabs)evt.getSource();
      tab=pane.getSelectedIndex();
      final Object o=pane.getSelectedComponent();
      if (o == logs)       refreshLog();
    }
  }
);
  action(null);
  setResizable(true);
  finish(null);
}
