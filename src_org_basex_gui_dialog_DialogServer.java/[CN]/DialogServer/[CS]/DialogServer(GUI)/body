{
  super(main,"Server...");
  final BaseXTabs tabs=new BaseXTabs(this);
  final BaseXBack p1=new BaseXBack();
  p1.setLayout(new TableLayout(3,1));
  final BaseXBack p2=new BaseXBack();
  p2.setLayout(new TableLayout(3,1));
  p2.setBorder(8,8,8,8);
  tabs.add("Server...",p1);
  tabs.add("Users...",p2);
  final BaseXBack p11=new BaseXBack();
  p11.setLayout(new TableLayout(1,3));
  final BaseXButton start=new BaseXButton("Start server...",null,this);
  final BaseXButton stop=new BaseXButton("Stop server",null,this);
  final BaseXTextField host=new BaseXTextField(ctx.prop.get(Prop.HOST),null,this);
  final BaseXTextField port=new BaseXTextField(String.valueOf(ctx.prop.num(Prop.PORT)),null,this);
  final BaseXButton change=new BaseXButton("Change",null,this);
  try {
    cs=new ClientSession(ctx,ADMIN,ADMIN);
    start.setEnabled(false);
    host.setEnabled(false);
    port.setEnabled(false);
    change.setEnabled(false);
  }
 catch (  final IOException e1) {
    stop.setEnabled(false);
    tabs.setEnabledAt(1,false);
  }
  start.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      stop.setEnabled(true);
      start.setEnabled(false);
      start.setEnabled(false);
      host.setEnabled(false);
      port.setEnabled(false);
      change.setEnabled(false);
      tabs.setEnabledAt(1,true);
      startServer();
    }
  }
);
  stop.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      stop.setEnabled(false);
      start.setEnabled(true);
      host.setEnabled(true);
      port.setEnabled(true);
      change.setEnabled(true);
      tabs.setEnabledAt(1,false);
      try {
        cs.execute(new IntStop(),null);
      }
 catch (      final IOException e1) {
        e1.printStackTrace();
      }
    }
  }
);
  p11.add(start);
  p11.add(new BaseXLabel("        "));
  p11.add(stop);
  final BaseXBack p12=new BaseXBack();
  p12.setLayout(new TableLayout(3,2));
  p12.add(new BaseXLabel("Port:"));
  p12.add(port);
  p12.add(new BaseXLabel("Host:"));
  p12.add(host);
  p12.add(new BaseXLabel("        "));
  change.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      ctx.prop.set(Prop.HOST,host.getText());
      int p=ctx.prop.num(Prop.PORT);
      try {
        p=Integer.parseInt(port.getText());
        ctx.prop.set(Prop.PORT,p);
      }
 catch (      final NumberFormatException n) {
        port.setText(String.valueOf(p));
      }
    }
  }
);
  p12.add(change);
  p12.setBorder(8,8,8,8);
  p11.setBorder(8,8,8,8);
  final BaseXBack p21=new BaseXBack();
  p21.setLayout(new TableLayout(4,5,6,0));
  p21.add(new BaseXLabel("Create User:",false,true));
  p21.add(new BaseXLabel(""));
  p21.add(new BaseXLabel(""));
  p21.add(new BaseXLabel(""));
  p21.add(new BaseXLabel(""));
  p21.add(new BaseXLabel("Username:"));
  final BaseXTextField user=new BaseXTextField("",null,this);
  p21.add(user);
  p21.add(new BaseXLabel("Password:"));
  final JPasswordField pass=new JPasswordField(10);
  final JTable table=new JTable(new TableModel());
  final JScrollPane scrollPane=new JScrollPane(table);
  final BaseXCombo userco=new BaseXCombo(usernames,null,this);
  p21.add(pass);
  final BaseXButton create=new BaseXButton("Create User",null,this);
  final BaseXButton delete=new BaseXButton("Drop User",null,this);
  create.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      fillLists();
    }
  }
);
  p21.add(create);
  final BaseXBack p22=new BaseXBack();
  p22.setLayout(new TableLayout(2,2,6,0));
  p22.add(new BaseXLabel("Drop User:",false,true));
  p22.add(new BaseXLabel(""));
  delete.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      final String test=(String)userco.getSelectedItem();
      ctx.users.drop(test);
      userco.removeItem(test);
      ((TableModel)table.getModel()).setData();
      if (usernames.length == 0)       delete.setEnabled(false);
    }
  }
);
  p22.add(userco);
  p22.add(delete);
  final BaseXBack p23=new BaseXBack();
  p23.setLayout(new TableLayout(5,1,6,0));
  p23.add(new BaseXLabel("                      "));
  p23.add(new BaseXLabel("User rights management:",false,true));
  table.setPreferredScrollableViewportSize(new Dimension(500,70));
  table.setFillsViewportHeight(true);
  p23.add(scrollPane);
  final BaseXButton save=new BaseXButton("Save",null,this);
  save.addActionListener(new ActionListener(){
    public void actionPerformed(    final ActionEvent e){
      ((TableModel)table.getModel()).setData();
    }
  }
);
  p23.add(save);
  p2.add(p21);
  p2.add(p22);
  p2.add(p23);
  p1.add(p11);
  p1.add(p12);
  set(tabs,BorderLayout.CENTER);
  finish(null);
}
