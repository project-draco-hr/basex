{
  super(main,GUISERVER);
  databases.setBorder(8,8,8,8);
  tabs=new BaseXTabs(this);
  tabs.add(CONNECT,conn);
  tabs.add(USERS,user);
  tabs.add(DATABASES,databases);
  tabs.add(SESSIONS,sess);
  tabs.add(LOGS,logs);
  conn.setLayout(new BorderLayout(0,32));
  conn.setBorder(8,8,8,8);
  start=new BaseXButton(BUTTONSTART,this);
  stop=new BaseXButton(BUTTONSTOP,this);
  connect=new BaseXButton(BUTTONCONNECT,this);
  disconnect=new BaseXButton(BUTTONDISCONNECT,this);
  host=new BaseXTextField(ctx.prop.get(Prop.HOST),this);
  host.addKeyListener(keys);
  ports=new BaseXTextField(Integer.toString(ctx.prop.num(Prop.SERVERPORT)),this);
  ports.addKeyListener(keys);
  portc=new BaseXTextField(Integer.toString(ctx.prop.num(Prop.PORT)),this);
  portc.addKeyListener(keys);
  loguser=new BaseXTextField(gui.prop.get(GUIProp.SERVERUSER),this);
  loguser.addKeyListener(keys);
  logpass=new BaseXPassword(main);
  logpass.addKeyListener(keys);
  infoC=new BaseXLabel(" ");
  infoC.setBorder(8,0,0,0);
  BaseXBack p=new BaseXBack();
  p.setLayout(new TableLayout(6,1,0,0));
  p.add(new BaseXLabel(LOCALSERVER + COLS,true,true));
  BaseXBack pp=new BaseXBack();
  pp.setLayout(new TableLayout(2,2,8,4));
  pp.setBorder(0,0,0,0);
  pp.add(new BaseXLabel(PORT + COLS));
  pp.add(ports);
  pp.add(new BaseXLabel(" "));
  BaseXBack ppp=new BaseXBack();
  ppp.setLayout(new TableLayout(1,2,5,0));
  ppp.add(start);
  ppp.add(stop);
  pp.add(ppp);
  p.add(pp);
  p.add(new BaseXLabel(" ",true,true));
  p.add(new BaseXLabel(ADMINLOGIN + COLS,true,true));
  pp=new BaseXBack();
  pp.setLayout(new TableLayout(5,2,8,4));
  pp.add(new BaseXLabel(SERVERUSER + COLS));
  pp.add(loguser);
  pp.add(new BaseXLabel(SERVERPW + COLS));
  pp.add(logpass);
  pp.add(new BaseXLabel(HOST + COLS));
  pp.add(host);
  pp.add(new BaseXLabel(PORT + COLS));
  pp.add(portc);
  pp.add(new BaseXLabel(" "));
  ppp=new BaseXBack();
  ppp.setLayout(new TableLayout(1,2,5,0));
  ppp.add(connect);
  ppp.add(disconnect);
  pp.add(ppp);
  p.add(pp);
  p.add(infoC);
  conn.add(p,BorderLayout.CENTER);
  p=new BaseXBack();
  p.setLayout(new TableLayout(2,1));
  BaseXLabel l=new BaseXLabel(SERVERINFO1);
  l.setForeground(GUIConstants.COLORDARK);
  p.add(l);
  l=new BaseXLabel(SERVERINFO2);
  l.setForeground(GUIConstants.COLORDARK);
  p.add(l);
  conn.add(p,BorderLayout.SOUTH);
  sess.setLayout(new BorderLayout());
  sess.setBorder(8,8,8,8);
  sese=new BaseXText(false,this);
  sese.setFont(start.getFont());
  sese.setBorder(new EmptyBorder(5,5,5,5));
  sedb=new BaseXText(false,this);
  sedb.setFont(start.getFont());
  sedb.setBorder(new EmptyBorder(5,5,5,5));
  refreshSess=new BaseXButton(BUTTONREFRESH,this);
  p=new BaseXBack();
  p.setLayout(new GridLayout(2,1,0,2));
  pp=new BaseXBack();
  pp.setLayout(new BorderLayout());
  pp.add(new BaseXLabel(SESSIONS + COLS,false,true),BorderLayout.NORTH);
  pp.add(sese,BorderLayout.CENTER);
  p.add(pp);
  pp=new BaseXBack();
  pp.setLayout(new BorderLayout());
  pp.add(new BaseXLabel(DATABASES + COLS,false,true),BorderLayout.NORTH);
  pp.add(sedb,BorderLayout.CENTER);
  p.add(pp);
  sess.add(p,BorderLayout.CENTER);
  p=new BaseXBack();
  p.setLayout(new BorderLayout(0,0));
  p.add(refreshSess,BorderLayout.EAST);
  sess.add(p,BorderLayout.SOUTH);
  logs.setLayout(new BorderLayout());
  logs.setBorder(8,8,8,8);
  delete=new BaseXButton(BUTTONDELETE,this);
  deleteAll=new BaseXButton(BUTTONDELALL,this);
  logc=new BaseXCombo(true,new String[]{},this);
  logt=new BaseXText(false,this);
  logt.setFont(start.getFont());
  logt.setBorder(new EmptyBorder(5,5,5,5));
  infoL=new BaseXLabel(" ");
  infoL.setBorder(8,0,0,0);
  refreshLog=new BaseXButton(BUTTONREFRESH,this);
  p=new BaseXBack();
  p.setLayout(new BorderLayout());
  pp=new BaseXBack();
  pp.add(logc);
  pp.add(delete);
  pp.add(deleteAll);
  p.add(pp,BorderLayout.WEST);
  logs.add(p,BorderLayout.NORTH);
  logs.add(logt,BorderLayout.CENTER);
  p=new BaseXBack();
  p.setLayout(new BorderLayout(8,0));
  p.add(infoL,BorderLayout.WEST);
  p.add(refreshLog,BorderLayout.EAST);
  logs.add(p,BorderLayout.SOUTH);
  set(tabs,BorderLayout.CENTER);
  running=ping(true);
  tabs.addChangeListener(new ChangeListener(){
    public void stateChanged(    final ChangeEvent evt){
      final BaseXTabs pane=(BaseXTabs)evt.getSource();
      tab=pane.getSelectedIndex();
      final Object o=pane.getSelectedComponent();
      if (o == logs)       refreshLog();
      if (o == user)       action(user);
      if (o == databases)       action(dbsP);
      if (o == sess)       action(refreshSess);
    }
  }
);
  refreshLog();
  action(null);
  setResizable(true);
  finish(null);
}
