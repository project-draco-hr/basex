{
  final int[] parent=new int[256];
  final byte[][] token=new byte[256][];
  int l=0;
  int p=pr;
  final int s=pr + data.size(pr,data.kind(pr));
  while (p < s) {
    if (finished())     return s;
    final int k=data.kind(p);
    final int pa=data.parent(p,k);
    while (l > 0 && parent[l - 1] >= pa)     closeElement(token[--l]);
    if (k == Data.DOC) {
      p++;
    }
 else     if (k == Data.TEXT) {
      text(data.text(p++));
    }
 else     if (k == Data.COMM) {
      comment(data.text(p++));
    }
 else     if (k == Data.PI) {
      pi(data.text(p++));
    }
 else {
      final byte[] name=data.tag(p);
      startElement(name);
      final int ps=p + data.size(p,k);
      final int as=p + data.attSize(p,k);
      while (++p != as)       attribute(data.attName(p),data.attValue(p));
      if (p == ps) {
        emptyElement();
      }
 else {
        finishElement();
        token[l]=name;
        parent[l++]=pa;
      }
    }
  }
  while (l > 0)   closeElement(token[--l]);
  return p;
}
