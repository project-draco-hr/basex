{
  final double ffmax=0.25;
  final double ffmin=0.14;
  final double ffhmax=0.5;
  final double flhmax=0.3;
  double sw;
  double ff=ffmax, ffh=ffhmax, flh=flhmax;
  int lhmi=(int)Math.max(3,ffh * GUIProp.fontsize);
  int fhmi=(int)Math.max(6,(flh + ffh) * GUIProp.fontsize);
  int h=r.h;
  final double fac=Math.exp(Math.log(s.length) * 0.97) / s.length;
  double f=ff * GUIProp.fontsize;
  int fh, lh, al=0;
  FTTokenizer ftt=new FTTokenizer(s);
  final int[][] data=ftt.getInfo();
  while (al < 4) {
    ff*=fac;
    f=ff * GUIProp.fontsize;
    ffh*=fac;
    fh=(int)Math.max(1,ffh * GUIProp.fontsize);
    flh*=fac * fac;
    lh=(int)Math.max(1,(flh + ffh) * GUIProp.fontsize);
    sw=f;
switch (al) {
case 0:
      h=drawThumbnailsToken(g,r,data,f,fh,lh,f,false);
    break;
case 1:
  h=drawThumbnailsSentence(g,r,data,true,f,fh,lh,sw,false);
break;
case 2:
h=drawThumbnailsSentence(g,r,data,false,f,fh,lh,sw,false);
break;
}
if (ff < ffmin) {
al++;
fhmi=fh;
lhmi=lh;
ff=ffmax;
ffh=ffhmax;
flh=flhmax;
}
 else if (h < r.h) {
switch (al) {
case 0:
drawThumbnailsToken(g,r,data,f,fh,lh,f,true);
return;
case 1:
drawThumbnailsSentence(g,r,data,true,f,fh,lh,sw,true);
return;
case 2:
drawThumbnailsSentence(g,r,data,false,f,fh,lh,sw,true);
return;
}
}
}
int sum=data[1].length + data[2][0];
for (int i=1; i < data[2].length; i++) sum+=data[2][i];
int nl=(r.h - 3) / lhmi;
double fnew=(double)(nl * r.w) / (double)sum;
drawThumbnailsSentence(g,r,data,false,fnew,fhmi,lhmi,Math.max(1.5,fnew),true);
}
