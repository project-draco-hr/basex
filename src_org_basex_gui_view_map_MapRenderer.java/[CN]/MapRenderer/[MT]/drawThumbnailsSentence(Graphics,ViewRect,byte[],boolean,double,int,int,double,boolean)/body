{
  final double xx=r.x;
  final double ww=r.w;
  final int ys=r.y + 3;
  int yy=ys;
  int wl=0;
  int ll=0;
  final FTTokenizer ftt=new FTTokenizer(s);
  final Color textc=sen && fh == lh ? g.getColor() : GUIConstants.COLORS[6];
  int count=-1;
  int pp=0;
  int cp=0;
  int cs=0;
  boolean m=ftt.more();
  int lastl=0;
  while (m) {
    while (ll + wl < ww && (cs == ftt.sent && sen || cp == ftt.para && !sen) && (r.pos == null || (pp < r.pos.length && count < r.pos[pp]) || pp == r.pos.length)) {
      lastl=(int)((ftt.p - ftt.s) * f);
      wl+=lastl;
      count++;
      m=ftt.more();
      if (!m)       break;
    }
    if (ll + wl >= ww) {
      final int fp=(int)(ww - ll);
      if (fp <= f) {
        yy+=lh;
        ll=0;
      }
 else {
        final int sp=wl - fp;
        g.setColor(textc);
        if (draw)         g.fillRect((int)(xx + ll),yy,(int)(fp - f),fh);
        ll+=fp - f;
        if (draw) {
          g.setColor(new Color(0,0,0));
          g.fillRect((int)(xx + ll),yy,(int)f,fh);
          g.setColor(textc);
        }
        yy+=lh;
        ll=0;
        if (draw) {
          g.setColor(new Color(0,0,0));
          g.fillRect((int)xx,yy,(int)f,fh);
          g.setColor(textc);
        }
        wl=sp;
        ll=(int)f;
      }
    }
    if (r.pos != null && pp < r.pos.length && count == r.pos[pp]) {
      if (lastl > 0) {
        if (draw)         g.fillRect((int)(xx + ll),yy,wl - lastl,fh);
        ll+=wl - lastl;
        wl=lastl;
      }
      if (draw)       g.setColor(thumbnailcolor[r.poi[pp]]);
      pp++;
    }
    if (wl + ll < ww) {
      if (draw) {
        g.fillRect((int)(xx + ll),yy,wl,fh);
        g.setColor(textc);
      }
      ll+=wl;
      wl=0;
    }
    if (cs < ftt.sent && sen || cp < ftt.para && !sen) {
      if (sen) {
        ll+=sw;
        cs=ftt.sent;
      }
      if (cp < ftt.para) {
        cp=ftt.para;
        yy+=lh;
        wl=0;
        ll=0;
      }
    }
  }
  return yy - r.y;
}
