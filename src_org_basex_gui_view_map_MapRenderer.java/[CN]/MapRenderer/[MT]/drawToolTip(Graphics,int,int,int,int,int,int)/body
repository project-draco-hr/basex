{
  if (tl != null && tl.size > 0) {
    final int[] cw=fontWidths(g.getFont());
    final int sw=BaseXLayout.width(g,cw,' ');
    int wl=0;
    int l;
    int nl=1;
    int wi=rw / 2;
    IntList len=new IntList();
    for (int i=0; i < tl.size; i++) {
      l=0;
      for (int n=0; n < tl.list[i].length; n+=cl(tl.list[i][n])) {
        l+=BaseXLayout.width(g,cw,cp(tl.list[i],n));
      }
      if (wl + l + sw < wi)       wl+=l + sw;
 else {
        nl++;
        if (l > wi)         wi=l;
        wl=l + sw;
      }
      len.add(l);
    }
    final int ww=nl == 1 && wl < wi ? wl : wi;
    int xx=x + 10 + ww >= rx + rw ? rx + rw - ww - 2 : x + 10;
    int yy=y + 28 + GUIProp.fontsize * nl + 4 < ry + rh ? y + 28 : y - GUIProp.fontsize * nl;
    g.setColor(COLORS[12]);
    g.drawRect(xx - 3,yy - GUIProp.fontsize - 1,ww + 3,GUIProp.fontsize * nl + 7);
    g.setColor(COLORS[0]);
    g.fillRect(xx - 2,yy - GUIProp.fontsize,ww + 2,GUIProp.fontsize * nl + 6);
    g.setColor(COLORS[24]);
    wl=0;
    for (int i=0; i < tl.size; i++) {
      l=len.list[i];
      if (wl + l + sw >= wi) {
        yy+=GUIProp.fontsize + 1;
        wl=0;
      }
      final boolean pm=!Character.isLetterOrDigit(tl.list[i][tl.list[i].length - 1]);
      if (ttcol.list[i] > -1) {
        g.setColor(COLORFT);
        g.drawString(string(tl.list[i]),xx + wl,yy);
        if (ul > -1 && i == ul)         g.drawLine(xx + wl,yy + 1,xx + wl + l,yy + 1);
        g.setColor(Color.black);
        wl+=l;
      }
 else {
        g.drawString(string(tl.list[i]),xx + wl,yy);
        if (ul > -1 && i == ul)         g.drawLine(xx + wl,yy + 1,xx + wl + (pm ? l - sw : l),yy + 1);
        wl+=l;
      }
      wl+=sw;
    }
  }
}
