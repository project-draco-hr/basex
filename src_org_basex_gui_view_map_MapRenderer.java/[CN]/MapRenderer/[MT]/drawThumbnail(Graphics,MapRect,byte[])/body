{
  final double ffmax=0.25;
  final double ffmin=0.14;
  final double ffhmax=0.5;
  final double flhmax=0.3;
  double ff=ffmax, ffh=ffhmax, flh=flhmax;
  byte lhmi=(byte)Math.max(3,ffh * GUIProp.fontsize);
  byte fhmi=(byte)Math.max(6,(flh + ffh) * GUIProp.fontsize);
  int h=r.h;
  final double fac=Math.exp(Math.log(s.length) * 0.97) / s.length;
  r.thumbf=ff * GUIProp.fontsize;
  r.thumbal=0;
  FTTokenizer ftt=new FTTokenizer(s);
  final int[][] data=ftt.getInfo();
  while (r.thumbal < 4) {
    ff*=fac;
    r.thumbf=ff * GUIProp.fontsize;
    ffh*=fac;
    r.thumbfh=(byte)Math.max(1,ffh * GUIProp.fontsize);
    flh*=fac * fac;
    r.thumblh=(byte)Math.max(1,(flh + ffh) * GUIProp.fontsize);
switch (r.thumbal) {
case 0:
      h=drawThumbnailsToken(g,r,data,false,0,0);
    break;
case 1:
  h=drawThumbnailsSentence(g,r,data,true,r.thumbf,false);
break;
case 2:
h=drawThumbnailsSentence(g,r,data,false,r.thumbf,false);
break;
}
if (ff < ffmin) {
r.thumbal++;
fhmi=r.thumbfh;
lhmi=r.thumblh;
ff=ffmax;
ffh=ffhmax;
flh=flhmax;
}
 else if (h < r.h) {
r.thumbal=r.thumbal;
switch (r.thumbal) {
case 0:
drawThumbnailsToken(g,r,data,true,0,0);
return;
case 1:
drawThumbnailsSentence(g,r,data,true,r.thumbf,true);
return;
case 2:
drawThumbnailsSentence(g,r,data,false,r.thumbf,true);
return;
}
}
 else r.thumbal++;
}
int sum=data[2][0];
for (int i=1; i < data[2].length; i++) sum+=data[2][i];
int nl=(r.h - 6) / lhmi + 1;
double fnew=(double)(nl * r.w) / (double)sum;
r.thumbf=fnew;
r.thumbfh=fhmi;
r.thumblh=lhmi;
h=drawThumbnailsSentence(g,r,data,false,Math.max(1.5,fnew),false);
if (h < r.h) drawThumbnailsSentence(g,r,data,false,Math.max(1.5,fnew),true);
}
