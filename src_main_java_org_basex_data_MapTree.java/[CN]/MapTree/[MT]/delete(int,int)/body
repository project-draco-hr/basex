{
  searchPreTree(pre,-1);
  if (id == current.idmin && id == current.idmax) {
    current.d=Integer.MIN_VALUE;
    current.s-=1;
    deletePreTree(current);
  }
 else   if (id == current.idmin) {
    MapNode node=new MapNode();
    current.idmin=id + 1;
    current.s-=1;
    node.idmin=id;
    node.idmax=id;
    node.d=Integer.MIN_VALUE;
    insertIdTree(node);
  }
 else {
    MapNode split=new MapNode();
    MapNode node=new MapNode();
    split.idmin=id + 1;
    split.idmax=current.idmax;
    split.d=current.d;
    split.s=-1;
    current.idmax=id - 1;
    node.idmin=id;
    node.idmax=id;
    node.d=Integer.MIN_VALUE;
    insertPreTree(split);
    insertIdTree(split);
    insertIdTree(node);
  }
}
