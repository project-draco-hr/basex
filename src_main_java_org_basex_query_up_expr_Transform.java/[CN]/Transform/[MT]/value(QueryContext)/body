{
  final int s=ctx.vars.size();
  final int o=(int)ctx.output.size();
  final ContextModifier tmp=ctx.updates.mod;
  final TransformModifier pu=new TransformModifier();
  ctx.updates.mod=pu;
  try {
    for (    final Let fo : copies) {
      final Iter ir=ctx.iter(fo.expr);
      Item i=ir.next();
      if (!(i instanceof ANode) || ir.next() != null)       UPCOPYMULT.thrw(info);
      i=((ANode)i).dbCopy(ctx.context.prop);
      ctx.vars.add(fo.var.bind(i,ctx).copy());
      pu.addData(i.data());
    }
    ctx.value(expr[0]);
    ctx.updates.apply();
    return ctx.value(expr[1]);
  }
  finally {
    ctx.vars.size(s);
    ctx.output.size(o);
    ctx.updates.mod=tmp;
  }
}
