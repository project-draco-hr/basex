{
  final Iter t=ctx.iter(expr[0]);
  final Item i=t.next();
  if (i == null)   throw UPSEQEMP.thrw(info,Util.name(this));
  if (t.next() != null)   UPWRTRGTYP.thrw(info);
  final CFrag ex;
  if (i.type == NodeType.ELM) {
    ex=new CElem(info,expr[1],null);
  }
 else   if (i.type == NodeType.ATT) {
    ex=new CAttr(info,false,expr[1],Empty.SEQ);
  }
 else   if (i.type == NodeType.PI) {
    ex=new CPI(info,expr[1],Empty.SEQ);
  }
 else {
    throw UPWRTRGTYP.thrw(info);
  }
  final QNm rename=ex.item(ctx,info).qname();
  final ANode targ=(ANode)i;
  if (targ.type == NodeType.ELM || targ.type == NodeType.ATT) {
    final byte[] rp=rename.prefix();
    final byte[] ru=rename.uri();
    final Atts at=targ.nsScope();
    final int as=at.size();
    for (int a=0; a < as; a++) {
      if (eq(at.name(a),rp) && !eq(at.string(a),ru))       UPNSCONFL.thrw(info);
    }
  }
  final DBNode dbn=ctx.updates.determineDataRef(targ,ctx);
  ctx.updates.add(new RenameNode(dbn.pre,dbn.data,info,rename),ctx);
  return null;
}
