{
  final Color col=isEnabled() ? syntax.getColor(word) : Color.gray;
  if (y > 0 && y < h) {
    if (text.error()) {
      g.setColor(GUIConstants.COLORERRHIGH);
      g.fillRect(x,y - fontH + 4,wordW,fontH);
    }
    int xx=x;
    if (text.markStart()) {
      final int p=text.pos();
      for (int c=0; c < word.length(); c++) {
        final int cw=charW(g,word.charAt(c));
        if (text.marked()) {
          g.setColor(GUIConstants.COLORS[3]);
          g.fillRect(xx,y - fontH + 4,cw,fontH);
        }
        xx+=cw;
        text.next();
      }
      text.pos(p);
    }
    final int ch=word.length() > 0 ? word.charAt(0) : 0;
    if (ch > ' ') {
      g.setColor(col);
      g.drawString(word,x,y);
    }
 else     if (ch < 0x04) {
      g.setFont(font);
    }
    if (cursor && text.edited()) {
      xx=x;
      for (int c=0; c < word.length(); c++) {
        if (text.cursor() == text.pos() + c) {
          g.setColor(Color.black);
          g.drawLine(xx,y - fontH + 4,xx,y + 3);
          break;
        }
        xx+=charW(g,word.charAt(c));
      }
    }
  }
  next();
}
