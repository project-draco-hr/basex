{
  if (high) {
    high=false;
  }
 else {
    col=isEnabled() ? syntax.getColor(text) : Color.gray;
  }
  final int ch=text.curr();
  if (y > 0 && y < h) {
    if (ch == 0x10) {
      col=GUIConstants.COLORFT;
      high=true;
    }
    if (text.error()) {
      g.setColor(GUIConstants.COLORERRHIGH);
      g.fillRect(x,y - fontH + 4,wordW,fontH);
    }
    int xx=x;
    if (text.markStart()) {
      final int p=text.pos();
      while (text.more()) {
        final int cw=charW(g,text.curr());
        if (text.marked()) {
          g.setColor(GUIConstants.COLORS[3]);
          g.fillRect(xx,y - fontH + 4,cw,fontH);
        }
        xx+=cw;
        text.next();
      }
      text.pos(p);
    }
    if (search != null && searched()) {
      int cw=0;
      for (int c=0; c < search.length(); c++) {
        cw+=charW(g,search.charAt(c));
      }
      g.setColor(GUIConstants.COLORS[text.cursor() == text.pos() ? 5 : 2]);
      g.fillRect(x,y - fontH + 4,cw,fontH);
    }
    if (ch > ' ') {
      g.setColor(col);
      g.drawString(text.nextWord(),x,y);
    }
 else     if (ch < 0x04) {
      g.setFont(font);
    }
    if (cursor && text.edited()) {
      xx=x;
      final int p=text.pos();
      while (text.more()) {
        if (text.cursor() == text.pos()) {
          cursor(g,xx);
          break;
        }
        xx+=charW(g,text.next());
      }
      text.pos(p);
    }
  }
  next();
}
