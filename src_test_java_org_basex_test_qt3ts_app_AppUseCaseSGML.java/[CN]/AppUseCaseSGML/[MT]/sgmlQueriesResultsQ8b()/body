{
  final XQuery query=new XQuery("<result> { //section[.//title/text()[contains(., \"is SGML\")]] } </result>",ctx);
  query.context(node(file("docs/sgml.xml")));
  final QT3Result res=result(query);
  result=res;
  test((assertSerialization("<result><section shorttitle=\"How does SGML work?\">\n <title>How is SGML and would you recommend it to your grandmother?</title>\n <intro>\n <para>You can break a typical document into three layers: structure,\n content, and style. SGML works by separating these three aspects and\n deals mainly with the relationship between structure and content.</para></intro>\n <topic topicid=\"top4\">\n <title>Structure</title>\n <para>At the heart of an SGML application is a file called the DTD, or\n Document Type Definition. The DTD sets up the structure of a document,\n much like a database schema describes the types of information it\n handles.</para>\n <para>A database schema also defines the relationships between the\n various types of data. Similarly, a DTD specifies <emph>rules</emph>\n to help ensure documents have a consistent, logical structure.</para></topic>\n <topic topicid=\"top5\">\n <title>Content</title>\n <para>Content is the information itself. The method for identifying\n the information and its meaning within this framework is called\n <emph>tagging</emph>. Tagging must\n conform to the rules established in the DTD (see <xref xrefid=\"top4\"/>).</para>\n <graphic graphname=\"tagexamp\"/></topic>\n <topic topicid=\"top6\">\n <title>Style</title>\n <para>SGML does not standardize style or other processing methods for\n information stored in SGML.</para></topic></section></result>",false) || error("XPST0005")));
}
