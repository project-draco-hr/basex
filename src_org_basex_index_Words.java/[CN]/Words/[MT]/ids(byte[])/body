{
  byte[][] tmpids=new byte[1][];
  int s=0;
  init(tok);
  while (parse()) {
    final int id=get();
    if (id == 0)     return Array.NOINTS;
    if (s == tmpids.length)     tmpids=Array.extend(tmpids);
    tmpids[s++]=idxl.readToken(idxi.read4(id));
  }
  if (s == 0)   return Array.NOINTS;
  final Num[] nums=new Num[s];
  for (int n=0; n < s; n++)   nums[n]=new Num(tmpids[n],true);
  final IntList hits=new IntList();
  while (nums[0].more()) {
    int id1=nums[0].id();
    int pos1=nums[0].pos();
    nums[0].next();
    int p=1;
    boolean more=false;
    boolean found=true;
    while (p < nums.length && nums[p].more()) {
      found=false;
      final int id2=nums[p].id();
      if (id1 > id2) {
        nums[p].next();
        continue;
      }
      if (id1 < id2) {
        more=true;
        break;
      }
      final int pos2=nums[p].pos();
      if (pos1 + 1 > pos2) {
        nums[p].next();
        continue;
      }
      if (pos1 + 1 < pos2) {
        more=true;
        break;
      }
      id1=id2;
      pos1=pos2;
      more=true;
      found=++p == nums.length;
    }
    if (found)     hits.add(id1);
 else     if (!more)     break;
  }
  return hits.finish();
}
