{
  if (iai1 == EMP)   return iai2;
  if (iai2 == EMP)   return iai1;
  return new IndexArrayIterator(1){
    FTNode[] n=new FTNode[2];
    FTNode r;
    int c=-1;
    @Override public boolean more(){
      r=null;
      n[0]=c == 0 || c == -1 ? iai1.more() ? iai1.nextFTNode() : null : n[0];
      n[1]=c == 1 || c == -1 ? iai2.more() ? iai2.nextFTNode() : null : n[1];
      if (n[0] != null && n[1] != null) {
        final int dis=n[0].getPre() - n[1].getPre();
        if (dis < 0) {
          c=0;
          return more();
        }
 else         if (dis > 0) {
          c=1;
          return more();
        }
 else {
          c=-1;
          if (n[0].merge(n[1],w)) {
            n[0].reset();
            r=n[0];
            return true;
          }
 else {
            return more();
          }
        }
      }
      return false;
    }
    @Override public FTNode nextFTNode(){
      return r;
    }
    @Override public int next(){
      return r.getPre();
    }
    @Override public void setTokenNum(    final int t){
      iai1.setTokenNum(t);
      iai2.setTokenNum(t);
    }
    @Override public void setToken(    final FTTokenizer[] token){
      iai1.setToken(token);
      iai2.setToken(token);
    }
  }
;
}
