{
  final StringList o=tempOpts;
  for (int s=0; s < o.size(); s+=2) {
    try {
      context.options.assign(o.get(s).toUpperCase(Locale.ENGLISH),o.get(s + 1));
    }
 catch (    final BaseXException ex) {
      throw BASX_VALUE.get(null,o.get(s),o.get(s + 1));
    }
  }
  maxCalls=context.options.get(MainOptions.TAILCALLS);
  vars.bindExternal(this,bindings);
  if (ctxItem != null) {
    try {
      ctxItem.compile(this);
      value=ctxItem.value(this);
    }
 catch (    final QueryException ex) {
      if (ex.err() != NOCTX)       throw ex;
      throw CIRCCTX.get(ctxItem.info);
    }
  }
 else   if (nodes != null) {
    if (nodes.ftpos != null)     ftPosData=new FTPosData();
    resource.compile(nodes);
  }
  if (value != null && root.sc.initType != null) {
    value=root.sc.initType.promote(this,root.sc,null,value,true);
  }
  analyze();
  info.runtime=true;
}
