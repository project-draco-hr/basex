{
  final Iter iter=arg.length != 0 ? arg[0] : null;
switch (func) {
case DATA:
    final SeqIter seq=new SeqIter();
  Item it;
while ((it=iter.next()) != null) seq.add(atom(it));
return seq;
case COLLECT:
it=iter != null ? iter.next() : null;
if (iter != null && it == null) Err.empty(this);
return ctx.coll(iter == null ? null : checkStr(it));
case DOC:
it=iter.next();
if (it == null) return Iter.EMPTY;
if (it.type == Type.DOC) return it.iter();
byte[] file=checkStr(it);
if (docName != it) {
docName=it;
doc=ctx.doc(file);
}
return doc.iter();
case DOCAVAIL:
it=iter.next();
if (it == null) return Bln.FALSE.iter();
file=checkStr(it);
try {
ctx.doc(file);
return Bln.TRUE.iter();
}
 catch (final XQException e) {
return Bln.FALSE.iter();
}
default :
BaseX.notexpected(func);
return null;
}
}
