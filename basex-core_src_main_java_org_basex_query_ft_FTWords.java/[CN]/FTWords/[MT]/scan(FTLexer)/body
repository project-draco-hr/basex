{
  final Data data=ictx.data;
  final FTLexer input=new FTLexer(ftt.opt);
  final FTTokens tokens=ftt.cache(lex.get());
  return new FTIndexIterator(){
    int pre=-1, pos;
    @Override public int pre(){
      return pre;
    }
    @Override public boolean more(){
      while (++pre < data.meta.size) {
        if (data.kind(pre) != Data.TEXT)         continue;
        input.init(data.text(pre,true));
        matches.reset(pos);
        try {
          if (ftt.contains(tokens,input) != 0)           return true;
        }
 catch (        final QueryException ignore) {
        }
      }
      return false;
    }
    @Override public FTMatches matches(){
      return matches;
    }
    @Override public void pos(    final int p){
      pos=p;
    }
    @Override public int size(){
      return data.meta.size >>> 1;
    }
  }
;
}
