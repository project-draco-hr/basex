{
  try {
    final Socket s=server.accept();
    final Performance perf=new Performance();
    final DataInputStream dis=new DataInputStream(s.getInputStream());
    final String in=dis.readUTF().trim();
    final InetAddress addr=s.getInetAddress();
    final String ha=addr.getHostAddress();
    final int sp=s.getPort();
    if (verbose)     BaseX.outln("[%:%] %",ha,sp,in);
    Process pr=null;
    try {
      pr=new CommandParser(in,context,true).parse()[0];
    }
 catch (    final QueryException ex) {
      pr=new Process(0){
      }
;
      pr.error(ex.extended());
      add(new BaseXSession(sp,System.nanoTime(),pr));
      send(s,-sp);
      return;
    }
    if (pr instanceof IntStop) {
      send(s,1);
      running=false;
      return;
    }
    final Process proc=pr;
    new Thread(){
      @Override public void run(){
        try {
          if (proc instanceof IntOutput || proc instanceof IntInfo) {
            final OutputStream os=s.getOutputStream();
            final PrintOutput out=new PrintOutput(new BufferedOutput(os),Prop.web ? context.prop.num(Prop.MAXTEXT) : Integer.MAX_VALUE);
            final int id=Math.abs(Integer.parseInt(proc.args().trim()));
            final Process c=get(id);
            if (c == null) {
              out.print(BaseX.info(SERVERTIME,context.prop.num(Prop.TIMEOUT)));
            }
 else             if (proc instanceof IntOutput) {
              c.output(out);
            }
 else             if (proc instanceof IntInfo) {
              c.info(out);
              remove(c);
            }
            out.close();
          }
 else {
            add(new BaseXSession(sp,System.nanoTime(),proc));
            send(s,proc.execute(context) ? sp : -sp);
            if (proc.info().equals(PROGERR))             proc.error(SERVERTIME);
          }
          dis.close();
        }
 catch (        final Exception ex) {
          error(ex,false);
        }
        if (verbose)         BaseX.outln("[%:%] %",ha,sp,perf.getTimer());
      }
    }
.start();
  }
 catch (  final Exception ex) {
    error(ex,false);
  }
}
