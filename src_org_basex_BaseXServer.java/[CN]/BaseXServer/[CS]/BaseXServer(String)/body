{
  Prop.server=true;
  if (!parseArguments(args))   return;
  Runtime.getRuntime().addShutdownHook(new Thread(){
    @Override public void run(){
      for (      final BaseXSession ss : sess)       ss.core.stop();
      Prop.write();
      context.close();
    }
  }
);
  new Thread(){
    @Override public void run(){
      while (running) {
        Performance.sleep(1000);
        clean();
      }
    }
  }
.start();
  try {
    final ServerSocket server=new ServerSocket(Prop.port);
    BaseX.outln(SERVERSTART);
    while (running)     serve(server);
    context.close();
  }
 catch (  final Exception ex) {
    BaseX.debug(ex);
    if (ex instanceof BindException) {
      BaseX.errln(SERVERBIND);
    }
 else     if (ex instanceof IOException) {
      BaseX.errln(SERVERERR);
    }
 else {
      BaseX.errln(ex.getMessage());
    }
  }
}
