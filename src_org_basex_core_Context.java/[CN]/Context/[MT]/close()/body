{
  try {
    if (data != null) {
      final Data d=data;
      data=null;
      current=null;
      marked=null;
      copied=null;
      if (POOL.unpin(d))       d.close();
      if (Prop.mainmem || Prop.onthefly)       Performance.gc(1);
      if (Prop.fuse) {
        final String method="[BaseX.close] ";
        BaseX.debug(method + "Initiating DeepFS shutdown sequence ");
        for (int i=3; i > 0; i--) {
          Performance.sleep(1000);
          BaseX.err(i + " .. ");
        }
        BaseX.debug("GO.");
        final String cmd="umount -f " + d.meta.mountpoint;
        BaseX.errln(method + "Trying to unmount deepfs: " + cmd);
        Runtime r=Runtime.getRuntime();
        java.lang.Process p=r.exec(cmd);
        try {
          p.waitFor();
        }
 catch (        InterruptedException e) {
          e.printStackTrace();
        }
        int rc=p.exitValue();
        String msg=method + "Unmount " + d.meta.mountpoint;
        if (rc == 0)         msg=msg + " ... OK.";
 else         msg=msg + " ... FAILED(" + rc+ ") (Please unmount manually)";
        BaseX.debug(msg);
      }
    }
    return true;
  }
 catch (  final IOException ex) {
    BaseX.debug(ex);
    return false;
  }
}
