{
  final FTNode n0=exprs[0].next(ctx);
  if (n1 == null) {
    if (exprs[1].more())     n1=exprs[1].next(ctx);
 else     return n0;
  }
  final IntList pos=new IntList(n0.getPre());
  final IntList poi=new IntList(n0.getNumTokens());
  if (n0.getPre() < n1.getPre()) {
    return n0;
  }
 else   if (n0.getPre() > n1.getPre()) {
    n1=null;
    if (more())     return next(ctx);
 else     return n0;
  }
 else {
    boolean mp0=n0.morePos();
    boolean mp1=n1.morePos();
    while (mp0 && mp1) {
      if (n0.nextPos() < n1.nextPos()) {
        pos.add(n0.nextPos());
        poi.add(n0.nextPoi());
        mp0=n0.morePos();
      }
 else       if (n0.nextPos() > n1.nextPos()) {
        mp1=n1.morePos();
      }
 else {
        mp0=n0.morePos();
        mp1=n1.morePos();
      }
    }
  }
  if (pos.size > 1) {
    return new FTNode(pos.finish(),poi.finish());
  }
 else {
    n1=null;
    if (more())     return next(ctx);
 else     return new FTNode();
  }
}
