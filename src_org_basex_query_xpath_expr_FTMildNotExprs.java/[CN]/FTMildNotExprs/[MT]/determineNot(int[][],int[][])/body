{
  if ((resA == null && resB == null) || resA == null) {
    return null;
  }
  if (resB == null) {
    return resA;
  }
  int i=0;
  int k=0;
  int c=0;
  int[][] mr=new int[2][resA[0].length];
  for (; i < resA[0].length; i++) {
    if (k == resB[0].length)     break;
    if (resA[0][i] == resB[0][k] && resA[1][i] == resB[1][k]) {
      k++;
    }
 else {
      mr[0][c]=resA[0][i];
      mr[1][c]=resA[1][i];
      c++;
    }
  }
  int[][] result;
  if (i == resA[0].length) {
    if (c == 0)     return null;
    result=new int[2][c];
    System.arraycopy(mr[0],0,result[0],0,c);
    System.arraycopy(mr[1],0,result[1],0,c);
  }
 else {
    result=new int[2][c + resA[0].length - i];
    System.arraycopy(mr[0],0,result[0],0,c);
    System.arraycopy(mr[1],0,result[1],0,c);
    System.arraycopy(resA[0],i,result[0],c,resA[0].length - i);
    System.arraycopy(resA[1],i,result[1],c,resA[0].length - i);
  }
  return result;
}
