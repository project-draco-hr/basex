{
  for (int i=0; i != step.length; i++) {
    final Expr e=step[i].comp(ctx);
    if (!(e instanceof Step))     return e;
    step[i]=(Step)e;
  }
  mergeDesc(ctx);
  final Data data=ctx.data();
  if (data != null) {
    boolean doc=true;
    final Item item=ctx.item;
    if (item.size(ctx) != ctx.docs || !(item instanceof Seq) || ((Seq)item).val != ctx.doc) {
      final Iter iter=item.iter();
      Item it;
      while ((it=iter.next()) != null)       doc=doc && it.type == Type.DOC;
    }
    if (doc) {
      Expr e=this;
      if (root != null && !uses(Use.POS,ctx))       e=index(ctx,data);
      if (e == this)       e=children(ctx,data);
      if (e != this)       return e.comp(ctx);
    }
  }
  cache=root != null && !uses(Use.VAR,ctx);
  return iterator(ctx);
}
