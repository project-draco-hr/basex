{
  boolean opt=false;
  for (int l=1; l < step.length; ++l) {
    if (!step[l - 1].simple(DESCORSELF,false))     continue;
    final Step next=step[l];
    if (next.axis == CHILD && !next.uses(Use.POS)) {
      Array.move(step,l,-1,step.length - l);
      step=Arrays.copyOf(step,step.length - 1);
      next.axis=DESC;
      opt=true;
    }
 else     if (next.axis == ATTR && !next.uses(Use.POS)) {
      step[l - 1].test=new NameTest(false,step[l - 1].input);
      opt=true;
    }
  }
  if (opt)   ctx.compInfo(OPTDESC);
  if (root == null && step.length == 1 && step[0].axis == ATTR && step[0].test.kind != Kind.ALL) {
    step[0].type=SeqType.NOD_ZO;
  }
}
