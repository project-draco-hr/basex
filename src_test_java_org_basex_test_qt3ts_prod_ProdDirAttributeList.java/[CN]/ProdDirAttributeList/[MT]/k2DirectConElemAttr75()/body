{
  final XQuery query=new XQuery("(:*******************************************************:)\n" + "(: Test: K2-DirectConElemAttr-75                         :)\n" + "(: Written by: Frans Englich                             :)\n"+ "(: Date: 2007-11-22T11:31:21+01:00                       :)\n"+ "(: Purpose: Mix several ways for creating text for various kinds of nodes. This test is useful if an implementation is performing normalization of such constructors. :)\n"+ "(:*******************************************************:)\n"+ "<e attribute=\"{\n"+ "\"abc\",\n"+ "\"def\",\n"+ "\"ghi\",\n"+ "1,\n"+ "2,\n"+ "3,\n"+ "xs:untypedAtomic(\"abc\"),\n"+ "text {\"a text node\"},\n"+ "text {\"a text node\"},\n"+ "xs:untypedAtomic(\"def\"),\n"+ "xs:untypedAtomic(\"ghi\"),\n"+ "xs:hexBinary(\"FF\"),\n"+ "xs:untypedAtomic(\"abc\"),\n"+ "xs:string(\"def\"),\n"+ "xs:untypedAtomic(\"ghi\")\n"+ "}\n"+ "textNode\n"+ "{\"xs:string\"}\n"+ "textNode\n"+ "{\"xs:string\"}\n"+ "textNode\n"+ "{\"xs:string\"}\n"+ "text {\"a text node\"},\n"+ "{\"xs:string\"}\n"+ "{\"xs:string\"}textnode\">\n"+ "{ \n"+ "\n"+ "attribute name\n"+ "{\n"+ "text {\"a text node\"},\n"+ "text {\"a text node\"},\n"+ "\"abc\",\n"+ "\"def\",\n"+ "text {\"a text node\"},\n"+ "\"ghi\",\n"+ "1,\n"+ "2,\n"+ "text {\"a text node\"},\n"+ "3,\n"+ "xs:untypedAtomic(\"abc\"),\n"+ "xs:untypedAtomic(\"def\"),\n"+ "text {\"a text node\"},\n"+ "xs:untypedAtomic(\"ghi\"),\n"+ "xs:hexBinary(\"FF\"),\n"+ "xs:untypedAtomic(\"abc\"),\n"+ "xs:string(\"def\"),\n"+ "xs:untypedAtomic(\"ghi\"),\n"+ "\"xs:string\",\n"+ "xs:untypedAtomic(\"ghi\"),\n"+ "\"xs:string\",\n"+ "\"xs:string\",\n"+ "\"xs:string\",\n"+ "xs:untypedAtomic(\"ghi\")\n"+ "}\n"+ "}\n"+ "{\n"+ "text {\"a text node\"},\n"+ "text {\"a text node\"},\n"+ "\"abc\",\n"+ "\"def\",\n"+ "text {\"a text node\"},\n"+ "\"ghi\",\n"+ "1,\n"+ "2,\n"+ "text {\"a text node\"},\n"+ "3,\n"+ "xs:untypedAtomic(\"abc\"),\n"+ "text {\"a text node\"},\n"+ "xs:untypedAtomic(\"def\"),\n"+ "xs:untypedAtomic(\"ghi\"),\n"+ "xs:hexBinary(\"FF\"),\n"+ "xs:untypedAtomic(\"abc\"),\n"+ "xs:string(\"def\"),\n"+ "xs:untypedAtomic(\"ghi\")\n"+ "}\n"+ "textNode\n"+ "{\"xs:string\"}\n"+ "textNode\n"+ "{\"xs:string\"}\n"+ "textNode\n"+ "{\"xs:string\"}\n"+ "{\"xs:string\"}\n"+ "{\"xs:string\"}\n"+ "text {\"a text node\"},\n"+ "text {\"a text node\"},\n"+ "text {\"a text node\"},\n"+ "text {\"a text node\"},\n"+ "\n"+ "{\n"+ "comment\n"+ "{\n"+ "\"abc\",\n"+ "\"def\",\n"+ "\"ghi\",\n"+ "1,\n"+ "2,\n"+ "3,\n"+ "xs:untypedAtomic(\"abc\"),\n"+ "xs:untypedAtomic(\"def\"),\n"+ "xs:untypedAtomic(\"ghi\"),\n"+ "xs:hexBinary(\"FF\"),\n"+ "xs:untypedAtomic(\"abc\"),\n"+ "xs:string(\"def\"),\n"+ "xs:untypedAtomic(\"ghi\"),\n"+ "\"xs:string\",\n"+ "\"xs:string\",\n"+ "xs:untypedAtomic(\"ghi\"),\n"+ "\"xs:string\",\n"+ "text {\"a text node\"},\n"+ "text {\"a text node\"},\n"+ "\"xs:string\",\n"+ "xs:untypedAtomic(\"ghi\"),\n"+ "\"xs:string\"\n"+ "},\n"+ "processing-instruction target\n"+ "{\n"+ "\"abc\",\n"+ "\"def\",\n"+ "\"ghi\",\n"+ "1,\n"+ "2,\n"+ "3,\n"+ "xs:untypedAtomic(\"abc\"),\n"+ "xs:untypedAtomic(\"def\"),\n"+ "xs:untypedAtomic(\"ghi\"),\n"+ "text {\"a text node\"},\n"+ "text {\"a text node\"},\n"+ "xs:hexBinary(\"FF\"),\n"+ "xs:untypedAtomic(\"abc\"),\n"+ "xs:string(\"def\"),\n"+ "xs:untypedAtomic(\"ghi\"),\n"+ "\"xs:string\",\n"+ "\"xs:string\",\n"+ "xs:untypedAtomic(\"ghi\"),\n"+ "\"xs:string\",\n"+ "\"xs:string\",\n"+ "xs:untypedAtomic(\"ghi\"),\n"+ "text {\"a text node\"},\n"+ "\"xs:string\"\n"+ "},\n"+ "text\n"+ "{\n"+ "text {\"a text node\"},\n"+ "text {\"a text node\"},\n"+ "text {\"a text node\"},\n"+ "text {\"a text node\"},\n"+ "\"abc\",\n"+ "\"def\",\n"+ "\"ghi\",\n"+ "1,\n"+ "2,\n"+ "text {\"a text node\"},\n"+ "3,\n"+ "xs:untypedAtomic(\"abc\"),\n"+ "text {\"a text node\"},\n"+ "xs:untypedAtomic(\"def\"),\n"+ "xs:untypedAtomic(\"ghi\"),\n"+ "xs:hexBinary(\"FF\"),\n"+ "xs:untypedAtomic(\"abc\"),\n"+ "xs:string(\"def\"),\n"+ "xs:untypedAtomic(\"ghi\"),\n"+ "\"xs:string\",\n"+ "\"xs:string\",\n"+ "xs:untypedAtomic(\"ghi\"),\n"+ "\"xs:string\",\n"+ "\"xs:string\",\n"+ "xs:untypedAtomic(\"ghi\"),\n"+ "\"xs:string\",\n"+ "text {\"a text node\"}\n"+ "}\n"+ "\n"+ "}\n"+ "</e>",ctx);
  final QT3Result res=result(query);
  result=res;
  test(assertSerialization("<e attribute=\"abc def ghi 1 2 3 abc a text node a text node def ghi FF abc def ghi textNode xs:string textNode xs:string textNode xs:string text a text node, xs:string xs:stringtextnode\" name=\"a text node a text node abc def a text node ghi 1 2 a text node 3 abc def a text node ghi FF abc def ghi xs:string ghi xs:string xs:string xs:string ghi\">a text nodea text nodeabc defa text nodeghi 1 2a text node3 abca text nodedef ghi FF abc def ghi\ntextNode\nxs:string\ntextNode\nxs:string\ntextNode\nxs:stringxs:stringxs:string\ntext a text node,\ntext a text node,\ntext a text node,\ntext a text node,\n\n<!--abc def ghi 1 2 3 abc def ghi FF abc def ghi xs:string xs:string ghi xs:string a text node a text node xs:string ghi xs:string--><?target abc def ghi 1 2 3 abc def ghi a text node a text node FF abc def ghi xs:string xs:string ghi xs:string xs:string ghi a text node xs:string?>a text node a text node a text node a text node abc def ghi 1 2 a text node 3 abc a text node def ghi FF abc def ghi xs:string xs:string ghi xs:string xs:string ghi xs:string a text node</e>",false));
}
