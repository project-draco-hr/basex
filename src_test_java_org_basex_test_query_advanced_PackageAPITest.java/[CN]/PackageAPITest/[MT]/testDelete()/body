{
  try {
    new RepoManager(ctx).delete("xyz",null);
    fail("Not installed package not detected.");
  }
 catch (  final QueryException ex) {
    check(ex,Err.PKGNOTINST);
  }
  new RepoInstall(REPO + "pkg3.xar",null).execute(ctx);
  assertNotNull(ctx.repo.pkgDict().id(token("pkg3-10.0")) != 0);
  assertTrue(dir("pkg3"));
  assertTrue(file("pkg3/expath-pkg.xml"));
  assertTrue(dir("pkg3/pkg3"));
  assertTrue(dir("pkg3/pkg3/mod"));
  assertTrue(file("pkg3/pkg3/mod/pkg3mod1.xql"));
  new RepoInstall(REPO + "pkg4.xar",null).execute(ctx);
  assertNotNull(ctx.repo.pkgDict().id(token("pkg4-2.0")) != 0);
  assertTrue(dir("pkg4"));
  assertTrue(file("pkg4/expath-pkg.xml"));
  assertTrue(dir("pkg4/pkg4"));
  assertTrue(dir("pkg4/pkg4/mod"));
  assertTrue(file("pkg4/pkg4/mod/pkg4mod1.xql"));
  try {
    new RepoManager(ctx).delete("pkg3",null);
    fail("Package involved in a dependency was deleted.");
  }
 catch (  final QueryException ex) {
    check(ex,Err.PKGDEP);
  }
  new RepoDelete("http://www.pkg4.com",null).execute(ctx);
  assertTrue(ctx.repo.pkgDict().id(token("pkg4-2.0")) == 0);
  assertTrue(!dir("pkg4"));
  new RepoDelete("pkg3",null).execute(ctx);
  assertTrue(ctx.repo.pkgDict().id(token("pkg3-10.0")) == 0);
  assertTrue(!dir("pkg3"));
}
