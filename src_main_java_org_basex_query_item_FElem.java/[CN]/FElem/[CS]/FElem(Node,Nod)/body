{
  super(Type.ELM);
  final NodeList ch=node.getChildNodes();
  final int s=ch.getLength();
  final Nod[] childArr=new Nod[s];
  final NamedNodeMap at=node.getAttributes();
  final int as=at.getLength();
  final Nod[] attArr=new Nod[as];
  name=new QNm(Token.token(node.getNodeName()));
  children=new NodIter(childArr,childArr.length);
  atts=new NodIter(attArr,attArr.length);
  base=EMPTY;
  ns=null;
  par=p;
  for (int i=0; i < at.getLength(); i++) {
    attArr[i]=new FAttr(at.item(i),this);
  }
  for (int i=0; i < ch.getLength(); i++) {
    final Node child=ch.item(i);
switch (child.getNodeType()) {
case Node.TEXT_NODE:
      childArr[i]=new FTxt(child,this);
    break;
case Node.COMMENT_NODE:
  childArr[i]=new FComm(child,this);
break;
case Node.PROCESSING_INSTRUCTION_NODE:
childArr[i]=new FPI(child,this);
break;
case Node.ELEMENT_NODE:
childArr[i]=new FElem(child,this);
break;
default :
break;
}
}
}
