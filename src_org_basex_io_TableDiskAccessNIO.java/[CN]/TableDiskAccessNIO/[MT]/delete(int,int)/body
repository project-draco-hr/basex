{
  indexdirty=true;
  cursor(first);
  int from=first - firstPre;
  final int last=first + nr - 1;
  if (last < nextPre) {
    copy(currentmbb,from + nr,currentmbb,from,nextPre - last - 1);
    updatePre(nr);
    if (nextPre == firstPre) {
      Array.move(firstPres,index + 1,-1,indexSize - index - 1);
      Array.move(blocks,index + 1,-1,indexSize - index - 1);
      indexSize--;
      readBlock(index,firstPre,index + 2 > indexSize ? count : firstPres[index + 1]);
    }
    return;
  }
  int unused=0;
  while (nextPre <= last) {
    if (from == 0)     unused++;
    nextBlock();
    from=0;
  }
  if (unused > 0) {
    Array.move(firstPres,index,-unused,indexSize - index);
    Array.move(blocks,index,-unused,indexSize - index);
    indexSize-=unused;
    index-=unused;
  }
  copy(currentmbb,last - firstPre + 1,currentmbb,0,nextPre - last - 1);
  firstPres[index]=first;
  firstPre=first;
  updatePre(nr);
}
