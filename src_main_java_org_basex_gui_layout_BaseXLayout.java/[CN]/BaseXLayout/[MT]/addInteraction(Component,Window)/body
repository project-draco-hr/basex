{
  comp.addMouseListener(new MouseAdapter(){
    @Override public void mouseEntered(    final MouseEvent e){
      focus(comp);
    }
  }
);
  if (win instanceof BaseXDialog) {
    final BaseXDialog d=(BaseXDialog)win;
    comp.addKeyListener(new KeyAdapter(){
      @Override public void keyPressed(      final KeyEvent e){
        final Object s=e.getSource();
        if (s instanceof BaseXCombo && ((BaseXCombo)s).isPopupVisible())         return;
        if (ENTER.is(e) && !(s instanceof BaseXButton) && !(s instanceof Editor)) {
          d.close();
        }
 else         if (ESCAPE.is(e)) {
          d.cancel();
        }
      }
    }
);
    return;
  }
  if (!(win instanceof GUI)) {
    Util.notexpected("Reference to main window expected.");
    return;
  }
  final GUI gui=(GUI)win;
  comp.addKeyListener(new KeyAdapter(){
    @Override public void keyPressed(    final KeyEvent e){
      if (gui.context.data() != null) {
        if (GOBACK.is(e)) {
          GUICommands.C_GOBACK.execute(gui);
        }
 else         if (GOFORWARD.is(e)) {
          GUICommands.C_GOFORWARD.execute(gui);
        }
 else         if (GOUP.is(e)) {
          GUICommands.C_GOUP.execute(gui);
        }
 else         if (GOHOME.is(e)) {
          GUICommands.C_GOHOME.execute(gui);
        }
      }
      if (INPUT1.is(e) || INPUT2.is(e)) {
        gui.input.requestFocusInWindow();
      }
      final int fs=gui.gprop.num(GUIProp.FONTSIZE);
      int nfs=fs;
      if (INCFONT1.is(e) || INCFONT2.is(e)) {
        nfs=fs + 1;
      }
 else       if (DECFONT.is(e)) {
        nfs=Math.max(1,fs - 1);
      }
 else       if (NORMFONT.is(e)) {
        nfs=13;
      }
      if (fs != nfs) {
        gui.gprop.set(GUIProp.FONTSIZE,nfs);
        gui.updateLayout();
      }
    }
  }
);
}
