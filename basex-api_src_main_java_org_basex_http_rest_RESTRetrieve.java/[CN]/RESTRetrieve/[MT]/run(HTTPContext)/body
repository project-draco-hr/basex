{
  open(http);
  final LocalSession session=http.session();
  SerializerOptions sopts=http.serialization;
  if (http.depth() == 0) {
    final Table table=new Table(session.execute(new List()));
    final Serializer ser=Serializer.get(http.res.getOutputStream(),sopts);
    http.initResponse(sopts);
    final FElem el=new FElem(Q_DATABASES).declareNS();
    el.add(RESOURCES,token(table.contents.size()));
    list(table,el,Q_DATABASE,1);
    ser.serialize(el);
    ser.close();
  }
 else   if (!exists(http)) {
    final Table table=new Table(session.execute(new List(http.db(),http.dbpath())));
    final Serializer ser=Serializer.get(http.res.getOutputStream(),sopts);
    http.initResponse(sopts);
    final FElem el=new FElem(Q_DATABASE).declareNS();
    el.add(NAME,http.db());
    el.add(RESOURCES,token(table.contents.size()));
    list(table,el,Q_RESOURCE,0);
    ser.serialize(el);
    ser.close();
  }
 else   if (isRaw(http)) {
    if (sopts == null)     sopts=new SerializerOptions();
    sopts.set(SerializerOptions.MEDIA_TYPE,contentType(http));
    http.initResponse(sopts);
    session.setOutputStream(http.res.getOutputStream());
    session.execute(new Retrieve(http.dbpath()));
  }
 else {
    http.initResponse(sopts);
    session.execute(new Set(MainOptions.SERIALIZER,serial(http)));
    session.setOutputStream(http.res.getOutputStream());
    session.query(".").execute();
  }
}
