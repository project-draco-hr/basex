{
  super(out,sopts);
  final String ver=supported(VERSION,sopts,versions);
  final String htmlver=supported(HTML_VERSION,sopts,V40,V401,V50);
  html5=htmlver.equals(V50) || ver.equals(V50);
  final boolean omitDecl=sopts.yes(OMIT_XML_DECLARATION);
  final boolean bom=sopts.yes(BYTE_ORDER_MARK);
  final YesNoOmit sa=sopts.get(STANDALONE);
  saomit=sa == YesNoOmit.OMIT;
  docsys=sopts.get(DOCTYPE_SYSTEM);
  docpub=sopts.get(DOCTYPE_PUBLIC);
  media=sopts.get(MEDIA_TYPE);
  escuri=sopts.yes(ESCAPE_URI_ATTRIBUTES);
  content=sopts.yes(INCLUDE_CONTENT_TYPE);
  undecl=sopts.yes(UNDECLARE_PREFIXES);
  final String maps=sopts.get(USE_CHARACTER_MAPS);
  webdav=maps.equals(WEBDAV);
  if (!webdav && !maps.isEmpty())   throw SERMAP_X.getIO(maps);
  if (docsys.isEmpty())   docsys=null;
  if (docpub.isEmpty())   docpub=null;
  if (bom) {
    final String enc=out.encoding();
    if (enc == Strings.UTF8) {
      out.write(0xEF);
      out.write(0xBB);
      out.write(0xBF);
    }
 else     if (enc == Strings.UTF16LE) {
      out.write(0xFF);
      out.write(0xFE);
    }
 else     if (enc == Strings.UTF16BE) {
      out.write(0xFE);
      out.write(0xFF);
    }
  }
  final String supp=sopts.get(SUPPRESS_INDENTATION);
  if (!supp.isEmpty()) {
    for (    final byte[] c : split(normalize(token(supp)),' ')) {
      if (c.length != 0)       suppress.add(c);
    }
  }
  final boolean html=this instanceof HTMLSerializer;
  final boolean xml=this instanceof XMLSerializer || this instanceof XHTMLSerializer;
  if (xml || html) {
    final String cdse=sopts.get(CDATA_SECTION_ELEMENTS);
    if (!cdse.isEmpty()) {
      for (      final byte[] c : split(normalize(token(cdse)),' ')) {
        if (c.length == 0)         continue;
        if (!html || contains(c,':') && (!html5 || !string(c).contains("html:")))         cdata.add(c);
      }
    }
    if (undecl && ver.equals(V10))     throw SERUNDECL.getIO();
    if (xml) {
      if (omitDecl) {
        if (!saomit || !ver.equals(V10) && docsys != null)         throw SERSTAND.getIO();
      }
 else {
        out.print(PI_O);
        out.print(DOCDECL1);
        out.print(ver);
        out.print(DOCDECL2);
        out.print(sopts.get(ENCODING));
        if (!saomit) {
          out.print(DOCDECL3);
          out.print(sa.toString());
        }
        out.print(ATT2);
        out.print(PI_C);
        sep=true;
      }
    }
  }
}
