{
  final int picL=patterns.length;
  final Picture[] pics=new Picture[picL];
  for (int p=0; p < picL; p++) {
    final byte[] pt=patterns[p];
    final Picture pic=new Picture();
    boolean frac=false;
    boolean act=false;
    boolean exp=false;
    int optInt=0, optFrac=0;
    final int pl=pt.length;
    for (int i=0, cl; i < pl; i+=cl) {
      final int ch=ch(pt,i);
      cl=cl(pt,i);
      boolean active=contains(actives,ch);
      if (ch == decimal) {
        frac=true;
        act=false;
      }
 else       if (ch == optional) {
        if (frac)         optFrac++;
 else         optInt++;
      }
 else       if (ch == exponent) {
        if (act && containsActive(pt,i + cl)) {
          exp=true;
        }
 else {
          active=false;
        }
      }
 else       if (ch == grouping) {
        if (!frac)         pic.groupInt.add(pic.minInt + optInt);
      }
 else       if (contains(digits,ch)) {
        if (exp) {
          pic.minExp++;
        }
 else {
          if (frac)           pic.minFrac++;
 else           pic.minInt++;
        }
      }
      if (active) {
        act=true;
      }
 else {
        pic.pc|=ch == percent;
        pic.pm|=ch == permille;
        (frac || act ? pic.suffix : pic.prefix).add(ch);
      }
    }
    final IntList ipgp=pic.groupInt;
    final int igl=ipgp.size();
    for (int g=0; g < igl; ++g)     ipgp.set(g,pic.minInt + optInt - ipgp.get(g));
    if (igl > 1) {
      boolean reg=true;
      final int i=ipgp.get(igl - 1);
      for (int g=igl - 2; g >= 0; --g)       reg&=i * igl == ipgp.get(g);
      if (reg) {
        pic.groupInt.reset();
        pic.groupInt.add(i);
      }
    }
    pic.scaling=pic.minInt;
    pic.maxFrac=optFrac + pic.minFrac;
    if (pic.minInt == 0 && pic.maxFrac == 0) {
      if (exp) {
        pic.minFrac=1;
        pic.maxFrac=1;
      }
 else {
        pic.minInt=1;
      }
    }
    if (exp && pic.minInt == 0 && optInt > 0) {
      pic.minInt=1;
    }
    if (pic.minInt == 0 && pic.minFrac == 0) {
      pic.minFrac=1;
    }
    pics[p]=pic;
  }
  return pics;
}
