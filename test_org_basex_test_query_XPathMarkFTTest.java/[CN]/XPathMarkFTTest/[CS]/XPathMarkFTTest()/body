{
  doc="<?xml version='1.0' encoding='UTF-8'?>" + "<A id='n1' pre='1' post='26' xml:lang='en'>" + "<B id='n2' pre='2' post='3'>"+ "<C id='n3' pre='3' post='1'>clergywoman</C>"+ "<D id='n4' pre='4' post='2'>decadent</D></B>"+ "<E id='n5' pre='5' post='22'>"+ "<F id='n6' pre='6' post='6'>"+ "<G id='n7' pre='7' post='4'>gentility</G>"+ "<H id='n8' pre='8' post='5' idrefs='n17 n26'>"+ "happy-go-lucky man</H></F>"+ "<I id='n9' pre='9' post='9'>"+ "<J id='n10' pre='10' post='7'>jigsaw</J>"+ "<K id='n11' pre='11' post='8'>kerchief</K></I>"+ "<L id='n12' pre='12' post='15'>"+ "<!--L is the twelve-th letter of the English alphabet-->"+ "The letter L is followed by the letter:"+ "<M id='n13' pre='13' post='10'/>"+ "which is followed by the letter:<N id='n14' pre='14' post='13'>"+ "<O id='n15' pre='15' post='11'>ovenware</O>"+ "<P id='n16' pre='16' post='12'>plentiful</P></N>"+ "<?myPI value='XPath is nice'?>"+ "<Q id='n17' pre='17' post='14' idrefs='n8 n26'>"+ "quarrelsome</Q></L>"+ "<R id='n18' pre='18' post='18'>"+ "<S id='n19' pre='19' post='16'>sage</S>"+ "<T id='n20' pre='20' post='17'>tattered</T></R>"+ "<U id='n21' pre='21' post='21'>"+ "<V id='n22' pre='22' post='19'>voluptuary</V>"+ "<W id='n23' pre='23' post='20'>wriggle</W></U></E>"+ "<X id='n24' pre='24' post='25'>"+ "<Y id='n25' pre='25' post='23'>yawn</Y>"+ "<Z id='n26' pre='26' post='24' idrefs='n8 n17'"+ " xml:lang='it'>zuzzurellone</Z></X></A>";
  queries=new Object[][]{{"A01","//L/*",nodes(59,64,79)},{"A02","//L/parent::*",nodes(20)},{"A03","//L/descendant::*",nodes(59,64,68,73,79)},{"A04","//L/descendant-or-self::*",nodes(53,59,64,68,73,79)},{"A05","//L/ancestor::*",nodes(1,20)},{"A06","//L/ancestor-or-self::*",nodes(1,20,53)},{"A07","//L/following-sibling::*",nodes(85,99)},{"A08","//L/preceding-sibling::*",nodes(24,39)},{"A09","//L/following::*",nodes(85,89,94,99,103,108,113,117,122)},{"A10","//L/preceding::*",nodes(6,10,15,24,28,33,39,43,48)},{"A11","//L/self::*",nodes(53)},{"A12","//L/@id",nodes(54)},{"F01","//*[contains(., 'plentiful')]",nodes(1,20,53,64,73)},{"F02","//*[starts-with(., 'plentiful')]",nodes(73)},{"F03","//*[substring(., 1, 9) = 'plentiful']",nodes(73)},{"F04","//*[substring-after(., 'oven') = 'ware']",nodes(68)},{"F05","//*[substring-before(., 'ful') = 'plenti']",nodes(73)},{"F06","//*[string-length(translate(normalize-space(.), " + "' ', '')) > 100]",nodes(1,20)},{"F07","//*[concat(., ..) = ..]",nodes(59)},{"F08","//*[ceiling(@pre div @post) = 1]",nodes(1,6,20,24,39,53,85,99,113)},{"F09","//*[floor(@pre div @post) = 0]",nodes(1,6,20,53,113)},{"F10","//*[round(@pre div @post) = 0]",nodes(1,20)},{"F11","//*[name(.) = 'X']",nodes(113)},{"F12","//*[lang('it')]",nodes(122)},{"F13","//L/child::*[last()]",nodes(79)},{"F14","//L/descendant::*[4]",nodes(73)},{"F15","//L/ancestor::*[2]",nodes(1)},{"F16","//L/following-sibling::*[1]",nodes(85)},{"F17","//L/preceding-sibling::*[1]",nodes(39)},{"F18","//L/following::*[7]",nodes(113)},{"F19","//L/preceding::*[7]",nodes(15)},{"F20","//*[count(ancestor::*) > 3]",nodes(68,73)},{"F21","//*[sum(ancestor::*/@pre) < sum(descendant::*/@pre)]",nodes(1,6,20,24,39,53,64,85,99,113)},{"F22","id('n1 n26')",nodes(1,122)},{"F23","id(id(//*[.='happy-go-lucky man']/@idrefs)/@idrefs)",nodes(33,79,122)},{"F24","//*[number(@pre) < number(@post)]",nodes(1,6,20,53,113)},{"F25","//*[string(@pre - 1) = '0']",nodes(1)},{"F26","//*[boolean(@id) = true() and boolean(@idrefs) = false()]",nodes(1,6,10,15,20,24,28,39,43,48,53,59,64,68,73,85,89,94,99,103,108,113,117)},{"O01","//*[child::* and preceding::Q]",nodes(85,99,113)},{"O02","//*[not(child::*) and preceding::Q]",nodes(89,94,103,108,117,122)},{"O03","//*[preceding::L or following::L]",nodes(6,10,15,24,28,33,39,43,48,85,89,94,99,103,108,113,117,122)},{"O04","//L/ancestor::* | //L/descendant::*",nodes(1,20,59,64,68,73,79)},{"O05","//*[.='happy-go-lucky man']",nodes(33)},{"O06","//*[@pre > 12 and @post < 15]",nodes(59,64,68,73,79)},{"O07","//*[@pre != @post]",nodes(1,6,10,15,20,28,33,43,48,53,59,64,68,73,79,89,94,103,108,113,117,122)},{"O08","//*[((@post * @post + @pre * @pre) div (@post + @pre)) > " + "((@post - @pre) * (@post - @pre))]",nodes(6,24,39,48,53,59,64,79,85,89,94,99,103,108,113,117,122)},{"O09","//*[@pre mod 2 = 0]",nodes(6,15,24,33,43,53,64,73,85,94,103,113,122)},{"P01","//*[L]",nodes(20)},{"P02","//*[parent::L]",nodes(59,64,79)},{"P03","//*[descendant::L]",nodes(1,20)},{"P04","//*[descendant-or-self::L]",nodes(1,20,53)},{"P05","//*[ancestor::L]",nodes(59,64,68,73,79)},{"P06","//*[ancestor-or-self::L]",nodes(53,59,64,68,73,79)},{"P07","//*[following-sibling::L]",nodes(24,39)},{"P08","//*[preceding-sibling::L]",nodes(85,99)},{"P09","//*[following::L]",nodes(6,10,15,24,28,33,39,43,48)},{"P10","//*[preceding::L]",nodes(85,89,94,99,103,108,113,117,122)},{"P11","//*[self::L]",nodes(53)},{"P12","//*[@id]",nodes(1,6,10,15,20,24,28,33,39,43,48,53,59,64,68,73,79,85,89,94,99,103,108,113,117,122)},{"T01","//L/text()",nodes(58,63)},{"T02","//L/comment()",nodes(57)},{"T03","//L/processing-instruction()",nodes(78)},{"T04","//L/processing-instruction('myPI')",nodes(78)},{"T05","//L/node()",nodes(57,58,59,63,64,78,79)},{"T06","//L/N",nodes(64)},{"T07","//L/*",nodes(59,64,79)}};
}
