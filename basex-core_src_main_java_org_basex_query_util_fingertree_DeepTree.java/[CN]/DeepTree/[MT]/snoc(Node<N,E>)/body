{
  if (right.length < MAX_DIGIT) {
    final Node<N,E>[] newRight=slice(right,0,right.length + 1);
    newRight[right.length]=lst;
    return new DeepTree<>(left,leftSize,middle,newRight,size + lst.size());
  }
  final int rl=right.length, m=NODE_SIZE;
  final Node<N,E>[] sub=slice(right,0,m), newRight=slice(right,m,rl + 1);
  newRight[rl - m]=lst;
  final FingerTree<Node<N,E>,E> mid=middle.snoc(new InnerNode<>(sub));
  return new DeepTree<>(left,leftSize,mid,newRight,size + lst.size());
}
