{
  final XQuery query=new XQuery("\n" + "<result>{\n" + "for sliding window $w in ./sequence/*\n"+ "  start  $cur previous $prev\n"+ "   when day-from-dateTime($cur/@date) ne day-from-dateTime($prev/@date) or empty($prev)\n"+ "  end $end next $next\n"+ "   when day-from-dateTime(xs:dateTime($end/@date)) ne\n"+ "day-from-dateTime(xs:dateTime($next/@date))\n"+ "return\n"+ "  <mostValuableCustomer endOfDay=\"{xs:dateTime($cur/@date)}\">{\n"+ "    let $companies :=   for $x in distinct-values($w/@billTo )\n"+ "                        return <amount company=\"{$x}\">{sum($w[@billTo eq $x]/@total)}</amount>\n"+ "    let $max := max($companies)\n"+ "    for $company in $companies\n"+ "    where $company eq xs:untypedAtomic($max)\n"+ "    return $company\n"+ "  }</mostValuableCustomer>\n"+ "}</result>\n"+ "      ",ctx);
  try {
    query.context(node(file("prod/WindowClause/cxml.xml")));
    result=new QT3Result(query.value());
  }
 catch (  final Throwable trw) {
    result=new QT3Result(trw);
  }
 finally {
    query.close();
  }
  test(assertSerialization("<result><mostValuableCustomer endOfDay=\"2006-01-01T00:00:00Z\"><amount company=\"ACME1\">1100</amount></mostValuableCustomer><mostValuableCustomer endOfDay=\"2006-01-02T00:00:00Z\"><amount company=\"ACME1\">10000</amount></mostValuableCustomer><mostValuableCustomer endOfDay=\"2006-01-03T00:00:00Z\"/><mostValuableCustomer endOfDay=\"2006-01-04T00:00:00Z\"/><mostValuableCustomer endOfDay=\"2006-01-05T00:00:00Z\"/><mostValuableCustomer endOfDay=\"2006-01-06T00:00:00Z\"><amount company=\"ACME2\">100</amount></mostValuableCustomer><mostValuableCustomer endOfDay=\"2006-01-07T00:00:00Z\"/></result>",false));
}
