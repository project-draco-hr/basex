{
  pos(s);
  bol(true);
  startSelect();
  pos(e);
  forward(Integer.MAX_VALUE,true);
  next(true);
  endSelect();
  boolean tab=false;
  final int pl=text.length;
  for (int p=0; p < pl; ++p)   tab|=text[p] == '\t';
  byte[] add={'\t'};
  if (!tab) {
    add=new byte[TAB];
    for (int a=0; a < TAB; a++)     add[a]=' ';
  }
  final TokenBuilder tb=new TokenBuilder();
  tb.add(text,0,ms);
  for (int p=ms; p < ps; p+=cl(text,p)) {
    if (p == 0 || text[p - 1] == '\n') {
      if (sh) {
        if (text[p] == '\t') {
          me--;
          continue;
        }
        if (text[p] == ' ') {
          me--;
          for (int i=1; i < TAB && p + i < pl && text[p + i] == ' '; i++) {
            me--;
            p++;
          }
          continue;
        }
      }
 else {
        tb.add(add);
        me+=add.length;
      }
    }
    tb.add(cp(text,p));
  }
  tb.add(text,ps,text.length);
  ps=me;
  text(tb.finish());
}
