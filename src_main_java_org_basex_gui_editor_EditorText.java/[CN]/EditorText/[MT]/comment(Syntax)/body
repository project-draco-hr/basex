{
  final byte[] st=syntax.commentOpen();
  final byte[] en=syntax.commentEnd();
  boolean add=true;
  int min=ps;
  int max=ps;
  if (selected()) {
    min=ps < ms ? ps : ms;
    max=ps > ms ? ps : ms;
    final int mn=Math.max(min + st.length,max - en.length);
    if (indexOf(text,st,min) == min && indexOf(text,en,mn) == mn) {
      final TokenBuilder tb=new TokenBuilder();
      tb.add(text,0,min);
      tb.add(text,min + st.length,max - en.length);
      tb.add(text,max,text.length);
      text(tb.finish());
      ms=min;
      me=max - st.length - en.length;
      ps=me;
      add=false;
    }
  }
 else {
    while (min > 0 && text[min - 1] != '\n')     --min;
    while (max < size() && text[max] != '\n')     ++max;
  }
  if (add) {
    pos(max);
    add(string(en));
    pos(min);
    add(string(st));
    ms=min;
    me=max + st.length + en.length;
    ps=me;
  }
}
