{
  for (int e=expr.length; --e >= 0; )   expr[e]=expr[e].comp(ctx);
  checkUp(ctx,expr);
  size=0;
  for (  final Expr e : expr) {
    final long c=e.size();
    if (c == -1) {
      size=c;
      break;
    }
    size+=c;
  }
  type=SeqType.EMP;
  boolean v=true;
  for (  final Expr e : expr) {
    if (e.empty())     continue;
    final SeqType et=e.type();
    type=type == SeqType.EMP ? et : SeqType.get(et.type == type.type ? et.type : AtomType.ITEM,et.mayBeZero() && type.mayBeZero() ? Occ.ZM : Occ.OM);
    v&=e.value();
  }
  return v ? type.type.instance(AtomType.ITR) ? optPre(ItrSeq.get(expr,size,type.type),ctx) : optPre(value(ctx),ctx) : this;
}
