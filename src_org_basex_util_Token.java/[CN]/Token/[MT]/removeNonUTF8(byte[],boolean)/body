{
  final int len=text.length;
  if (len == 0)   return EMPTY;
  final byte[] t=new byte[len];
  int i=0, pos=0;
  if (chop)   while (i < len && ws(text[i]))   ++i;
  if (i == len)   return EMPTY;
  out:   while (i < len) {
    final int cl=cl2(text[i]);
    if (cl <= 0) {
      ++i;
      continue;
    }
    if (cl > len - i)     break;
    final int b=text[i] & 0xFF;
    if (b >= 0 && b < ' ' && !ws(b)) {
      ++i;
      continue;
    }
    t[pos++]=text[i++];
    for (int j=1; j < cl; j++) {
      if (cl2(text[i]) != 0) {
        --pos;
        i+=cl - j;
        continue out;
      }
    }
    for (int j=1; j < cl; j++)     t[pos++]=text[i++];
  }
  if (chop)   while (pos > 0 && ws(t[pos - 1]))   --pos;
  if (pos == 0)   return EMPTY;
  return Arrays.copyOf(t,pos);
}
