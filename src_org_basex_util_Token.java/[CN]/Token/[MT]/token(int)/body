{
  if (i == 0)   return ZERO;
  if (i == Integer.MIN_VALUE)   return MININT;
  int n=i;
  final boolean m=n < 0;
  if (m)   n=-n;
  int j=numDigits(n);
  if (m)   j++;
  final byte[] num=new byte[j];
  while (n > 81919) {
    final int q=n / 10;
    num[--j]=(byte)(n - (q << 3) - (q << 1) + '0');
    n=q;
  }
  while (n != 0) {
    final int q=(n * 52429) >>> 19;
    num[--j]=(byte)(n - (q << 3) - (q << 1) + '0');
    n=q;
  }
  if (m)   num[--j]='-';
  return num;
}
