{
  final ANodeList attrs=extractAttrs(conn);
  final ANodeList hdrs=extractHdrs(conn);
  final String type=conn.getContentType();
  final String cType=mediaTypeOvr == null ? extractContentType(type) : string(mediaTypeOvr);
  final ValueBuilder payloads=new ValueBuilder();
  final boolean s=status != null && Bln.parse(status,info);
  final FNode body;
  InputStream is=conn.getErrorStream();
  if (is == null)   is=conn.getInputStream();
  if (cType.startsWith(MULTIPART)) {
    final byte[] boundary=extractBoundary(type);
    final ANodeList a=new ANodeList(new FAttr(Q_MEDIA_TYPE,token(cType)),new FAttr(Q_BOUNDARY,boundary));
    body=new FElem(Q_HTTP_MULTIPART,extractParts(is,s,payloads,concat(token("--"),boundary)),a,new Atts(HTTP,HTTPURI));
  }
 else {
    body=createBody(cType);
    if (!s) {
      final byte[] payload=extractPayload(is,cType,extractCharset(type));
      payloads.add(interpretPayload(payload,cType));
    }
  }
  final FElem responseEl=new FElem(Q_HTTP_RESPONSE,hdrs,attrs,new Atts(HTTP,HTTPURI));
  responseEl.add(body);
  final ValueBuilder result=new ValueBuilder();
  result.add(responseEl);
  result.add(payloads.value());
  return result;
}
