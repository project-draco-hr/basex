{
  XQExpression xqe;
  XQSequence xqs;
  xqe=xqc.createExpression();
  xqs=xqe.executeQuery("1");
  try {
    xqs.isBeforeFirst();
    fail("A-XQS-14.1: SCROLLTYPE_FORWARD_ONLY sequence supports isBeforeFirst()");
  }
 catch (  XQException e) {
  }
  xqe.close();
  XQStaticContext xqsc=xqc.getStaticContext();
  xqsc.setScrollability(XQConstants.SCROLLTYPE_SCROLLABLE);
  xqc.setStaticContext(xqsc);
  xqe=xqc.createExpression();
  xqs=xqe.executeQuery("1");
  xqs.close();
  try {
    xqs.isBeforeFirst();
    fail("A-XQS-1.2: closed sequence supports isBeforeFirst()");
  }
 catch (  XQException e) {
  }
  xqe.close();
  xqe=xqc.createExpression();
  xqs=xqe.executeQuery("1");
  try {
    assertEquals("A-XQS-14.2: isBeforeFirst() failed when before first item",true,xqs.isBeforeFirst());
  }
 catch (  XQException e) {
    fail("A-XQS-14.2: isBeforeFirst() failed with message: " + e.getMessage());
  }
  xqs.next();
  try {
    assertEquals("A-XQS-14.3: isBeforeFirst() failed when on item",false,xqs.isBeforeFirst());
  }
 catch (  XQException e) {
    fail("A-XQS-14.3: isBeforeFirst() failed with message: " + e.getMessage());
  }
  xqs.next();
  try {
    assertEquals("A-XQS-14.3: isBeforeFirst() failed when after last item",false,xqs.isBeforeFirst());
  }
 catch (  XQException e) {
    fail("A-XQS-14.3: isBeforeFirst() failed with message: " + e.getMessage());
  }
  xqe.close();
  xqe=xqc.createExpression();
  xqs=xqe.executeQuery("()");
  try {
    assertEquals("A-XQS-14.2: isBeforeFirst() failed in case of empty sequence",false,xqs.isBeforeFirst());
  }
 catch (  XQException e) {
    fail("A-XQS-14.1: isBeforeFirst() failed with message: " + e.getMessage());
  }
  xqe.close();
}
