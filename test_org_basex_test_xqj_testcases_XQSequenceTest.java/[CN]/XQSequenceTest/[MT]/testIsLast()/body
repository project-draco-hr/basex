{
  XQExpression xqe;
  XQSequence xqs;
  xqe=xqc.createExpression();
  xqs=xqe.executeQuery("1");
  try {
    xqs.isLast();
    fail("A-XQS-16.1: SCROLLTYPE_FORWARD_ONLY sequence supports isLast()");
  }
 catch (  XQException e) {
  }
  xqe.close();
  XQStaticContext xqsc=xqc.getStaticContext();
  xqsc.setScrollability(XQConstants.SCROLLTYPE_SCROLLABLE);
  xqc.setStaticContext(xqsc);
  xqe=xqc.createExpression();
  xqs=xqe.executeQuery("1");
  xqs.close();
  try {
    xqs.isLast();
    fail("A-XQS-1.2: closed sequence supports isLast()");
  }
 catch (  XQException e) {
  }
  xqe.close();
  xqe=xqc.createExpression();
  xqs=xqe.executeQuery("1");
  try {
    assertEquals("A-XQS-16.3: isLast() failed when before first item",false,xqs.isLast());
  }
 catch (  XQException e) {
    fail("A-XQS-16.3: isLast() failed with message: " + e.getMessage());
  }
  xqs.next();
  try {
    assertEquals("A-XQS-16.2: isLast() failed when on item",true,xqs.isLast());
  }
 catch (  XQException e) {
    fail("A-XQS-16.2: isLast() failed with message: " + e.getMessage());
  }
  xqs.next();
  try {
    assertEquals("A-XQS-16.3: isLast() failed when after last item",false,xqs.isLast());
  }
 catch (  XQException e) {
    fail("A-XQS-16.3: isLast() failed with message: " + e.getMessage());
  }
  xqe.close();
}
