{
  if (compiled)   return;
  compiling=compiled=true;
  final Value cv=ctx.value;
  final StaticContext cs=ctx.sc;
  ctx.sc=sc;
  ctx.value=null;
  final int fp=scope.enter(ctx);
  try {
    expr=expr.compile(ctx,scope);
  }
 catch (  final QueryException qe) {
    expr=FNInfo.error(qe);
  }
 finally {
    scope.cleanUp(this);
    scope.exit(ctx,fp);
    ctx.value=cv;
    ctx.sc=cs;
  }
  ctx.compInfo(OPTTCE,name);
  expr.markTailCalls();
  if (declType != null) {
    if ((declType.type == AtomType.BLN || declType.type == AtomType.FLT || declType.type == AtomType.DBL || declType.type == AtomType.QNM || declType.type == AtomType.URI) && declType.eq(expr.type())) {
      ctx.compInfo(OPTCAST,declType);
      cast=false;
    }
  }
  compiling=false;
}
