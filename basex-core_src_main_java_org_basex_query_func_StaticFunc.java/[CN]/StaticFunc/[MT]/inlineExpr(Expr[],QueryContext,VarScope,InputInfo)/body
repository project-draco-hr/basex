{
  if (!inline(qc,anns,expr) || has(Flag.CTX) || compiling|| selfRecursive())   return null;
  qc.compInfo(OPTINLINE,id());
  final LinkedList<GFLWOR.Clause> cls=exprs.length == 0 ? null : new LinkedList<GFLWOR.Clause>();
  final IntObjMap<Var> vs=new IntObjMap<>();
  final int al=args.length;
  for (int a=0; a < al; a++) {
    final Var old=args[a], v=scp.newCopyOf(qc,old);
    vs.put(old.id,v);
    cls.add(new Let(v,exprs[a],false,info).optimize(qc,scp));
  }
  final Expr cpy=expr.copy(qc,scp,vs);
  return cls == null ? cpy : new GFLWOR(info,cls,cpy).optimize(qc,scp);
}
