{
  if (next || c >= cl)   return next;
  while (++c < cl && (input.charAt(c) <= ' ' || input.charAt(c) == ';'))   ;
  final int c1=c;
  if (c == cl)   return false;
  while (++c < cl && input.charAt(c) > ' ' && input.charAt(c) != ';')   ;
  final int c2=c--;
  final Commands com=Commands.find(input.substring(c1,c2));
  final String arg;
  if (com != Commands.XQENV && com != Commands.XQUERY && com != Commands.PF) {
    char qu=0;
    while (++c < cl) {
      final char ch=input.charAt(c);
      if (qu != 0 && ch == '\\') {
        if (c < cl)         ++c;
      }
 else {
        if (ch == ';' && qu == 0)         break;
        if (ch == '\'' || ch == '"') {
          if (qu == 0)           qu=ch;
 else           if (qu == ch)           qu=0;
        }
      }
    }
    arg=input.substring(c2,c).trim();
  }
 else {
    arg=input.substring(Math.min(cl,c2 + 1));
    c=cl;
  }
  cmd=new Command(com,arg);
  next=true;
  return true;
}
