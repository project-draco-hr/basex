{
  final TokenBuilder tb=new TokenBuilder();
  if (item instanceof Map) {
    final Map map=(Map)item;
    for (    final Item it : map.keys()) {
      if (!(it instanceof AStr))       throw EXPTYPE_X_X_X.get(info,AtomType.STR,it.type,it);
      tb.add(it.string(info)).add('=');
      final Value val=map.get(it,info);
      if (!(val instanceof Item))       throw EXPTYPE_X_X_X.get(info,AtomType.ITEM,val.seqType(),val);
      tb.add(optString((Item)val).replace(",",",,")).add(',');
    }
  }
 else   if (item.type == NodeType.ELM) {
    for (    final ANode node : ((ANode)item).children()) {
      if (node.type != NodeType.ELM)       continue;
      final QNm qn=node.qname();
      if (!eq(qn.uri(),root.uri()))       continue;
      byte[] v;
      if (hasElements(node)) {
        v=token(optString(node));
      }
 else {
        v=node.attribute(VALUE);
        if (v == null)         v=node.string();
      }
      tb.add(string(qn.local())).add('=').add(optString(Str.get(v)).replace(",",",,")).add(',');
    }
  }
 else {
    tb.add(item.string(info));
  }
  return tb.toString();
}
