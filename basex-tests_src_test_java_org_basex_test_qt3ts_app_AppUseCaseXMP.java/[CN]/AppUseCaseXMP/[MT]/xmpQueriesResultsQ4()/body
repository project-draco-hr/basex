{
  final XQuery query=new XQuery("\n" + "      \t<results> { \n" + "      \t\tlet $a := //author \n"+ "      \t\tfor $last in distinct-values($a/last), $first in distinct-values($a[last=$last]/first) \n"+ "      \t\torder by $last, $first \n"+ "      \t\treturn <result> \n"+ "      \t\t\t\t<author> <last>{ $last }</last> <first>{ $first }</first> </author> \n"+ "      \t\t\t\t{ for $b in /bib/book \n"+ "      \t\t\t\t\twhere some $ba in $b/author satisfies ($ba/last = $last and $ba/first=$first) \n"+ "      \t\t\t\t\treturn $b/title } \n"+ "      \t\t\t   </result> } \n"+ "      \t</results>\n"+ "      ",ctx);
  try {
    query.context(node(file("docs/bib.xml")));
    result=new QT3Result(query.value());
  }
 catch (  final Throwable trw) {
    result=new QT3Result(trw);
  }
 finally {
    query.close();
  }
  test(assertSerialization("<results><result><author><last>Abiteboul</last><first>Serge</first></author><title>Data on the Web</title></result><result><author><last>Buneman</last><first>Peter</first></author><title>Data on the Web</title></result><result><author><last>Stevens</last><first>W.</first></author><title>TCP/IP Illustrated</title><title>Advanced Programming in the Unix environment</title></result><result><author><last>Suciu</last><first>Dan</first></author><title>Data on the Web</title></result></results>",false));
}
