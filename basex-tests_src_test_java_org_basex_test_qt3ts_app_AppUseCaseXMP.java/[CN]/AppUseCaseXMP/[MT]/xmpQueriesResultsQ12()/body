{
  final XQuery query=new XQuery("\n" + "      \t<bib> { \n" + "      \t\tfor $book1 in //book, $book2 in //book \n"+ "      \t\tlet $aut1 := \n"+ "      \t\t\tfor $a in $book1/author \n"+ "      \t\t\torder by exactly-one($a/last), exactly-one($a/first) \n"+ "      \t\t\treturn $a \n"+ "      \t\tlet $aut2 := \n"+ "      \t\t\tfor $a in $book2/author \n"+ "      \t\t\torder by exactly-one($a/last), exactly-one($a/first) \n"+ "      \t\t\treturn $a \n"+ "      \t\twhere $book1 << $book2 and not($book1/title = $book2/title) and deep-equal($aut1, $aut2) \n"+ "      \t\treturn <book-pair> { $book1/title } { $book2/title } </book-pair> } \n"+ "      \t</bib>\n"+ "      ",ctx);
  try {
    query.context(node(file("docs/bib.xml")));
    result=new QT3Result(query.value());
  }
 catch (  final Throwable trw) {
    result=new QT3Result(trw);
  }
 finally {
    query.close();
  }
  test(assertSerialization("<bib><book-pair><title>TCP/IP Illustrated</title><title>Advanced Programming in the Unix environment</title></book-pair></bib>",false));
}
