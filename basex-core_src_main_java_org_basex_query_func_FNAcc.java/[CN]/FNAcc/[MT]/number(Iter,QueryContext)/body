{
  final Item it=ir.next();
  if (it == null || ir.next() != null)   return Dbl.NAN;
  if (it instanceof FItem)   throw FIATOM.get(info,it.type);
  if (it.type == AtomType.DBL)   return it;
  if (it.type.isStringOrUntyped() && it.type != AtomType.URI) {
    final byte[] value=trim(it.string(info));
    if (eq(value,INF))     return Dbl.get(POSITIVE_INFINITY);
    if (eq(value,NINF))     return Dbl.get(NEGATIVE_INFINITY);
    return Dbl.get(toDouble(value));
  }
  try {
    return AtomType.DBL.cast(it,qc,sc,info);
  }
 catch (  final QueryException ex) {
    return Dbl.NAN;
  }
}
