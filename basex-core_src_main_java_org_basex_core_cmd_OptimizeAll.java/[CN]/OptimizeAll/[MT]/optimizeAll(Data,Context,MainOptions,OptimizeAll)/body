{
  if (data.inMemory())   throw new BaseXException(NO_MAINMEM);
  final DiskData odata=(DiskData)data;
  final MetaData ometa=odata.meta;
  final String name=ometa.name;
  if (context.datas.pins(name) > 1)   throw new BaseXException(DB_PINNED_X,name);
  options.set(MainOptions.TEXTINDEX,ometa.textindex);
  options.set(MainOptions.ATTRINDEX,ometa.attrindex);
  options.set(MainOptions.TOKENINDEX,ometa.tokenindex);
  options.set(MainOptions.FTINDEX,ometa.ftindex);
  options.set(MainOptions.TEXTINCLUDE,ometa.textinclude);
  options.set(MainOptions.ATTRINCLUDE,ometa.attrinclude);
  options.set(MainOptions.TOKENINCLUDE,ometa.tokeninclude);
  options.set(MainOptions.FTINCLUDE,ometa.ftinclude);
  options.set(MainOptions.STEMMING,ometa.stemming);
  options.set(MainOptions.CASESENS,ometa.casesens);
  options.set(MainOptions.DIACRITICS,ometa.diacritics);
  options.set(MainOptions.LANGUAGE,ometa.language.toString());
  options.set(MainOptions.STOPWORDS,ometa.stopwords);
  options.set(MainOptions.MAXLEN,ometa.maxlen);
  options.set(MainOptions.MAXCATS,ometa.maxcats);
  if (cmd != null)   cmd.size=ometa.size;
  final StaticOptions sopts=context.soptions;
  final String tmpName=sopts.randomDbName(name);
  final DBParser parser=new DBParser(odata,options,cmd);
  try (final DiskBuilder builder=new DiskBuilder(tmpName,parser,sopts,options)){
    final DiskData ndata=builder.build();
    final MetaData nmeta=ndata.meta;
    try {
      nmeta.createtext=ometa.createtext;
      nmeta.createattr=ometa.createattr;
      nmeta.createtoken=ometa.createtoken;
      nmeta.createft=ometa.createft;
      nmeta.original=ometa.original;
      nmeta.filesize=ometa.filesize;
      nmeta.time=ometa.time;
      nmeta.dirty=true;
      CreateIndex.create(ndata,cmd);
      final IOFile bin=ometa.binaries();
      if (bin.exists())       bin.rename(nmeta.binaries());
    }
  finally {
      ndata.close();
    }
  }
   Close.close(odata,context);
  if (!DropDB.drop(name,sopts))   throw new BaseXException(DB_NOT_DROPPED_X,name);
  if (!AlterDB.alter(tmpName,name,sopts))   throw new BaseXException(DB_NOT_RENAMED_X,tmpName);
}
