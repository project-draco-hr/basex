{
  final Data data=gui.context.data();
  if (data == null)   return;
  if (mainRects == null || mainRects.size == 0 || mainRects.get(0).w == 0) {
    super.paintComponent(g);
    if (mainRects == null || mainRects.size != 0)     refreshInit();
    return;
  }
  gui.painting=true;
  final boolean in=zoomStep > 0 && zoomIn;
  final Image img1=in ? zoomMap : mainMap;
  final Image img2=in ? mainMap : zoomMap;
  if (zoomStep > 0) {
    drawImage(g,img1,-zoomStep);
    drawImage(g,img2,zoomStep);
  }
 else {
    drawImage(g,mainMap,zoomStep);
  }
  if (focused != null && focused.pre >= data.meta.size)   focused=null;
  final MapRect f=focused;
  if (f == null || mainRects.size == 1 && f == mainRects.get(0)) {
    gui.painting=false;
    if (f == null || !f.thumb)     return;
  }
  final GUIProp gprop=gui.gprop;
  if (gprop.num(GUIProp.MAPOFFSETS) == 0) {
    g.setColor(color(32));
    int pre=mainRects.size;
    int par=ViewData.parent(data,f.pre);
    while (--pre >= 0) {
      final MapRect rect=mainRects.get(pre);
      if (rect.pre == par) {
        final int x=rect.x;
        final int y=rect.y;
        final int w=rect.w;
        final int h=rect.h;
        g.drawRect(x,y,w,h);
        g.drawRect(x - 1,y - 1,w + 2,h + 2);
        par=ViewData.parent(data,par);
      }
    }
  }
  if (selBox != null) {
    g.setColor(colormark3);
    g.drawRect(selBox.x,selBox.y,selBox.w,selBox.h);
    g.drawRect(selBox.x - 1,selBox.y - 1,selBox.w + 2,selBox.h + 2);
  }
 else {
    final int x=f.x;
    final int y=f.y;
    final int w=f.w;
    final int h=f.h;
    g.setColor(color5);
    g.drawRect(x,y,w,h);
    g.drawRect(x + 1,y + 1,w - 2,h - 2);
    g.setFont(font);
    smooth(g);
    if (data.kind(f.pre) == Data.ELEM) {
      String tt=Token.string(ViewData.tag(gprop,data,f.pre));
      if (tt.length() > 32)       tt=tt.substring(0,30) + DOTS;
      BaseXLayout.drawTooltip(g,tt,x,y,getWidth(),f.level + 5);
    }
    if (f.thumb) {
      f.x+=3;
      f.w-=3;
      final byte[] text=painter.content(data,f);
      final int[][] info=new FTLexer().init(text).info();
      final TokenList tl=MapRenderer.calculateToolTip(f,info,mouseX,mouseY,getWidth(),g);
      final MapRect mr=new MapRect(getX(),getY(),getWidth(),getHeight());
      MapRenderer.drawToolTip(g,mouseX,mouseY,mr,tl,gprop.num(GUIProp.FONTSIZE));
      f.x-=3;
      f.w+=3;
    }
  }
  gui.painting=false;
}
