{
  final Iter iter=qc.iter(expr);
  final Item it=iter.next();
  if (it == null) {
    if (seqType.mayBeZero())     return Empty.ITER;
    throw NOTREAT.get(info,Empty.SEQ.seqType(),seqType,Empty.SEQ);
  }
  if (seqType.occ == Occ.ZERO)   throw NOTREAT.get(info,it.type,seqType,it);
  if (seqType.zeroOrOne()) {
    final Item n=iter.next();
    if (n != null) {
      final ValueBuilder vb=new ValueBuilder(3).add(it).add(n);
      if (iter.next() != null)       vb.add(Str.get(DOTS));
      throw NOTREAT.get(info,expr.seqType(),seqType,vb.value());
    }
    if (!it.type.instanceOf(seqType.type))     throw NOTREAT.get(info,it.type,seqType,it);
    return it.iter();
  }
  return new Iter(){
    Item i=it;
    @Override public Item next() throws QueryException {
      if (i == null)       return null;
      if (!i.type.instanceOf(seqType.type))       throw NOTREAT.get(info,i.type,seqType,i);
      final Item ii=i;
      i=iter.next();
      return ii;
    }
  }
;
}
