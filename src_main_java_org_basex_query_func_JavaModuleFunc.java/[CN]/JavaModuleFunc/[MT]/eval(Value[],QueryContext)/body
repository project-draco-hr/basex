{
  if (module instanceof QueryModule)   ((QueryModule)module).init(ctx);
  try {
    try {
      return mth.invoke(module,(Object[])args);
    }
 catch (    final IllegalArgumentException iae) {
      final Object[] ar=new Object[args.length];
      for (int a=0; a < args.length; a++)       ar[a]=args[a].toJava();
      return mth.invoke(module,ar);
    }
  }
 catch (  final InvocationTargetException ex) {
    final Throwable cause=ex.getCause();
    throw cause instanceof QueryException ? ((QueryException)cause).info(input) : JAVAERR.thrw(input,cause);
  }
catch (  final Throwable ex) {
    final TokenBuilder expect=new TokenBuilder();
    for (    final Class<?> c : mth.getParameterTypes()) {
      if (!expect.isEmpty())       expect.add(", ");
      expect.add(c.getSimpleName());
    }
    throw JAVAMOD.thrw(input,mth.getName() + '(' + expect+ ')',mth.getName() + '(' + foundArgs(args)+ ')');
  }
}
