{
  if (search.length == 0) {
    text.noMark();
    return -1;
  }
  while (true) {
    final int hh=h;
    int lp=-1, ly=-1, cp=text.cursor();
    h=Integer.MAX_VALUE;
    final Graphics g=getGraphics();
    for (init(g); more(g); next()) {
      if (!found())       continue;
      final int np=text.pos();
      final int ny=y - fontH;
      if (np >= cp && (np > cp || !same || !forward)) {
        if (forward || lp != -1) {
          h=hh;
          text.setCursor(forward ? np : lp);
          text.startMark();
          text.forward(search.length);
          text.endMark();
          return forward ? ny : ly;
        }
        cp=Integer.MAX_VALUE;
      }
      lp=np;
      ly=ny;
    }
    h=hh;
    if (cp == -1 || cp == Integer.MAX_VALUE) {
      text.setCursor(Math.max(0,lp));
      text.noMark();
      return ly;
    }
    text.setCursor(-1);
    text.noMark();
  }
}
