{
  if (params.length != ft.args.length)   throw Err.castError(ii,ft,this);
  final FuncType tp=funcType();
  if (tp.instanceOf(ft))   return this;
  final VarScope vsc=new VarScope(sc);
  final Var[] vs=new Var[params.length];
  final Expr[] refs=new Expr[vs.length];
  for (int i=vs.length; i-- > 0; ) {
    vs[i]=vsc.newLocal(ctx,params[i].name,ft.args[i],true);
    refs[i]=new VarRef(ii,vs[i]);
  }
  final Expr e=new DynFuncCall(ii,false,this,refs), optimized=opt ? e.optimize(ctx,vsc) : e, checked;
  if (ft.ret == null || tp.ret != null && tp.ret.instanceOf(ft.ret)) {
    checked=optimized;
  }
 else {
    final TypeCheck tc=new TypeCheck(sc,ii,optimized,ft.ret,true);
    checked=opt ? tc.optimize(ctx,vsc) : tc;
  }
  checked.markTailCalls(null);
  return new FuncItem(sc,ann,name,vs,ft,checked,vsc.stackSize());
}
