{
  final int pl=params.length;
  if (pl != ft.argTypes.length)   throw QueryError.typeError(this,ft.seqType(),null,ii);
  final FuncType tp=funcType();
  if (tp.instanceOf(ft))   return this;
  final VarScope vsc=new VarScope(sc);
  final Var[] vars=new Var[pl];
  final Expr[] refs=new Expr[pl];
  for (int p=pl; p-- > 0; ) {
    vars[p]=vsc.addNew(params[p].name,ft.argTypes[p],true,qc,ii);
    refs[p]=new VarRef(ii,vars[p]);
  }
  final Expr e=new DynFuncCall(ii,sc,this,refs);
  final Expr optimized=opt ? e.optimize(qc,vsc) : e, checked;
  if (ft.type == null || tp.type != null && tp.type.instanceOf(ft.type)) {
    checked=optimized;
  }
 else {
    final TypeCheck tc=new TypeCheck(sc,ii,optimized,ft.type,true);
    checked=opt ? tc.optimize(qc,vsc) : tc;
  }
  checked.markTailCalls(null);
  return new FuncItem(sc,anns,name,vars,ft,checked,vsc.stackSize());
}
