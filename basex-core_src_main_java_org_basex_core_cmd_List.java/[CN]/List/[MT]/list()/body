{
  final Table table=new Table();
  table.description=DATABASES_X;
  final boolean create=context.user().has(Perm.CREATE);
  table.header.add(NAME);
  table.header.add(RESOURCES);
  table.header.add(SIZE);
  if (create)   table.header.add(INPUT_PATH);
  for (  final String name : context.filter(Perm.READ,context.databases.listDBs())) {
    String file=null;
    long size=0;
    int docs=0;
    final MetaData meta=new MetaData(name,options,soptions);
    try {
      meta.read();
      size=meta.dbsize();
      docs=meta.ndocs;
      file=meta.original;
    }
 catch (    final IOException ex) {
      file=ERROR;
    }
    final int bin=new IOFile(soptions.dbpath(name),IO.RAW).descendants().size();
    final TokenList tl=new TokenList(create ? 4 : 3);
    tl.add(name);
    tl.add(docs + bin);
    tl.add(size);
    if (create)     tl.add(file);
    table.contents.add(tl);
  }
  out.println(table.sort().finish());
  return true;
}
