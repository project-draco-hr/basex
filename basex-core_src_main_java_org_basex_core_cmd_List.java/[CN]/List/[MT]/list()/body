{
  final Table table=new Table();
  table.description=DATABASES_X;
  final boolean create=context.user().has(Perm.CREATE);
  table.header.add(NAME);
  table.header.add(RESOURCES);
  table.header.add(SIZE);
  if (create)   table.header.add(INPUT_PATH);
  for (  final String name : context.filter(Perm.READ,context.databases.listDBs())) {
    String file;
    long dbsize=0;
    int count=0;
    try {
      final MetaData meta=new MetaData(name,options,soptions);
      meta.read();
      dbsize=meta.dbsize();
      file=meta.original;
      count=meta.ndocs + new IOFile(soptions.dbPath(name),IO.RAW).descendants().size();
    }
 catch (    final IOException ex) {
      file=ERROR;
    }
    final TokenList tl=new TokenList(create ? 4 : 3);
    tl.add(name);
    tl.add(count);
    tl.add(dbsize);
    if (create)     tl.add(file);
    table.contents.add(tl);
  }
  out.println(table.sort().finish());
  return true;
}
