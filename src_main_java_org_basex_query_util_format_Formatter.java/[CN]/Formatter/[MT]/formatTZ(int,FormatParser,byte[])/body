{
  final boolean uc=ch(marker,0) == 'Z';
  final boolean mil=uc && ch(marker,1) == 'Z';
  if (num == Short.MAX_VALUE)   return mil ? new byte[]{'J'} : EMPTY;
  final TokenBuilder tb=new TokenBuilder();
  if (!mil || !addMilTZ(num,tb)) {
    if (!uc)     tb.add("GMT");
    final boolean minus=num < 0;
    if (fp.trad && num == 0) {
      tb.add('Z');
    }
 else {
      tb.add(minus ? '-' : '+');
      final TokenParser tp=new TokenParser(fp.primary);
      final int c1=tp.next(), c2=tp.next(), c3=tp.next(), c4=tp.next();
      final int z1=zeroes(c1), z2=zeroes(c2), z3=zeroes(c3), z4=zeroes(c4);
      if (z1 == -1) {
        tb.add(addTZ(num,0,new TokenBuilder("00"))).add(':');
        tb.add(addTZ(num,1,new TokenBuilder("00")));
      }
 else       if (z2 == -1) {
        tb.add(addTZ(num,0,new TokenBuilder().add(c1)));
        if (c2 == -1) {
          if (num % 60 != 0)           tb.add(':').add(addTZ(num,1,new TokenBuilder("00")));
        }
 else {
          final TokenBuilder t=new TokenBuilder().add(z3 == -1 ? '0' : z3);
          if (z3 != -1 && z4 != -1)           t.add(z4);
          tb.add(c2).add(addTZ(num,1,t));
        }
      }
 else       if (z3 == -1) {
        tb.add(addTZ(num,0,new TokenBuilder().add(c1).add(c2)));
        if (c3 == -1) {
          if (num % 60 != 0)           tb.add(':').add(addTZ(num,1,new TokenBuilder("00")));
        }
 else {
          final int c5=tp.next(), z5=zeroes(c5);
          final TokenBuilder t=new TokenBuilder().add(z4 == -1 ? '0' : z4);
          if (z4 != -1 && z5 != -1)           t.add(z5);
          tb.add(c3).add(addTZ(num % 60,1,t));
        }
      }
 else       if (z4 == -1) {
        tb.add(addTZ(num,0,new TokenBuilder().add(c1)));
        tb.add(addTZ(num,1,new TokenBuilder().add(c2).add(c3)));
      }
 else {
        tb.add(addTZ(num,0,new TokenBuilder().add(c1).add(c2)));
        tb.add(addTZ(num,1,new TokenBuilder().add(c3).add(c4)));
      }
    }
  }
  return tb.finish();
}
