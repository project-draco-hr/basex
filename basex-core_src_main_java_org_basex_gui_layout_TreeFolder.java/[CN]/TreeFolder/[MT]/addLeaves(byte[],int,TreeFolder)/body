{
  final TokenBoolMap tbm=data.resources.children(subfolder(),false);
  final List<byte[]> keys=new ArrayList<>(tbm.size());
  for (  final byte[] b : tbm) {
    if (filter.length == 0 || eq(b,filter))     keys.add(b);
  }
  Collections.sort(keys,new Comparator<byte[]>(){
    @Override public int compare(    final byte[] o1,    final byte[] o2){
      return Prop.CASE ? diff(o1,o2) : diff(lc(o1),lc(o2));
    }
  }
);
  final byte[] sub=subfolder();
  int k=0, m=cmax;
  final int ks=keys.size();
  while (k < ks && m-- > 0) {
    final byte[] nm=keys.get(k++);
    target.add(new TreeLeaf(nm,sub,tbm.get(nm),false,tree,data));
  }
  return m;
}
