{
  final Value v=root != null ? ctx.value(root) : checkCtx(ctx);
  Iter res=v.iter();
  final Value cv=ctx.value;
  final long cs=ctx.size;
  final long cp=ctx.pos;
  try {
    for (    final Expr e : steps) {
      final boolean path=!(e instanceof Bang);
      final ValueBuilder vb=new ValueBuilder();
      int nodes=0;
      ctx.size=res.size();
      ctx.pos=1;
      for (Item it; (it=res.next()) != null; ) {
        if (path && !(it instanceof ANode))         NODESPATH.thrw(info,this,it.type);
        ctx.value=it;
        final Iter ir=ctx.iter(e);
        for (Item i; (i=ir.next()) != null; ) {
          if (path && i instanceof ANode)           nodes++;
          vb.add(i);
        }
        ctx.pos++;
      }
      if (nodes > 0 && nodes < vb.size())       EVALNODESVALS.thrw(info);
      if (nodes == vb.size() && path) {
        final NodeSeqBuilder nc=new NodeSeqBuilder().check();
        for (Item it; (it=vb.next()) != null; )         nc.add((ANode)it);
        res=nc.value().cache();
      }
 else {
        res=vb;
      }
    }
    return res;
  }
  finally {
    ctx.value=cv;
    ctx.size=cs;
    ctx.pos=cp;
  }
}
