{
  GroupBy.Spec[] specs=null;
  do {
    final InputInfo ii=info();
    final QNm name=varName();
    final SeqType type=optAsType();
    final Expr by;
    if (type != null || wsConsume(ASSIGN)) {
      if (type != null)       wsCheck(ASSIGN);
      by=check(single(),NOVARDECL);
    }
 else {
      final VarRef vr=scope.resolve(name,ctx,ii);
      boolean dec=false;
      if (vr != null) {
        for (        final Clause f : cl) {
          if (f.declares(vr.var)) {
            dec=true;
            break;
          }
        }
        if (!dec && specs != null) {
          for (          final GroupBy.Spec spec : specs) {
            if (spec.var.is(vr.var)) {
              dec=true;
              break;
            }
          }
        }
      }
      if (!dec)       error(GVARNOTDEFINED,'$' + string(name.string()));
      by=vr;
    }
    final Collation coll=!wsConsumeWs(COLLATION) ? ctx.sc.collation : Collation.get(stringLiteral(),ctx,info(),FLWORCOLL);
    final GroupBy.Spec spec=new GroupBy.Spec(ii,addLocal(name,type,false),by,coll);
    if (specs == null) {
      specs=new GroupBy.Spec[]{spec};
    }
 else {
      for (int i=specs.length; --i >= 0; ) {
        if (specs[i].var.name.eq(spec.var.name)) {
          specs[i].occluded=true;
          break;
        }
      }
      specs=Array.add(specs,spec);
    }
  }
 while (wsConsume(COMMA));
  return specs;
}
