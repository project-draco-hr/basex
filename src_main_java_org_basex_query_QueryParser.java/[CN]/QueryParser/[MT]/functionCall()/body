{
  final int i=ip;
  final QNm name=eQName(null,ctx.sc.nsFunc);
  if (name != null && !keyword(name)) {
    if (wsConsume(PAR1)) {
      final InputInfo ii=info();
      final ExprList argList=new ExprList();
      final int[] holes=argumentList(argList,name.string());
      final Expr[] args=argList.finish();
      alter=FUNCUNKNOWN;
      alterFunc=name;
      ap=ip;
      final Expr ret;
      if (holes != null) {
        final int card=args.length + holes.length;
        final Expr lit=Functions.getLiteral(name,card,ctx,ii), f=lit != null ? lit : FuncLit.unknown(name,card,ctx,ii);
        ret=new PartFunc(ii,f,args,holes);
      }
 else {
        final TypedFunc f=Functions.get(name,args,false,ctx,ii);
        ret=f == null ? null : f.fun;
      }
      if (ret != null) {
        alter=null;
        return ret;
      }
    }
  }
  ip=i;
  return null;
}
