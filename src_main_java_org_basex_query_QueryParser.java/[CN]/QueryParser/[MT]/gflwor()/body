{
  final int s=ctx.vars.size();
  final ForLet[] fl=forLet();
  if (fl == null)   return null;
  Expr where=null;
  if (wsConsumeWs(WHERE)) {
    ap=qp;
    where=check(single(),NOWHERE);
    alter=NOWHERE;
  }
  Var[] group=null;
  if (ctx.xquery3 && wsConsumeWs(GROUP)) {
    wsCheck(BY);
    ap=qp;
    do     group=groupSpec(group);
 while (wsConsume(COMMA));
    alter=GRPBY;
  }
  OrderBy[] order=null;
  final boolean stable=wsConsumeWs(STABLE);
  if (stable)   wsCheck(ORDER);
  if (stable || wsConsumeWs(ORDER)) {
    wsCheck(BY);
    ap=qp;
    do     order=orderSpec(order);
 while (wsConsume(COMMA));
    if (order != null)     order=Array.add(order,new OrderByStable(input()));
    alter=ORDERBY;
  }
  if (!wsConsumeWs(RETURN)) {
    if (alter != null)     error();
    error(where == null ? FLWORWHERE : order == null ? FLWORORD : FLWORRET);
  }
  final Expr ret=check(single(),NORETURN);
  ctx.vars.reset(s);
  return GFLWOR.get(fl,where,order,group,ret,input());
}
