{
  skipWS();
  final int ip=pos;
  final Ann ann=curr('%') ? annotations() : null;
  if (wsConsume(FUNCTION) && wsConsume(PAR1)) {
    final VarScope inner=scope=scope.child();
    final Var[] args=paramList();
    wsCheck(PAR2);
    final SeqType type=optAsType();
    if (ann != null && (ann.contains(Ann.Q_PRIVATE) || ann.contains(Ann.Q_PUBLIC)))     error(INVISIBLE);
    final Expr body=enclosed(NOFUNBODY);
    scope=scope.parent();
    return new InlineFunc(info(),type,args,body,ann,ctx.sc,inner);
  }
  if (ann != null)   error(NOANN);
  pos=ip;
  final QNm name=eQName(null,ctx.sc.funcNS);
  if (name != null && consume('#')) {
    if (keyword(name))     error(RESERVED,name.local());
    final Expr ex=numericLiteral(true);
    if (!(ex instanceof Int))     return ex;
    final long card=ex instanceof Int ? ((Int)ex).itr() : -1;
    if (card < 0 || card > Integer.MAX_VALUE)     error(FUNCUNKNOWN,name);
    final Expr lit=Functions.getLiteral(name,(int)card,ctx,info());
    return lit != null ? lit : FuncLit.unknown(name,card,ctx,info());
  }
  pos=ip;
  return null;
}
