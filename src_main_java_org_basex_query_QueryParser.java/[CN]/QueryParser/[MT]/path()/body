{
  checkInit();
  final int s=consume('/') ? consume('/') ? 2 : 1 : 0;
  if (s > 0)   checkAxis(s == 2 ? Axis.DESC : Axis.CHILD);
  im=ip;
  final Expr ex=step();
  if (ex == null) {
    if (s == 2) {
      if (more())       checkInit();
      error(PATHMISS,found());
    }
    return s == 1 ? new Root(info()) : null;
  }
  final boolean slash=consume('/');
  final boolean step=ex instanceof AxisStep;
  if (!slash && s == 0 && !step)   return ex;
  final ExprList el=new ExprList();
  if (s == 2)   add(el,descOrSelf());
  final Expr root=s > 0 ? new Root(info()) : !step ? ex : null;
  if (root != ex)   add(el,ex);
  if (slash) {
    do {
      final boolean desc=consume('/');
      im=ip;
      if (desc)       add(el,descOrSelf());
      checkAxis(desc ? Axis.DESC : Axis.CHILD);
      final Expr st=step();
      if (st == null)       error(PATHMISS,found());
      if (!(st instanceof Context))       add(el,st);
    }
 while (consume('/'));
  }
  if (el.isEmpty())   add(el,AxisStep.get(info(),Axis.SELF,Test.NOD));
  return Path.get(info(),root,el.finish());
}
