{
  final InputInfo ii=info();
  final QNm name=varName();
  final SeqType type=optAsType();
  final Var var=Var.create(ctx,ii,name,type,null);
  final boolean assign;
  final Expr by;
  if (type != null || wsConsume(ASSIGN)) {
    if (type != null)     wsCheck(ASSIGN);
    by=check(single(),NOVARDECL);
    assign=true;
  }
 else {
    final Var v=checkVar(var.name,GVARNOTDEFINED);
    boolean dec=false;
    for (    final ForLet f : fl) {
      if (f.declares(v)) {
        dec=true;
        break;
      }
    }
    if (!dec)     throw error(GVARNOTDEFINED,v);
    by=new VarRef(ii,v);
    assign=false;
  }
  if (wsConsumeWs(COLLATION)) {
    final byte[] coll=stringLiteral();
    if (!eq(URLCOLL,coll))     throw error(WHICHCOLL,coll);
  }
  ctx.vars.add(var);
  final GroupSpec grp=new GroupSpec(ii,var,by,assign);
  return group == null ? new GroupSpec[]{grp} : Array.add(group,grp);
}
