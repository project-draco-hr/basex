{
  byte[] nm=trim(k);
  if (t == Type.PI) {
    final boolean s=startsWith(k,'\'') || startsWith(k,'"');
    nm=trim(delete(delete(k,'\''),'"'));
    if (!XMLToken.isNCName(nm)) {
      if (s)       error(XPINVNAME,nm);
      error(TESTINVALID,t,k);
    }
    return new KindTest(t,new QNm(nm,ctx,input()),null);
  }
  if (t != Type.ELM && t != Type.ATT)   error(TESTINVALID,t,k);
  Type tp=t;
  final int i=indexOf(nm,',');
  if (i != -1) {
    final QNm test=new QNm(trim(substring(nm,i + 1)),ctx,input());
    if (!eq(test.uri().atom(),XSURI))     error(TYPEUNDEF,test);
    final byte[] ln=test.ln();
    tp=Type.find(test,true);
    if (tp == null && !eq(ln,ANYTYPE) && !eq(ln,ANYSIMPLE) && !eq(ln,UNTYPED))     error(VARUNDEF,test);
    if (tp == Type.ATM || tp == Type.AAT)     tp=null;
    nm=trim(substring(nm,0,i));
  }
  if (nm.length == 1 && nm[0] == '*')   return new KindTest(t,null,tp);
  if (!XMLToken.isQName(nm))   error(TESTINVALID,t,k);
  return new KindTest(t,new QNm(nm,ctx,input()),tp);
}
