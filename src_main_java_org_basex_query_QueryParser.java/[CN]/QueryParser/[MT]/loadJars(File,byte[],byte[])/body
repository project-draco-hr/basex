{
  final JarDesc desc=new JarParser(ctx.context,input()).parse(new IOFile(jarDesc));
  final URL[] urls=new URL[desc.jars.size()];
  int i=0;
  for (  final byte[] jar : desc.jars) {
    final String path=new File(new File(new File(ctx.context.prop.get(Prop.REPOPATH),string(pkgDir)),string(modDir)),string(jar)).toString();
    try {
      urls[i++]=new URL(PkgText.JARPREF + path + "!/");
    }
 catch (    MalformedURLException ex) {
      Util.errln(ex.getMessage());
    }
  }
  Reflect.setJarLoader(new URLClassLoader(urls));
  for (  final byte[] c : desc.classes)   ctx.ns.add(new QNm(concat(token("java:"),c)),input());
}
