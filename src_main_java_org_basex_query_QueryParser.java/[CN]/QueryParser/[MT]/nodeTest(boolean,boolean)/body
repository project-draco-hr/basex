{
  final int i=ip;
  if (consume('*')) {
    if (!consume(':'))     return new NameTest(att);
    return new NameTest(new QNm(ncName(QNAMEINV)),NameTest.Mode.NAME,att);
  }
  if (ctx.xquery3 && consume(EQNAME)) {
    final byte[] uri=bracedURILiteral();
    if (consume('*')) {
      final QNm nm=new QNm(COLON,uri);
      return new NameTest(nm,NameTest.Mode.NS,att);
    }
  }
  final QNm name=eQName(null,SKIPCHECK);
  if (name != null) {
    final int i2=ip;
    if (all && wsConsumeWs(PAR1)) {
      final NodeType type=NodeType.find(name);
      if (type != null)       return kindTest(type);
    }
 else {
      ip=i2;
      if (name.hasPrefix() || !consume(':')) {
        skipWS();
        names.add(new QNmCheck(name,!att));
        return new NameTest(name,NameTest.Mode.STD,att);
      }
      if (consume('*')) {
        final QNm nm=new QNm(concat(name.string(),COLON));
        names.add(new QNmCheck(nm,!att));
        return new NameTest(nm,NameTest.Mode.NS,att);
      }
    }
  }
  ip=i;
  return null;
}
