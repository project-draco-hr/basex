{
  while (true) {
    final int p=qp;
    if (consumeWS(DECLARE)) {
      if (consumeWS(DEFAULT)) {
        if (!defaultNamespaceDecl() && !defaultCollationDecl() && !emptyOrderDecl())         error(DECLINCOMPLETE);
      }
 else       if (consumeWS(BOUNDARY)) {
        boundarySpaceDecl();
      }
 else       if (consumeWS(BASEURI)) {
        baseURIDecl();
      }
 else       if (consumeWS(CONSTRUCTION)) {
        constructionDecl();
      }
 else       if (consumeWS(ORDERING)) {
        orderingModeDecl();
      }
 else       if (consumeWS(REVALIDATION)) {
        revalidationDecl();
      }
 else       if (consumeWS(COPYNS)) {
        copyNamespacesDecl();
      }
 else       if (consumeWS(NSPACE)) {
        namespaceDecl();
      }
 else       if (consumeWS(FTOPTION)) {
        final FTOpt opt=new FTOpt();
        while (ftMatchOption(opt))         ;
        ctx.ftopt.init(opt);
      }
 else {
        qp=p;
        return;
      }
    }
 else     if (consumeWS(IMPORT)) {
      if (consumeWS(SCHEMA)) {
        schemaImport();
      }
 else       if (consumeWS(MODULE)) {
        moduleImport();
      }
 else {
        qp=p;
        return;
      }
    }
 else {
      return;
    }
    skipWS();
    check(';');
  }
}
