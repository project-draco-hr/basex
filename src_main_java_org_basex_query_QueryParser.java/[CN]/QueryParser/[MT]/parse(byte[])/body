{
  file(ctx.sc.baseIO(),ctx.context);
  if (!more())   error(QUERYEMPTY);
  for (int i=0; i < il; ) {
    int cp=input.charAt(i);
    final boolean hs=cp >= Character.MIN_HIGH_SURROGATE;
    if (hs)     cp=input.codePointAt(i);
    if (!XMLToken.valid(cp)) {
      ip=i;
      error(QUERYINV,cp);
    }
    i+=hs ? Character.charCount(cp) : 1;
  }
  final Expr expr=module(uri);
  if (more()) {
    if (alter != null)     error();
    final String rest=rest();
    ip++;
    if (uri != null)     error(MODEXPR,rest);
    error(QUERYEND,rest);
  }
  assignURI(0);
  if (ctx.sc.nsElem != null)   ctx.sc.ns.add(EMPTY,ctx.sc.nsElem,null);
  final byte[] empty=new QNm(EMPTY).eqname();
  if (ctx.sc.decFormats.get(empty) == null) {
    ctx.sc.decFormats.add(empty,new DecFormatter());
  }
  ctx.funcs.check();
  ctx.funcs.checkUp();
  ctx.vars.checkUp();
  expr.checkUp();
  return expr;
}
