{
  if (!mprop.is(MainProp.LOG))   return;
  final Date date=new Date();
  try {
    if (fos != null && !start.equals(DateTime.format(date,DateTime.DATE))) {
      fos.close();
      fos=null;
    }
    if (fos == null) {
      final IOFile dir=mprop.dbpath(".logs");
      dir.md();
      start=DateTime.format(date,DateTime.DATE);
      fos=new FileOutputStream(new IOFile(dir,start + ".log").file(),true);
    }
    final int ml=mprop.num(MainProp.LOGMSGMAXLEN);
    final TokenBuilder tb=new TokenBuilder(DateTime.format(date,DateTime.TIME));
    for (    final Object s : str) {
      tb.add('\t').add(chop(token(s.toString().replaceAll("[\\r\\n ]+"," ")),ml));
    }
    tb.add(Prop.NL);
    fos.write(tb.finish());
    fos.flush();
  }
 catch (  final IOException ex) {
    Util.stack(ex);
  }
}
