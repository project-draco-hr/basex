{
  if (versions.isEmpty())   return null;
  if (dep.versions != null) {
    final HashSet<String> versList=new HashSet<>();
    Collections.addAll(versList,Strings.split(dep.versions,' '));
    for (    final String v : versList)     if (versions.contains(v))     return v;
  }
 else   if (dep.semver != null) {
    final Version semVer=new Version(dep.semver);
    for (    final String v : versions)     if (new Version(v).isCompatible(semVer))     return v;
  }
 else   if (dep.semverMin != null && dep.semverMax != null) {
    final Version min=new Version(dep.semverMin);
    final Version max=new Version(dep.semverMax);
    for (    final String nextVer : versions) {
      final Version v=new Version(nextVer);
      if (v.compareTo(min) >= 0 && v.compareTo(max) < 0)       return nextVer;
    }
  }
 else   if (dep.semverMin != null) {
    final Version semVer=new Version(dep.semverMin);
    for (    final String nextVer : versions) {
      final Version v=new Version(nextVer);
      if (v.isCompatible(semVer) || v.compareTo(semVer) >= 0)       return nextVer;
    }
  }
 else   if (dep.semverMax != null) {
    final Version semVer=new Version(dep.semverMax);
    for (    final String nextVer : versions) {
      final Version v=new Version(nextVer);
      if (v.isCompatible(semVer) || v.compareTo(semVer) <= 0)       return nextVer;
    }
  }
 else {
    return versions.iterator().next();
  }
  return null;
}
