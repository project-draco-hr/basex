{
  final Data data=gui.context.data();
  final DBNodes marked=gui.context.marked;
  final int kind=data.kind(pre);
  final boolean elem=kind == Data.ELEM || kind == Data.DOC;
  Color col=GUIConstants.TEXT;
  Font fnt=font;
  if (marked.find(pre) >= 0) {
    col=colormark3;
    fnt=bfont;
  }
  if (y < -lineH)   return;
  g.setColor(color1);
  g.drawLine(2,y + boxMargin - 1,totalW - 5,y + boxMargin - 1);
  final byte[] name=ViewData.content(data,pre,false);
  int p=gui.context.focused;
  while (p > pre)   p=ViewData.parent(data,p);
  if (pre == p) {
    g.setColor(color2);
    g.fillRect(0,y - boxW - boxMargin,totalW,lineH + 1);
  }
  final int fsz=fontSize;
  if (elem) {
    final int yy=y - boxW - (fsz > 20 ? 6 : 3);
    final Image marker=opened[pre] ? openedMarker : closedMarker;
    g.drawImage(marker,x - lineH,yy,this);
  }
  g.setFont(fnt);
  g.setColor(col);
  final int tw=totalW + 6;
  BaseXLayout.chopString(g,name,x,y - fsz,tw - x - 10,fsz);
  if (gui.context.focused == pre) {
    g.setColor(color4);
    g.drawRect(1,y - boxW - boxMargin,totalW - 3,lineH + 1);
    g.drawRect(2,y - boxW - boxMargin + 1,totalW - 5,lineH - 1);
  }
}
