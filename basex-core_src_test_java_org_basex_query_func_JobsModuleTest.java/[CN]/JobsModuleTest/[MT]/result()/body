{
  query("let $query := " + _JOBS_EVAL.args(SLOW_QUERY) + " return ("+ _HOF_UNTIL.args("  function($result) { " + _JOBS_FINISHED.args("$query") + " }, function($curr) { prof:sleep(100) }, ()")+ ","+ _JOBS_RESULT.args("$query")+ ')',"1");
  String id=query(_JOBS_EVAL.args(SLOW_QUERY));
  while (true) {
    try {
      assertEquals("1",eval(_JOBS_RESULT.args(id)));
      break;
    }
 catch (    final QueryException ex) {
      assertSame(JOBS_RUNNING_X,ex.error());
    }
  }
  id=query(_JOBS_EVAL.args(SLOW_QUERY," map {}"," map { 'cache': false() }"));
  while (true) {
    try {
      eval(_JOBS_RESULT.args(id));
      fail("Result was cached.");
    }
 catch (    final QueryException ex) {
      if (ex.error() == JOBS_UNKNOWN_X)       break;
      assertSame(JOBS_RUNNING_X,ex.error());
    }
  }
}
