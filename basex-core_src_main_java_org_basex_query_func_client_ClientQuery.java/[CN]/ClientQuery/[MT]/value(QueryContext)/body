{
  checkCreate(qc);
  final ClientSession cs=session(qc,false);
  final String query=Token.string(toToken(exprs[1],qc));
  final ValueBuilder vb=new ValueBuilder();
  try (org.basex.api.client.ClientQuery cq=cs.query(query)){
    for (    final Map.Entry<String,Value> binding : toBindings(2,qc).entrySet()) {
      final String k=binding.getKey();
      final Value value=binding.getValue();
      if (k.isEmpty())       cq.context(value);
 else       cq.bind(k,value);
    }
    while (cq.more()) {
      final String result=cq.next();
      vb.add(cq.type().castString(result,qc,sc,info));
    }
    return vb.value();
  }
 catch (  final QueryIOException ex) {
    throw ex.getCause(info);
  }
catch (  final BaseXException ex) {
    final Matcher m=QUERYPAT.matcher(ex.getMessage());
    if (m.find()) {
      final String name=m.group(1), msg=m.group(2);
      final QueryException exc=get(name,msg,info);
      throw exc == null ? new QueryException(info,new QNm(name),msg) : exc;
    }
    throw BXCL_QUERY_X.get(info,ex);
  }
catch (  final IOException ex) {
    throw BXCL_COMM_X.get(info,ex);
  }
}
