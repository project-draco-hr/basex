{
  try {
    if (item instanceof Map) {
      level++;
      out.print('{');
      boolean s=false;
      final TokenSet set=nodups ? new TokenSet() : null;
      final Map m=(Map)item;
      for (      final Item key : m.keys()) {
        final byte[] name=key.string(null);
        if (nodups) {
          if (set.contains(name)) {
            if (adaptive == null)             throw SERDUPL_X.getIO(name);
          }
 else {
            set.put(name);
          }
        }
        if (s)         out.print(',');
        indent();
        string(name);
        out.print(':');
        if (indent)         out.print(' ');
        serialize(m.get(key,null));
        s=true;
      }
      level--;
      indent();
      out.print('}');
    }
 else     if (item instanceof Array) {
      level++;
      out.print('[');
      boolean s=false;
      for (      final Value v : ((Array)item).members()) {
        if (s)         out.print(',');
        indent();
        serialize(v);
        s=true;
      }
      level--;
      indent();
      out.print(']');
    }
 else {
      if (adaptive != null) {
        adaptive.serialize(item);
      }
 else {
        throw SERJSONFUNC_X.getIO(item.type);
      }
    }
  }
 catch (  final QueryException ex) {
    throw new QueryIOException(ex);
  }
  sep=true;
}
