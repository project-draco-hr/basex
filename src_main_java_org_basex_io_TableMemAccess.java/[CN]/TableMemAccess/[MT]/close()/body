{
  if (dirty && pref != null) {
    DataOutput out=new DataOutput(meta.file(pref + 'i'));
    final int blocks=(meta.size + IO.ENTRIES - 1) / IO.ENTRIES;
    out.writeNum(blocks);
    out.writeNum(blocks);
    out.writeNum(meta.size);
    final int[] array=new int[blocks];
    for (int b=0, c=0; b < blocks; ++b, c+=IO.ENTRIES)     array[b]=c;
    out.writeNums(array);
    for (int b=0; b < blocks; ++b)     array[b]=b;
    out.writeNums(array);
    out.close();
    out=new DataOutput(meta.file(pref));
    final byte[] data=new byte[IO.BLOCKSIZE];
    int a=0;
    for (int b=0; b < blocks; ++b) {
      for (int p=0; p < IO.BLOCKSIZE && a < meta.size; p+=16, ++a) {
        copy(buf1[a],data,p);
        copy(buf2[a],data,p + 8);
      }
      out.writeBytes(data);
    }
    out.close();
    dirty=false;
  }
}
