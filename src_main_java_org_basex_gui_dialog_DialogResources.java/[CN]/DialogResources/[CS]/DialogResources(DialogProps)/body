{
  setLayout(new BorderLayout(0,5));
  dialog=dp;
  final DefaultMutableTreeNode rootNode=new DefaultMutableTreeNode();
  tree=new BaseXTree(rootNode,dp).border(4,4,4,4);
  tree.setRootVisible(false);
  tree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
  final ImageIcon xml=BaseXLayout.icon("file_xml");
  final ImageIcon raw=BaseXLayout.icon("file_raw");
  tree.setCellRenderer(new TreeNodeRenderer(xml,raw));
  tree.addTreeSelectionListener(new TreeSelectionListener(){
    @Override public void valueChanged(    final TreeSelectionEvent e){
      TreeNode n=(TreeNode)e.getPath().getLastPathComponent();
      String filt=n.equals(root) ? "" : n.path();
      String trgt=filt + '/';
      if (n.isLeaf()) {
        n=(TreeNode)n.getParent();
        trgt=(n == null || n.equals(root) ? "" : n.path()) + '/';
      }
 else {
        filt=trgt;
      }
      filterText.setText(filt);
      dp.add.target.setText(trgt);
    }
  }
);
  final Data data=dp.gui.context.data();
  final String label=data.meta.name + " (/)";
  root=new TreeRootFolder(token(label),token("/"),tree,data);
  ((DefaultTreeModel)tree.getModel()).insertNodeInto(root,rootNode,0);
  filter=new BaseXButton(FILTER,dp);
  clear=new BaseXButton(CLEAR,dp);
  filter.setEnabled(false);
  clear.setEnabled(false);
  new BaseXPopup(tree,dp.gui,new DeleteCmd(),new RenameCmd());
  final BaseXBack buttons=new BaseXBack();
  buttons.add(filter);
  buttons.add(clear);
  final BaseXBack btn=new BaseXBack().layout(new BorderLayout());
  btn.add(buttons,BorderLayout.EAST);
  filterText=new BaseXTextField(PLEASE_WAIT_D,dp);
  filterText.setEnabled(false);
  BaseXLayout.setWidth(filterText,250);
  final BaseXBack panel=new BaseXBack(new BorderLayout());
  panel.add(filterText,BorderLayout.CENTER);
  panel.add(btn,BorderLayout.SOUTH);
  final JScrollPane sp=new JScrollPane(tree);
  BaseXLayout.setWidth(sp,250);
  add(sp,BorderLayout.CENTER);
  add(panel,BorderLayout.SOUTH);
  new Thread(){
    @Override public void run(){
      tree.setCursor(CURSORWAIT);
      tree.expandPath(new TreePath(root.getPath()));
      filterText.setText("/");
      filterText.setEnabled(true);
      tree.setCursor(CURSORARROW);
      filter.setEnabled(true);
      clear.setEnabled(true);
    }
  }
.start();
}
