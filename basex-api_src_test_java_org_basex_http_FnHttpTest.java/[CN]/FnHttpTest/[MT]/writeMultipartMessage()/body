{
  final HttpRequest req=new HttpRequest();
  req.isMultipart=true;
  req.payloadAtts.put("media-type","multipart/alternative");
  req.payloadAtts.put("boundary","boundary42");
  final Part p1=new Part();
  p1.headers.put("Content-Type","text/plain; charset=us-ascii");
  p1.bodyAtts.put("media-type","text/plain");
  final String plain="PLAIN\r\n";
  p1.bodyContents.add(Str.get(plain));
  final Part p2=new Part();
  p2.headers.put("Content-Type","text/richtext");
  p2.bodyAtts.put("media-type","text/richtext");
  final String rich="RICH\n";
  p2.bodyContents.add(Str.get(rich));
  final Part p3=new Part();
  p3.headers.put("Content-Type","text/x-whatever");
  p3.bodyAtts.put("media-type","text/x-whatever");
  final String fancy="FANCY";
  p3.bodyContents.add(Str.get(fancy));
  req.parts.add(p1);
  req.parts.add(p2);
  req.parts.add(p3);
  final OutputStream out=fakeOutput();
  HttpClient.writePayload(out,req);
  final String expResult="--boundary42" + CRLF + "Content-Type: text/plain; charset=us-ascii"+ CRLF+ CRLF+ plain+ CRLF+ "--boundary42"+ CRLF+ "Content-Type: text/richtext"+ CRLF+ CRLF+ rich+ CRLF+ "--boundary42"+ CRLF+ "Content-Type: text/x-whatever"+ CRLF+ CRLF+ fancy+ CRLF+ "--boundary42--"+ CRLF;
  assertEquals(expResult,out.toString());
}
