{
  checkCreate(qc);
  final String url=string(toToken(exprs[0],qc));
  final JDBCConnections jdbc=jdbc(qc);
  final Connection conn;
  try {
    if (exprs.length > 2) {
      final String user=string(toToken(exprs[1],qc));
      final String pass=string(toToken(exprs[2],qc));
      if (exprs.length == 4) {
        final HashMap<String,String> options=toOptions(3,new Options(),qc).free();
        final Properties props=new Properties();
        for (        final Entry<String,String> entry : options.entrySet()) {
          final String key=entry.getKey(), value=entry.getValue();
          if (!key.equals(AUTOCOMMIT))           props.setProperty(key,value);
        }
        props.setProperty(USER,user);
        props.setProperty(PASS,pass);
        conn=DriverManager.getConnection(url,props);
        if (options.containsKey(AUTOCOMMIT)) {
          conn.setAutoCommit(Strings.yes(options.get(AUTOCOMMIT)));
        }
      }
 else {
        conn=DriverManager.getConnection(url,user,pass);
      }
    }
 else {
      conn=DriverManager.getConnection(url);
    }
    return Int.get(jdbc.add(conn));
  }
 catch (  final SQLException ex) {
    throw BXSQ_ERROR_X.get(info,ex);
  }
}
