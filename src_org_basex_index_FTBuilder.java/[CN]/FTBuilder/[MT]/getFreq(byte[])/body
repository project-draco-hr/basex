{
  int lpre=4;
  final int size=Num.size(vpre);
  int cr=1;
  int co=0;
  int pre=Num.read(vpre,lpre);
  int le=Num.len(vpre,lpre);
  while (lpre < size) {
    while (cr < nodes.size() && pre > nodes.get(cr))     cr++;
    while ((scm == 1 && (cr == nodes.size() || pre < nodes.get(cr))) || scm == 2 && pre == nodes.get(cr - 1)) {
      co++;
      lpre+=le;
      if (lpre >= size)       break;
      pre=Num.read(vpre,lpre);
      le=Num.len(vpre,lpre);
    }
    if (co > 0) {
      maxfreq[cr - 1]=co > maxfreq[cr - 1] ? co : maxfreq[cr - 1];
      freq.add(co);
    }
    if (co > 0)     nmbdocwt[c]++;
    co=0;
    cr++;
  }
  c++;
}
