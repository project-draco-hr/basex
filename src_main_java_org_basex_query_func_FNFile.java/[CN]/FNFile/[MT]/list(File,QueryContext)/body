{
  final File dir;
  try {
    dir=new File(path.getCanonicalPath().replaceAll("[\\\\/]$",""));
  }
 catch (  final IOException ex) {
    throw FILE_PATH.thrw(info,path);
  }
  if (!dir.isDirectory())   FILE_NODIR.thrw(info,dir);
  final boolean rec=optionalBool(1,ctx);
  final Pattern pat=expr.length != 3 ? null : Pattern.compile(IOFile.regex(string(checkStr(expr[2],ctx))),Prop.WIN ? Pattern.CASE_INSENSITIVE : 0);
  final StringList list=new StringList();
  list(dir.getPath().length() + 1,dir,list,rec,pat);
  return new Iter(){
    int c;
    @Override public Item next(){
      return c < list.size() ? Str.get(list.get(c++)) : null;
    }
  }
;
}
