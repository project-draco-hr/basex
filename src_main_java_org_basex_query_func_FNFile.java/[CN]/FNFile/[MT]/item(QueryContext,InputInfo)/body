{
  checkCreate(ctx);
  final File path=expr.length == 0 ? null : new File(string(checkStr(expr[0],ctx)));
switch (sig) {
case _FILE_APPEND:
    return write(path,ctx,true);
case _FILE_APPEND_BINARY:
  return writeBinary(path,ctx,true);
case _FILE_COPY:
return copy(path,ctx,true);
case _FILE_CREATE_DIRECTORY:
return createDirectory(path);
case _FILE_DELETE:
return delete(path,ctx);
case _FILE_MOVE:
return copy(path,ctx,false);
case _FILE_READ_BINARY:
return readBinary(path);
case _FILE_READ_TEXT:
return readText(path,ctx);
case _FILE_WRITE:
return write(path,ctx,false);
case _FILE_WRITE_BINARY:
return writeBinary(path,ctx,false);
case _FILE_EXISTS:
return Bln.get(path.exists());
case _FILE_IS_DIRECTORY:
return Bln.get(path.isDirectory());
case _FILE_IS_FILE:
return Bln.get(path.isFile());
case _FILE_LAST_MODIFIED:
return lastModified(path);
case _FILE_SIZE:
return size(path);
case _FILE_BASE_NAME:
return baseName(path,ctx);
case _FILE_DIR_NAME:
return dirName(path);
case _FILE_PATH_TO_NATIVE:
return pathToNative(path);
case _FILE_RESOLVE_PATH:
return Str.get(path.getAbsolutePath());
case _FILE_PATH_TO_URI:
return pathToUri(path);
default :
return super.item(ctx,ii);
}
}
