{
  final String path=string(checkStr(expr[0],ctx));
  final Pattern pattern;
  try {
    pattern=expr.length == 1 ? null : Pattern.compile(string(checkStr(expr[1],ctx)));
  }
 catch (  final PatternSyntaxException ex) {
    Err.or(input,FILEPATTERN,expr[1]);
    return null;
  }
  return new Iter(){
    String[] files;
    int c=-1;
    @Override public Item next() throws QueryException {
      if (files == null) {
        files=new File(path).list();
        if (files == null)         Err.or(input,FILELIST,path);
      }
      while (++c < files.length) {
        if (pattern == null || pattern.matcher(files[c]).matches())         return Str.get(files[c]);
      }
      return null;
    }
  }
;
}
